{
  "post": [
    {
      "id": 1,
      "title": "D\u00e9finir le langage naturel",
      "slug": "definir-le-langage-naturel",
      "body": "Si une page ne contient pas de d\u00e9finition explicite du langage naturel dans lequel elle est r\u00e9dig\u00e9e, les logiciels risquent de ne pas pouvoir traduire correctement le contenu. Le terme &laquo;&nbsp;langue naturelle&nbsp;&raquo; fait r\u00e9f\u00e9rence \u00e0 la langue utilis\u00e9e pour le contenu de la page, et non au langage de programmation. Ce manque d'information peut entra\u00eener des traductions erron\u00e9es, une mauvaise mise en forme et un contenu difficile \u00e0 comprendre pour les utilisateurs de lecteurs d'\u00e9cran.\r\n\r\nVous pouvez d\u00e9finir la langue naturelle d'une page en utilisant l'attribut `lang` sur l'\u00e9l\u00e9ment `<html>`.\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Le fran\u00e7ais d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n</html>\r\n```\r\n\r\nVous pouvez \u00e9galement d\u00e9finir un dialecte sp\u00e9cifique de la langue de base.\r\n<br>**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Le fran\u00e7ais de France d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr-FR\">\r\n</html>\r\n```\r\n\r\nL'attribut lang est global, ce qui signifie que vous pouvez l'utiliser sur n'importe quel \u00e9l\u00e9ment, bien qu'il puisse ne pas affecter certains d'entre eux. Il peut \u00eatre utile si une page est r\u00e9dig\u00e9e dans une langue mais contient des passages de texte ou m\u00eame des mots isol\u00e9s dans d'autres langues.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Japonais translitt\u00e9r\u00e9 en \u00e9criture latine utilis\u00e9 sur une page \u00e9crite en fran\u00e7ais.**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n    <head></head>\r\n    <body>\r\n        <p>The Wind-Up Bird Chronicle (<span lang=\"ja-Latn\">Nejimakidori Kuronikuru </span>) is a novel published in 1994 by Japanese author Haruki Murakami.</p>\r\n    </body>\r\n</html>\r\n```\r\n\r\nUtilisez la pseudoclasse `:lang()` pour ajuster la typographie et la mise en page pour des langues sp\u00e9cifiques.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;S\u00e9lection de tous les \u00e9l\u00e9ments en langue serbe**\r\n\r\n```css\r\n:lang(sr) {\r\n    font-family: 'Cyrillic font', sans-serif;\r\n}\r\n```\r\n\r\nLes technologies d'assistance et autres logiciels peuvent ne pas \u00eatre en mesure de d\u00e9terminer automatiquement la langue naturelle d'une page. Certaines fonctions du HTML et des feuilles de style en cascade (CSS) s'appuient sur ces informations pour aider \u00e0 localiser le contenu et offrir une excellente exp\u00e9rience utilisateur.\r\n\r\nVous devez d\u00e9finir la langue de chaque page de mani\u00e8re programmatique et explicite en utilisant l'attribut lang sur l'\u00e9l\u00e9ment `<html>`, comme le montre [l'exemple 1](#exemple-1). Pour les passages de texte \u00e9crits dans une langue diff\u00e9rente de la langue principale de la page, vous pouvez \u00e9galement utiliser l'attribut, comme le montre [l'exemple 3](#exemple-3). Cela permet aux lecteurs d'\u00e9cran d'am\u00e9liorer la prononciation en modifiant les profils vocaux en fonction de certains mots ou phrases.\r\n\r\nUtilisez cette fonctionnalit\u00e9 avec parcimonie car le changement de profil vocal peut \u00eatre g\u00eanant en interrompant le flux de lecture. Pour les mots \u00e9trangers bien \u00e9tablis, ce n'est pas forc\u00e9ment n\u00e9cessaire. Des exemples en allemand sont des mots anglais comme &laquo;&nbsp;Download&nbsp;&raquo;, &laquo;&nbsp;Workshop&nbsp;&raquo; ou &laquo;&nbsp;Link&nbsp;&raquo;.\r\n\r\nLa valeur de l'attribut `lang` doit \u00eatre une <a href=\"https://datatracker.ietf.org/doc/html/rfc5646\" target=\"_blank\">balise de langue BCP 47</a> valide, compos\u00e9e d'une ou plusieurs balises secondaires. Un *subtag* est une s\u00e9quence de caract\u00e8res alphanum\u00e9riques distingu\u00e9s et s\u00e9par\u00e9s des autres subtags par un trait d'union.\r\n\r\nLa *sous-\u00e9tiquette* de langue est un code de 2 ou 3 caract\u00e8res qui d\u00e9finit la langue principale : par exemple, `en` pour l'anglais, `de` pour l'allemand ou `fr` pour le fran\u00e7ais, comme le montre [l'exemple 5](#exemple-5).\r\n\r\n**<span id=\"exemple-5\">Exemple 5</span>&nbsp;&ndash;&nbsp;L'espagnol d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<html lang=\"es\"></html>\r\n```\r\n\r\n## Sous-\u00e9tiquettes d'\u00e9criture\r\nLa sous-\u00e9tiquette d'\u00e9criture facultative est un code de 4 caract\u00e8res qui d\u00e9finit le syst\u00e8me d'\u00e9criture utilis\u00e9 pour la langue, comme le montre [l'exemple 6](#exemple-6).\r\n\r\n**<span id=\"exemple-6\">Exemple 6</span>&nbsp;&ndash;&nbsp;Un nom en \u00e9criture cyrillique \u00e0 c\u00f4t\u00e9 du m\u00eame nom en \u00e9criture latine marqu\u00e9 comme tel**\r\n\r\n```html\r\n\u041d\u0438\u043a\u043e\u043b\u0430 \u0408\u043e\u043a\u0438\u045b (<span lang=\"sr-Latn\">Nikola Joki\u0107</span>).\r\n```\r\n\r\nLa *sous-\u00e9tiquette* facultative de r\u00e9gion est g\u00e9n\u00e9ralement un code de pays \u00e0 2 caract\u00e8res \u00e9crit en majuscules et d\u00e9finit un dialecte de la langue de base, comme le montre [l'exemple 7](#exemple-7).\r\n\r\n**<span id=\"exemple-7\">Exemple 7</span>&nbsp;&ndash;&nbsp;L'allemand autrichien d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"de-AT\">\r\n</html>\r\n```\r\nVous devez utiliser le code de langue primaire \u00e0 deux caract\u00e8res et n'ajouter des balises secondaires de r\u00e9gion que lorsqu'il est n\u00e9cessaire de diff\u00e9rencier le contenu dans diff\u00e9rents dialectes qui peuvent ne pas \u00eatre mutuellement compr\u00e9hensibles. Pour les utilisateurs de lecteurs d'\u00e9cran, le fait de ne pas ajouter de sous-tags de r\u00e9gion ne devrait pas faire de diff\u00e9rence car ils sont g\u00e9n\u00e9ralement ignor\u00e9s par le logiciel.\r\n\r\nVous pouvez trouver une liste de toutes les \u00e9tiquettes et sous-\u00e9tiquettes dans la <a href=\"https://r12a.github.io/app-subtags/\" target=\"_blank\">liste des sous-\u00e9tiquettes de la langue BCP 47</a>.\r\n\r\n## Les avantages\r\nL'attribut `lang` est puissant et affecte de nombreux aspects de l'accessibilit\u00e9 du web et de l'exp\u00e9rience utilisateur en g\u00e9n\u00e9ral. Voici ses principaux avantages :\r\n\r\n### La technologie d'assistance\r\nLes synth\u00e9tiseurs vocaux qui prennent en charge plusieurs langues adaptent leur prononciation et leur syntaxe \u00e0 la langue de la page, pronon\u00e7ant le texte avec l'accent et la prononciation appropri\u00e9s.\r\n\r\nPour une page au contenu allemand dont la langue est r\u00e9gl\u00e9e sur l'anglais (`lang=\"en\"`), le logiciel de lecture d'\u00e9cran peut choisir un profil de voix synth\u00e9tique anglais et lire le texte allemand avec une prononciation anglaise. Si vous ne d\u00e9finissez aucune langue, les lecteurs d'\u00e9cran risquent de se rabattre sur les param\u00e8tres par d\u00e9faut du syst\u00e8me de l'utilisateur, ce qui peut ne pas \u00eatre appropri\u00e9. Le r\u00e9sultat peut \u00eatre difficile \u00e0 comprendre, confus ou m\u00eame compl\u00e8tement erron\u00e9.\r\n\r\nTous les lecteurs d'\u00e9cran ne prennent pas en charge de nombreuses langues. Certains logiciels changent de langue automatiquement, tandis que pour d'autres, les utilisateurs doivent installer et configurer manuellement des voix ou des packs de langues.\r\n\r\nLa d\u00e9finition de l'attribut permet \u00e9galement au logiciel de traduction en braille d'optimiser la sortie et de l'emp\u00eacher de cr\u00e9er par erreur des <a href=\"https://www.rnib.org.uk/living-with-sight-loss/education-and-learning/braille-tactile-codes/contracted-grade-2-braille-explained/\" target=\"_blank\">contractions en braille de grade 2</a>.\r\n\r\n### La traduction\r\nLes outils de traduction comme Google Translate utilisent les informations de l'attribut `lang` pour traduire le contenu de la page. Bien que ce type de logiciel soit g\u00e9n\u00e9ralement bon pour d\u00e9tecter automatiquement la langue de la page, un d\u00e9calage entre la langue r\u00e9elle et la langue d\u00e9finie peut donner lieu \u00e0 des <a href=\"https://www.matuzo.at/blog/lang-attribute/\" target=\"_blank\">traductions inattendues et non souhait\u00e9es</a>.\r\n\r\n### Les citations\r\nLes guillemets peuvent changer en fonction de la langue naturelle de la page. Par exemple, l'anglais utilise des guillemets diff\u00e9rents de ceux de l'allemand ou du fran\u00e7ais, et la bonne d\u00e9finition de lang aide les navigateurs \u00e0 choisir les glyphes appropri\u00e9s, comme l'illustrent les exemples [8](#exemple-8), [9](#exemple-9) et [10](#exemple-10).\r\n\r\n**<span id=\"exemple-8\">Exemple&nbsp;8</span>&nbsp;&ndash;&nbsp;Guillemets automatiques \u00e0 l'aide de l'\u00e9l\u00e9ment `<q>` en anglais**\r\n\r\n```html\r\n<p lang=\"en\">\r\n    <q>A quote in English.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \"A quote in English.\" -->\r\n```\r\n**<span id=\"exemple-9\">Exemple&nbsp;9</span>&nbsp;&ndash;&nbsp;Guillemets automatiques \u00e0 l'aide de l'\u00e9l\u00e9ment `<q>` en allemand**\r\n\r\n```html\r\n<p lang=\"de\">\r\n<q>Ein Zitat auf Deutsch.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \u201eEin Zitat auf Deutsch.\" -->\r\n```\r\n**<span id=\"exemple-10\">Exemple&nbsp;10</span>&nbsp;&ndash;&nbsp;Guillemets automatiques utilisant l'\u00e9l\u00e9ment `<q>` en fran\u00e7ais**\r\n\r\n```html\r\n<p lang=\"fr\">\r\n<q>Une citation en fran\u00e7ais.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \u00ab Une citation en fran\u00e7ais. \u00bb -->\r\n```\r\n### La c\u00e9sure\r\nL'attribut `lang` peut affecter <a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/hyphens\" target=\"_blank\">la c\u00e9sure</a> dans les CSS. Voir l'[exemple&nbsp;11](#exemple-11).\r\n\r\n**<span id=\"exemple-11\">Exemple&nbsp;11</span>&nbsp;&ndash;&nbsp;Un paragraphe avec une largeur maximale de 28 caract\u00e8res et une c\u00e9sure activ\u00e9e**\r\n\r\n```css\r\np {\r\n    max-width: 28ch;\r\n    hyphens: auto;\r\n}\r\n```\r\nDans les exemples&nbsp;[12](#exemple-12), [13](#exemple-13) et [14](#exemple-14), vous pouvez voir comment le m\u00eame paragraphe \u00e9crit en allemand, avec une valeur d'attribut lang diff\u00e9rente, est rendu diff\u00e9remment dans Google Chrome. Les mots ne s'interrompent pas du tout ou s'interrompent \u00e0 des positions diff\u00e9rentes. Seuls le premier et le deuxi\u00e8me exemples sont corrects. Il convient de noter que les navigateurs se comportent diff\u00e9remment.\r\n\r\n**<span id=\"exemple-12\">Exemple&nbsp;12</span>&nbsp;&ndash;&nbsp;Texte allemand correctement coup\u00e9 par un trait d'union dans un paragraphe d\u00e9fini comme allemand**\r\n\r\n```html\r\n<p lang=\"de\">\r\nWeit hinten, hinter den Wortbergen, fern der L\u00e4nder Vokalien und Konsonantien\r\nleben die Blindtexte. Abgeschieden wohnen sie in Buchstabhausen an der K\u00fcste\r\ndes Semantik, eines gro\u00dfen Sprachozeans. Ein kleines B\u00e4chlein namens Duden\r\nflie\u00dft durch ihren Ort und versorgt sie mit den n\u00f6tigen Regelialien.\r\n</p>\r\n<!-- R\u00e9sultat :\r\nWeit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und Konso-\r\n     nantien leben die Blindtexte. Abge-\r\n     schieden wohnen sie in Buchstab-\r\n     hausen an der K\u00fcste des Semantik,\r\n     eines gro\u00dfen Sprachozeans.\r\n     -->\r\n```\r\n**<span id=\"exemple-13\">Exemple&nbsp;13</span>&nbsp;&ndash;&nbsp;Pas de c\u00e9sure du texte allemand dans un paragraphe d\u00e9fini comme anglais**\r\n\r\n```html\r\n     <p lang=\"en\">\r\n     Weit hinten,\u2026\r\n     </p>\r\n     <!-- R\u00e9sultat :\r\n     Weit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und\r\n     Konsonantien leben die Blindtexte.\r\n     Abgeschieden wohnen sie in\r\n     Buchstabhausen an der K\u00fcste des\r\n     Semantik, eines gro\u00dfen\r\n     Sprachozeans.\r\n     -->\r\n```\r\n**<span id=\"exemple-14\">Exemple&nbsp;14</span>&nbsp;&ndash;&nbsp;Trait d'union incorrect du texte allemand dans un paragraphe d\u00e9fini comme fran\u00e7ais**\r\n\r\n```html\r\n     <p lang=\"fr\">\r\n     Weit hinten,\u2026\r\n     </p>\r\n     <!-- R\u00e9sultat :\r\n     Weit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und Konso-\r\n     nantien leben die Blindtexte. Abges-\r\n     chieden wohnen sie in Buchstabhau-\r\n     sen an der K\u00fcste des Semantik, eines\r\n     gro\u00dfen Sprachozeans.\r\n     -->\r\n```\r\n### S\u00e9lection des polices\r\n\r\nLes navigateurs peuvent s\u00e9lectionner <a href=\"https://www.w3.org/International/questions/qa-lang-why#fonts\" target=\"_blank\">des polices adapt\u00e9es</a> \u00e0 la langue pour afficher les d\u00e9tails des caract\u00e8res id\u00e9ographiques qui varient d'une langue \u00e0 l'autre, tels que le chinois, le japonais et le cor\u00e9en (connus sous le nom de \"langues CJK\").\r\n\r\n### Optimisation des moteurs de recherche (SEO)\r\n\r\nUne bonne d\u00e9finition du langage naturel peut am\u00e9liorer la qualit\u00e9 des r\u00e9sultats de recherche en aidant les moteurs de recherche \u00e0 la localisation.\r\n\r\n### Contr\u00f4les de formulaires\r\n\r\nDans certains navigateurs, l'attribut `lang` affecte \u00e9galement la mise en forme des contr\u00f4les de formulaire. Par exemple, <a href=\"https://www.mozilla.org/fr/firefox/new/\" target=\"_blank\">Firefox</a> affiche les bons caract\u00e8res d\u00e9cimaux dans les champs de saisie des nombres en fonction de la langue.\r\n",
      "created": "2025-05-29T12:47:21.648027",
      "updated": "2025-05-29T12:47:21.648038",
      "status_id": 1
    },
    {
      "id": 2,
      "title": "OWASP Top 10 (\u00c9dition 2021) : Comment Django contribue \u00e0 s\u00e9curiser vos applications web ?",
      "slug": "owasp-top-10-edition-2021-comment-django-contribue-a-securiser-vos-applications-web",
      "body": "L\u2019**OWASP** (*Open Web Application Security Project*) est une organisation \u00e0 but non lucratif qui \u0153uvre pour am\u00e9liorer la s\u00e9curit\u00e9 des applications web. Son c\u00e9l\u00e8bre classement **OWASP Top 10**, mis \u00e0 jour en 2021, identifie les vuln\u00e9rabilit\u00e9s les plus critiques affectant les applications modernes, sur la base d\u2019analyses portant sur plus de 500 000 applications web.\r\n\r\nDans cet article, nous nous int\u00e9resserons \u00e0 la mani\u00e8re dont **Django**, le framework web Python, permet de mitiger ces menaces par ses m\u00e9canismes int\u00e9gr\u00e9s et sa philosophie de d\u00e9veloppement s\u00e9curis\u00e9.\r\n\r\n## D\u00e9faillances du contr\u00f4le d\u2019acc\u00e8s\r\nLes d\u00e9faillances du contr\u00f4le d\u2019acc\u00e8s repr\u00e9sentent l'une des vuln\u00e9rabilit\u00e9s les plus critiques identifi\u00e9es par l\u2019OWASP. Elles se produisent lorsque des utilisateurs peuvent acc\u00e9der \u00e0 des ressources ou effectuer des actions qui devraient leur \u00eatre interdites \u2014 qu\u2019il s\u2019agisse de consulter des donn\u00e9es sensibles, de modifier le profil d\u2019un autre utilisateur, ou d\u2019acc\u00e9der \u00e0 des fonctionnalit\u00e9s r\u00e9serv\u00e9es aux administrateurs.\r\n\r\n### Comment Django se positionne-t-il face \u00e0 cette menace ?\r\n**Django propose plusieurs m\u00e9canismes robustes pour mettre en \u0153uvre un contr\u00f4le d\u2019acc\u00e8s efficace :**\r\n\r\n- **Les mixins `LoginRequiredMixin` et `PermissionRequiredMixin`** permettent de restreindre facilement l\u2019acc\u00e8s aux vues bas\u00e9es sur les classes, en imposant l\u2019authentification ou des permissions sp\u00e9cifiques.\r\n- **Le syst\u00e8me de permissions int\u00e9gr\u00e9** offre une granularit\u00e9 fine : chaque mod\u00e8le peut \u00eatre associ\u00e9 \u00e0 des permissions de lecture, d\u2019\u00e9criture ou de suppression. Il est \u00e9galement possible de d\u00e9finir des permissions personnalis\u00e9es selon les besoins m\u00e9tier.\r\n- **Les d\u00e9corateurs `@login_required` et `@permission_required`** peuvent \u00eatre utilis\u00e9s sur les vues fonctionnelles pour un contr\u00f4le simple et explicite.\r\n- **Les objets `request.user` et `request.user.has_perm()`** permettent de v\u00e9rifier dynamiquement, c\u00f4t\u00e9 serveur, si l\u2019utilisateur dispose bien des autorisations n\u00e9cessaires pour une action donn\u00e9e.\r\n- **La gestion des groupes (`Group`)** permet de centraliser les permissions pour plusieurs utilisateurs, ce qui est particuli\u00e8rement utile dans des applications complexes.\r\n\r\nDjango ne se contente pas de proposer des outils techniques : il incite \u00e0 adopter une discipline de conception respectant le principe de moindre privil\u00e8ge. En combinant ses outils natifs avec une r\u00e9flexion rigoureuse sur les droits des utilisateurs, le framework permet de pr\u00e9venir efficacement la plupart des d\u00e9faillances de contr\u00f4le d\u2019acc\u00e8s.\r\n\r\n## D\u00e9faillances cryptographiques\r\nLes d\u00e9faillances cryptographiques surviennent lorsqu\u2019un syst\u00e8me repose sur des m\u00e9canismes de chiffrement ou de hachage obsol\u00e8tes, mal configur\u00e9s ou insuffisamment robustes. Ces erreurs exposent les donn\u00e9es sensibles \u2013 telles que les mots de passe, les jetons d\u2019authentification ou les informations personnelles \u2013 \u00e0 des risques de compromission, de falsification ou d\u2019interception.\r\n\r\n### Comment Django prot\u00e8ge-t-il les donn\u00e9es sensibles ?\r\n**Django int\u00e8gre par d\u00e9faut des pratiques cryptographiques solides, notamment :**\r\n\r\n- **Un m\u00e9canisme de hachage robuste pour les mots de passe**, utilisant des algorithmes \u00e9prouv\u00e9s comme **PBKDF2, Bcrypt, et Argon2**. Ces m\u00e9thodes sont con\u00e7ues pour r\u00e9sister aux attaques par force brute et rendent extr\u00eamement co\u00fbteuse la r\u00e9cup\u00e9ration d\u2019un mot de passe en clair \u00e0 partir d\u2019un hash.\r\n- **Une gestion centralis\u00e9e et s\u00e9curis\u00e9e des secrets via le param\u00e8tre** `SECRET_KEY`, utilis\u00e9 notamment pour signer les cookies, les jetons CSRF, ou encore les sessions utilisateur. Il est essentiel pour assurer l\u2019int\u00e9grit\u00e9 et la confidentialit\u00e9 des \u00e9changes entre le client et le serveur.\r\n\r\n**Attention** : il est imp\u00e9ratif de **ne jamais exposer** la variable `SECRET_KEY` dans votre code source ou dans un d\u00e9p\u00f4t public. Pour renforcer la s\u00e9curit\u00e9, stockez-la dans des variables d\u2019environnement ou un coffre-fort num\u00e9rique adapt\u00e9 (comme HashiCorp Vault, AWS Secrets Manager, etc.).\r\n\r\nEn fournissant une base cryptographique fiable et des recommandations claires, Django permet de r\u00e9duire consid\u00e9rablement les risques li\u00e9s \u00e0 une mauvaise impl\u00e9mentation de la s\u00e9curit\u00e9 des donn\u00e9es. Toutefois, la vigilance du d\u00e9veloppeur reste de mise : le choix des bons algorithmes et la gestion rigoureuse des secrets sont des responsabilit\u00e9s \u00e0 ne pas n\u00e9gliger.\r\n\r\n## Injections\r\nLes failles d\u2019injection comptent parmi les vuln\u00e9rabilit\u00e9s les plus critiques et les plus courantes dans les applications web. Elles permettent \u00e0 un attaquant d\u2019introduire des donn\u00e9es malveillantes dans une requ\u00eate \u2014 souvent SQL ou HTML \u2014 afin d\u2019alt\u00e9rer le comportement attendu de l\u2019application. Ces attaques peuvent entra\u00eener des acc\u00e8s non autoris\u00e9s \u00e0 la base de donn\u00e9es, des fuites de donn\u00e9es sensibles, voire une compromission totale du syst\u00e8me.\r\n\r\n### Comment Django pr\u00e9vient-il les risques d\u2019injection ?\r\n**Django fournit des m\u00e9canismes robustes pour pr\u00e9venir les attaques d\u2019injection, notamment :**\r\n\r\n- **Un ORM (Object-Relational Mapper) s\u00e9curis\u00e9**, qui repose sur des **requ\u00eates param\u00e9tr\u00e9es.** En encapsulant automatiquement les valeurs des param\u00e8tres, Django emp\u00eache l\u2019ex\u00e9cution de code arbitraire via les champs utilisateur. Cela prot\u00e8ge efficacement contre les attaques par injection SQL.\r\n- **Un syst\u00e8me de templates s\u00e9curis\u00e9** qui applique **l\u2019\u00e9chappement automatique** des variables inject\u00e9es dans le HTML. Par d\u00e9faut, toute donn\u00e9e affich\u00e9e dans une vue Django est consid\u00e9r\u00e9e comme potentiellement dangereuse et est donc \u00e9chapp\u00e9e pour \u00e9viter les attaques XSS (Cross-Site Scripting).\r\n\r\n**Attention** : lorsque vous utilisez des requ\u00eates brutes comme `raw()` ou `extra()`, vous contournez les protections de l\u2019ORM. Dans ce cas, **vous \u00eates responsable** de la s\u00e9curisation des donn\u00e9es inject\u00e9es. Une vigilance accrue s\u2019impose.\r\n\r\nGr\u00e2ce \u00e0 ces m\u00e9canismes, Django limite fortement les vecteurs d\u2019injection. Toutefois, la s\u00e9curit\u00e9 repose aussi sur les bonnes pratiques du d\u00e9veloppeur : valider et nettoyer les entr\u00e9es utilisateur, \u00e9viter l\u2019ex\u00e9cution de code dynamique, et restreindre les permissions en base de donn\u00e9es restent des mesures essentielles.\r\n\r\n## Conception non s\u00e9curis\u00e9e\r\n\r\nLa conception non s\u00e9curis\u00e9e d\u00e9signe l\u2019absence de m\u00e9canismes de s\u00e9curit\u00e9 d\u00e8s les premi\u00e8res phases de d\u00e9veloppement d\u2019une application. Elle ne rel\u00e8ve pas d\u2019un simple oubli de configuration, mais d\u2019un manque de r\u00e9flexion globale sur la s\u00e9curit\u00e9 : mod\u00e8les de menace inexistants, absence de mesures d\u00e9fensives durables, ou encore m\u00e9connaissance des vecteurs d\u2019attaque.\r\n\r\nIl ne s\u2019agit pas ici d\u2019un d\u00e9faut d\u2019impl\u00e9mentation, mais bien d\u2019un d\u00e9faut de conception. Une telle lacune rend l\u2019application vuln\u00e9rable \u00e0 un large \u00e9ventail d\u2019attaques, souvent impossibles \u00e0 corriger sans une refonte partielle du syst\u00e8me.\r\n\r\n### Django encourage une approche s\u00e9curis\u00e9e par d\u00e9faut :\r\n**Le framework Django int\u00e8gre nativement des pratiques de s\u00e9curit\u00e9 qui incitent \u00e0 une architecture r\u00e9siliente :**\r\n\r\n- **La philosophie \"secure by default\"** : de nombreux composants sont con\u00e7us pour restreindre les comportements dangereux. Par exemple, les protections CSRF (Cross-Site Request Forgery), l\u2019\u00e9chappement automatique dans les templates, ou la gestion rigoureuse des sessions sont activ\u00e9s par d\u00e9faut.\r\n- **Une documentation abondante et claire** d\u00e9di\u00e9e aux probl\u00e9matiques de s\u00e9curit\u00e9, permettant aux d\u00e9veloppeurs d\u2019int\u00e9grer de bonnes pratiques d\u00e8s la phase de conception.\r\n- **Des options de configuration explicites** pour les param\u00e8tres critiques comme les en-t\u00eates HTTP de s\u00e9curit\u00e9 (`SECURE_*`), les politiques de cookies, ou les m\u00e9canismes de hachage des mots de passe.\r\n\r\nEn r\u00e9sum\u00e9, si Django offre une base s\u00e9curis\u00e9e, c\u2019est au d\u00e9veloppeur d\u2019adopter une posture proactive : int\u00e9grer la s\u00e9curit\u00e9 d\u00e8s la phase de conception, penser en termes de sc\u00e9narios d\u2019attaque, et effectuer des revues r\u00e9guli\u00e8res d\u2019architecture sont des habitudes indispensables \u00e0 la cr\u00e9ation de syst\u00e8mes robustes.\r\n\r\n## Mauvaise configuration de s\u00e9curit\u00e9\r\n\r\nUne mauvaise configuration de s\u00e9curit\u00e9 survient lorsque des param\u00e8tres critiques ne sont pas correctement d\u00e9finis, que des composants par d\u00e9faut sont laiss\u00e9s activ\u00e9s en production, ou encore lorsque des services inutiles restent accessibles. Ces n\u00e9gligences exposent l\u2019application \u00e0 des vecteurs d\u2019attaque souvent \u00e9vitables.\r\n\r\nCe type de vuln\u00e9rabilit\u00e9 est particuli\u00e8rement courant : il peut d\u00e9couler de l\u2019usage de configurations inad\u00e9quates en environnement de production, de l\u2019oubli de d\u00e9sactiver les d\u00e9bogueurs, ou d\u2019une m\u00e9connaissance des options de s\u00e9curit\u00e9 offertes par le framework.\r\n\r\n**Django fournit plusieurs garde-fous contre les erreurs de configuration :**\r\n- **Le param\u00e8tre `DEBUG`**, qui doit imp\u00e9rativement \u00eatre d\u00e9sactiv\u00e9 en production. En effet, activ\u00e9, il r\u00e9v\u00e8le des informations sensibles sur l\u2019\u00e9tat interne de l\u2019application, les erreurs et les variables de contexte.\r\n- **Les param\u00e8tres de s\u00e9curit\u00e9 HTTP** (`SECURE_*`), tels que :\r\n\t- `SECURE_SSL_REDIRECT` : redirige automatiquement tout le trafic HTTP vers HTTPS.\r\n\t- `SECURE_HSTS_SECONDS` : active la politique HSTS pour inciter les navigateurs \u00e0 n\u2019utiliser que des connexions s\u00e9curis\u00e9es.\r\n\t- `SECURE_BROWSER_XSS_FILTER`, `SECURE_CONTENT_TYPE_NOSNIFF`, etc.\r\n- **Le contr\u00f4le des h\u00f4tes autoris\u00e9s** (`ALLOWED_HOSTS`) : ce param\u00e8tre restreint les domaines autoris\u00e9s \u00e0 interagir avec l\u2019application, \u00e9vitant les attaques de type Host Header Injection.\r\n- **La gestion des erreurs** : en production, les pages d\u2019erreur doivent \u00eatre personnalis\u00e9es afin de ne divulguer aucun d\u00e9tail technique.\r\n\r\n**Attention**: Une configuration n\u00e9glig\u00e9e transforme une application bien con\u00e7ue en cible facile. Il est vivement conseill\u00e9 de revoir r\u00e9guli\u00e8rement les param\u00e8tres de d\u00e9ploiement, d\u2019automatiser les v\u00e9rifications via des tests d\u2019int\u00e9gration et de se r\u00e9f\u00e9rer aux recommandations officielles.\r\n\r\n\r\n## Composants vuln\u00e9rables et obsol\u00e8tes\r\n\r\nCette vuln\u00e9rabilit\u00e9 r\u00e9sulte de l\u2019utilisation de biblioth\u00e8ques, d\u00e9pendances ou modules dont des failles de s\u00e9curit\u00e9 ont \u00e9t\u00e9 identifi\u00e9es mais non corrig\u00e9es. Elle est d\u2019autant plus critique que ces composants sont souvent int\u00e9gr\u00e9s au c\u0153ur du fonctionnement de l\u2019application.\r\n\r\nLes menaces peuvent provenir de :\r\n\r\n- biblioth\u00e8ques open-source non maintenues,\r\n- d\u00e9pendances non mises \u00e0 jour,\r\n- composants tiers activ\u00e9s sans v\u00e9rification de leur int\u00e9grit\u00e9 ni de leur provenance.\r\n\r\n**Django et l\u2019\u00e9cosyst\u00e8me Python offrent plusieurs leviers de pr\u00e9vention :**\r\n- **Le fichier** `requirements.txt` ou `pyproject.toml`, qui permet de verrouiller les versions des d\u00e9pendances et d\u2019en suivre l\u2019\u00e9volution de mani\u00e8re contr\u00f4l\u00e9e.\r\n- **Les outils d\u2019audit automatique**, tels que :\r\n\t- `pip-audit` ou `safety`, pour analyser les d\u00e9pendances \u00e0 la recherche de vuln\u00e9rabilit\u00e9s connues.\r\n\t- `dependabot` ou `renovate` (si vous utilisez GitHub ou GitLab), qui sugg\u00e8rent des mises \u00e0 jour d\u00e8s qu\u2019une faille est identifi\u00e9e.\r\n- **La documentation Django** elle-m\u00eame, r\u00e9guli\u00e8rement mise \u00e0 jour pour corriger ou contourner des failles affectant ses versions ant\u00e9rieures. Il est donc crucial de suivre les notes de version et les bulletins de s\u00e9curit\u00e9 publi\u00e9s par l\u2019\u00e9quipe Django.\r\n\r\nUn composant vuln\u00e9rable est une porte d\u2019entr\u00e9e potentielle pour les attaquants. Adopter une d\u00e9marche de veille proactive et maintenir un registre clair des d\u00e9pendances est indispensable \u00e0 la s\u00e9curisation de votre application.\r\n\r\n## Identification et authentification d\u00e9faillantes\r\n\r\nCette cat\u00e9gorie recouvre les failles li\u00e9es \u00e0 une mauvaise gestion de l'identit\u00e9 des utilisateurs et des m\u00e9canismes d\u2019authentification. Elle inclut, entre autres, les mots de passe faibles, l\u2019absence de protection contre les attaques par force brute, ou encore des m\u00e9canismes d\u2019authentification non s\u00e9curis\u00e9s.\r\n\r\nUne authentification d\u00e9faillante peut permettre \u00e0 un attaquant d\u2019usurper l\u2019identit\u00e9 d\u2019un utilisateur l\u00e9gitime, y compris un administrateur.\r\n**Django int\u00e8gre plusieurs protections robustes :**\r\n- **Un syst\u00e8me d\u2019authentification **int\u00e9gr\u00e9, avec prise en charge des sessions, des mots de passe hach\u00e9s (via `PBKDF2` par d\u00e9faut), et des permissions par utilisateur ou groupe.\r\n- **Des outils** pour renforcer la s\u00e9curit\u00e9, comme :\r\n\t- la prise en charge de politiques de mot de passe via des biblioth\u00e8ques tierces (`django-password-validator`, `django-axes`, etc.),\r\n\t- le blocage temporaire ou d\u00e9finitif apr\u00e8s plusieurs tentatives \u00e9chou\u00e9es de connexion,\r\n\t- l\u2019authentification multi-facteur (2FA), facilement int\u00e9grable via des packages comme `django-otp` ou `django-two-factor-auth`.\r\n- **Des signaux** (`signals`) **Django** tels que `user_logged_in`, `user_login_failed` ou `user_logged_out`, permettant de d\u00e9clencher des alertes ou des actions sp\u00e9cifiques en cas d'\u00e9v\u00e9nements li\u00e9s \u00e0 la connexion.\r\n\r\nUn syst\u00e8me d\u2019authentification mal con\u00e7u est souvent le maillon faible de la cha\u00eene de s\u00e9curit\u00e9. Une politique rigoureuse, alli\u00e9e \u00e0 un audit r\u00e9gulier de vos points d\u2019acc\u00e8s, est essentielle.\r\n\r\n\r\n## \u00c9checs en mati\u00e8re d\u2019int\u00e9grit\u00e9 logicielle\r\n\r\nCette cat\u00e9gorie regroupe les vuln\u00e9rabilit\u00e9s li\u00e9es \u00e0 l\u2019absence de v\u00e9rification de l\u2019int\u00e9grit\u00e9 du code ou des d\u00e9pendances utilis\u00e9es dans une application. Elle inclut notamment l\u2019usage de biblioth\u00e8ques compromises, la modification non contr\u00f4l\u00e9e du code en production, ou encore l\u2019absence de signature lors des mises \u00e0 jour logicielles.\r\n\r\nUn attaquant peut ainsi injecter du code malveillant via une d\u00e9pendance tierce, une mise \u00e0 jour falsifi\u00e9e, ou une cha\u00eene CI/CD non s\u00e9curis\u00e9e.\r\n\r\n**Django, bien que robuste, n\u00e9cessite des bonnes pratiques compl\u00e9mentaires :**\r\n- **Gestion des d\u00e9pendances** avec `pip freeze` ou `pip-tools`, pour figer les versions utilis\u00e9es et \u00e9viter les changements non d\u00e9sir\u00e9s.\r\n- **Utilisation d\u2019un fichier** `requirements.txt` versionn\u00e9 dans un d\u00e9p\u00f4t contr\u00f4l\u00e9, avec des v\u00e9rifications d\u2019int\u00e9grit\u00e9 (ex. : `hashin`, `pip-audit`).\r\n- **Surveillance continue des paquets** gr\u00e2ce \u00e0 des outils comme `Safety`, `Dependabot` (GitHub) ou `Bandit` pour l\u2019analyse statique du code Python.\r\n- **Signature et contr\u00f4le des d\u00e9ploiements** dans les environnements CI/CD (GitLab CI, GitHub Actions, Jenkins\u2026), afin de garantir que seuls les binaires ou les scripts valid\u00e9s sont d\u00e9ploy\u00e9s.\r\n\r\nLa compromission d\u2019une seule biblioth\u00e8que ou \u00e9tape de d\u00e9ploiement peut suffire \u00e0 compromettre tout votre syst\u00e8me. Privil\u00e9giez la transparence, l\u2019auditabilit\u00e9, et l\u2019automatisation s\u00e9curis\u00e9e dans vos processus de livraison.\r\n\r\n## D\u00e9fauts de journalisation et de surveillance\r\n\r\nCette vuln\u00e9rabilit\u00e9 survient lorsque les applications n\u2019enregistrent pas correctement les \u00e9v\u00e9nements de s\u00e9curit\u00e9, ou ne permettent pas une d\u00e9tection et une r\u00e9ponse rapides aux incidents. Sans journalisation ad\u00e9quate, les attaques passent inaper\u00e7ues, rendant toute investigation post\u00e9rieure difficile, voire impossible.\r\n\r\nUne absence de surveillance ou une mauvaise configuration des alertes peut retarder la d\u00e9tection d\u2019intrusions, d\u2019escalades de privil\u00e8ges, ou d\u2019activit\u00e9s suspectes.\r\n**Avec Django, il est possible de mettre en \u0153uvre une strat\u00e9gie de journalisation efficace :**\r\n- **Le module `logging` de Python**, pleinement pris en charge par Django, permet de centraliser les logs applicatifs avec diff\u00e9rents niveaux de criticit\u00e9 (`DEBUG`, `INFO`, `WARNING`, `ERROR`, `CRITICAL`).\r\n- **La configuration** dans `settings.py` permet de d\u00e9finir :\r\n\t- des formats d\u2019affichage,\r\n\t- des handlers (fichiers, consoles, services externes),\r\n\t- et des r\u00e8gles de filtrage pr\u00e9cises par module.\r\n-** L\u2019utilisation de middlewares personnalis\u00e9s** permet de tracer les requ\u00eates entrantes, les erreurs HTTP, ou les \u00e9v\u00e9nements utilisateur critiques (connexion, \u00e9chec d\u2019authentification, etc.).\r\n- **L\u2019int\u00e9gration avec des solutions de supervision** comme Sentry, ELK (Elasticsearch, Logstash, Kibana) ou Grafana Loki offre une visibilit\u00e9 en temps r\u00e9el sur le comportement de l\u2019application et facilite la corr\u00e9lation d\u2019\u00e9v\u00e9nements.\r\n\r\nUne journalisation efficace ne doit pas compromettre la confidentialit\u00e9 des donn\u00e9es : \u00e9vitez de logguer des mots de passe, des tokens ou des informations sensibles.\r\n\r\n\r\n## Falsification des requ\u00eates c\u00f4t\u00e9 serveur (SSRF)\r\n\r\nLa falsification des requ\u00eates c\u00f4t\u00e9 serveur (Server-Side Request Forgery, SSRF) est une vuln\u00e9rabilit\u00e9 qui permet \u00e0 un attaquant de contraindre le serveur \u00e0 effectuer des requ\u00eates vers des adresses internes ou externes. Cela peut conduire \u00e0 la divulgation d\u2019informations sensibles, \u00e0 la d\u00e9couverte de services internes, ou \u00e0 l\u2019exploitation de failles dans des services non expos\u00e9s au public.\r\n\r\nUn exemple courant est l'acc\u00e8s non autoris\u00e9 \u00e0 des m\u00e9tadonn\u00e9es de services cloud (comme AWS ou Google Cloud), via une requ\u00eate mal filtr\u00e9e.\r\n**Comment se prot\u00e9ger avec Django :**\r\n- **Validation stricte des entr\u00e9es utilisateur** : ne jamais faire aveugl\u00e9ment confiance aux URL ou adresses fournies par l'utilisateur. Utilisez des expressions r\u00e9guli\u00e8res ou des biblioth\u00e8ques sp\u00e9cialis\u00e9es pour valider et restreindre les domaines autoris\u00e9s.\r\n- **Filtrage des h\u00f4tes **: Django permet de d\u00e9finir une liste blanche via le param\u00e8tre ALLOWED_HOSTS. Bien que ce param\u00e8tre prot\u00e8ge principalement contre les attaques Host header, il doit \u00eatre correctement configur\u00e9 pour \u00e9viter certains d\u00e9tournements.\r\n- **Utilisation prudente de biblioth\u00e8ques tierces **: si votre application interagit avec des ressources distantes (API, fichiers, etc.), privil\u00e9giez des biblioth\u00e8ques r\u00e9put\u00e9es et v\u00e9rifiez les redirections ou les r\u00e9ponses inattendues.\r\n- **Restrictions r\u00e9seau** : limitez, au niveau de l\u2019infrastructure, les capacit\u00e9s de votre serveur \u00e0 effectuer des requ\u00eates sortantes, notamment vers les IP internes ou les m\u00e9tadonn\u00e9es cloud.\r\n\r\nEn cas de doute, isolez les composants sensibles dans des r\u00e9seaux distincts et appliquez le principe du moindre privil\u00e8ge.\r\n\r\n## En mati\u00e8re de s\u00e9curit\u00e9, l\u2019anticipation vaut toujours mieux que la r\u00e9action.\r\n\r\nLa s\u00e9curit\u00e9 des applications web ne rel\u00e8ve pas uniquement d\u2019un ensemble de bonnes pratiques : elle constitue un enjeu majeur pour la p\u00e9rennit\u00e9, la r\u00e9putation et la fiabilit\u00e9 d\u2019un projet. Le Top 10 OWASP 2021 nous rappelle que les vuln\u00e9rabilit\u00e9s les plus r\u00e9pandues restent souvent les plus n\u00e9glig\u00e9es.\r\n\r\nDjango, par sa conception, offre une architecture robuste int\u00e9grant des m\u00e9canismes de s\u00e9curit\u00e9 d\u00e8s la base : protection contre les injections, gestion fine des droits, hachage s\u00e9curis\u00e9 des mots de passe, ou encore pr\u00e9vention des attaques CSRF.\r\n\r\nCependant, aucun framework ne saurait garantir \u00e0 lui seul une s\u00e9curit\u00e9 parfaite. Il appartient aux d\u00e9veloppeurs de ma\u00eetriser les risques, de rester vigilants et de renforcer ces protections par une connaissance approfondie des menaces.\r\n\r\nAdopter une d\u00e9marche proactive, auditer r\u00e9guli\u00e8rement son code et suivre les recommandations de l\u2019OWASP sont autant de leviers pour construire des applications r\u00e9silientes, dignes de confiance.\r\n",
      "created": "2025-05-29T13:05:21.427899",
      "updated": "2025-05-29T14:18:00.993418",
      "status_id": 1
    }
  ],
  "tag": [
    {
      "id": 1,
      "name": "html",
      "slug": "html"
    },
    {
      "id": 2,
      "name": "accessibilit\u00e9",
      "slug": "accessibilite"
    },
    {
      "id": 3,
      "name": "seo",
      "slug": "seo"
    },
    {
      "id": 4,
      "name": "ux",
      "slug": "ux"
    },
    {
      "id": 5,
      "name": "django",
      "slug": "django"
    },
    {
      "id": 6,
      "name": "python",
      "slug": "python"
    },
    {
      "id": 7,
      "name": "OWASP2021",
      "slug": "owasp2021"
    },
    {
      "id": 8,
      "name": "cybers\u00e9curit\u00e9",
      "slug": "cybersecurite"
    }
  ],
  "posttag": [
    {
      "id": 1,
      "posts_id": 1,
      "tags_id": 1
    },
    {
      "id": 2,
      "posts_id": 1,
      "tags_id": 2
    },
    {
      "id": 3,
      "posts_id": 1,
      "tags_id": 3
    },
    {
      "id": 4,
      "posts_id": 1,
      "tags_id": 4
    },
    {
      "id": 45,
      "posts_id": 2,
      "tags_id": 5
    },
    {
      "id": 46,
      "posts_id": 2,
      "tags_id": 6
    },
    {
      "id": 47,
      "posts_id": 2,
      "tags_id": 7
    },
    {
      "id": 48,
      "posts_id": 2,
      "tags_id": 8
    }
  ],
  "status": [
    {
      "id": 1,
      "name": "brouillon"
    },
    {
      "id": 2,
      "name": "offline"
    },
    {
      "id": 3,
      "name": "online"
    }
  ]
}