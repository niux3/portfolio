{
  "post": [
    {
      "id": 1,
      "title": "D\u00e9finir le langage naturel",
      "slug": "definir-le-langage-naturel",
      "body": "Si une page ne contient pas de d\u00e9finition explicite du langage naturel dans lequel elle est r\u00e9dig\u00e9e, les logiciels risquent de ne pas pouvoir traduire correctement le contenu. Le terme &laquo;&nbsp;langue naturelle&nbsp;&raquo; fait r\u00e9f\u00e9rence \u00e0 la langue utilis\u00e9e pour le contenu de la page, et non au langage de programmation. Ce manque d'information peut entra\u00eener des traductions erron\u00e9es, une mauvaise mise en forme et un contenu difficile \u00e0 comprendre pour les utilisateurs de lecteurs d'\u00e9cran.\r\n\r\nVous pouvez d\u00e9finir la langue naturelle d'une page en utilisant l'attribut `lang` sur l'\u00e9l\u00e9ment `<html>`.\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Le fran\u00e7ais d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n</html>\r\n```\r\n\r\nVous pouvez \u00e9galement d\u00e9finir un dialecte sp\u00e9cifique de la langue de base.\r\n<br>**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Le fran\u00e7ais de France d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr-FR\">\r\n</html>\r\n```\r\n\r\nL'attribut lang est global, ce qui signifie que vous pouvez l'utiliser sur n'importe quel \u00e9l\u00e9ment, bien qu'il puisse ne pas affecter certains d'entre eux. Il peut \u00eatre utile si une page est r\u00e9dig\u00e9e dans une langue mais contient des passages de texte ou m\u00eame des mots isol\u00e9s dans d'autres langues.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Japonais translitt\u00e9r\u00e9 en \u00e9criture latine utilis\u00e9 sur une page \u00e9crite en fran\u00e7ais.**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n    <head></head>\r\n    <body>\r\n        <p>The Wind-Up Bird Chronicle (<span lang=\"ja-Latn\">Nejimakidori Kuronikuru </span>) is a novel published in 1994 by Japanese author Haruki Murakami.</p>\r\n    </body>\r\n</html>\r\n```\r\n\r\nUtilisez la pseudoclasse `:lang()` pour ajuster la typographie et la mise en page pour des langues sp\u00e9cifiques.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;S\u00e9lection de tous les \u00e9l\u00e9ments en langue serbe**\r\n\r\n```css\r\n:lang(sr) {\r\n    font-family: 'Cyrillic font', sans-serif;\r\n}\r\n```\r\n\r\nLes technologies d'assistance et autres logiciels peuvent ne pas \u00eatre en mesure de d\u00e9terminer automatiquement la langue naturelle d'une page. Certaines fonctions du HTML et des feuilles de style en cascade (CSS) s'appuient sur ces informations pour aider \u00e0 localiser le contenu et offrir une excellente exp\u00e9rience utilisateur.\r\n\r\nVous devez d\u00e9finir la langue de chaque page de mani\u00e8re programmatique et explicite en utilisant l'attribut lang sur l'\u00e9l\u00e9ment `<html>`, comme le montre [l'exemple 1](#exemple-1). Pour les passages de texte \u00e9crits dans une langue diff\u00e9rente de la langue principale de la page, vous pouvez \u00e9galement utiliser l'attribut, comme le montre [l'exemple 3](#exemple-3). Cela permet aux lecteurs d'\u00e9cran d'am\u00e9liorer la prononciation en modifiant les profils vocaux en fonction de certains mots ou phrases.\r\n\r\nUtilisez cette fonctionnalit\u00e9 avec parcimonie car le changement de profil vocal peut \u00eatre g\u00eanant en interrompant le flux de lecture. Pour les mots \u00e9trangers bien \u00e9tablis, ce n'est pas forc\u00e9ment n\u00e9cessaire. Des exemples en allemand sont des mots anglais comme &laquo;&nbsp;Download&nbsp;&raquo;, &laquo;&nbsp;Workshop&nbsp;&raquo; ou &laquo;&nbsp;Link&nbsp;&raquo;.\r\n\r\nLa valeur de l'attribut `lang` doit \u00eatre une <a href=\"https://datatracker.ietf.org/doc/html/rfc5646\" target=\"_blank\">balise de langue BCP 47</a> valide, compos\u00e9e d'une ou plusieurs balises secondaires. Un *subtag* est une s\u00e9quence de caract\u00e8res alphanum\u00e9riques distingu\u00e9s et s\u00e9par\u00e9s des autres subtags par un trait d'union.\r\n\r\nLa *sous-\u00e9tiquette* de langue est un code de 2 ou 3 caract\u00e8res qui d\u00e9finit la langue principale : par exemple, `en` pour l'anglais, `de` pour l'allemand ou `fr` pour le fran\u00e7ais, comme le montre [l'exemple 5](#exemple-5).\r\n\r\n**<span id=\"exemple-5\">Exemple 5</span>&nbsp;&ndash;&nbsp;L'espagnol d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<html lang=\"es\"></html>\r\n```\r\n\r\n## Sous-\u00e9tiquettes d'\u00e9criture\r\nLa sous-\u00e9tiquette d'\u00e9criture facultative est un code de 4 caract\u00e8res qui d\u00e9finit le syst\u00e8me d'\u00e9criture utilis\u00e9 pour la langue, comme le montre [l'exemple 6](#exemple-6).\r\n\r\n**<span id=\"exemple-6\">Exemple 6</span>&nbsp;&ndash;&nbsp;Un nom en \u00e9criture cyrillique \u00e0 c\u00f4t\u00e9 du m\u00eame nom en \u00e9criture latine marqu\u00e9 comme tel**\r\n\r\n```html\r\n\u041d\u0438\u043a\u043e\u043b\u0430 \u0408\u043e\u043a\u0438\u045b (<span lang=\"sr-Latn\">Nikola Joki\u0107</span>).\r\n```\r\n\r\nLa *sous-\u00e9tiquette* facultative de r\u00e9gion est g\u00e9n\u00e9ralement un code de pays \u00e0 2 caract\u00e8res \u00e9crit en majuscules et d\u00e9finit un dialecte de la langue de base, comme le montre [l'exemple 7](#exemple-7).\r\n\r\n**<span id=\"exemple-7\">Exemple 7</span>&nbsp;&ndash;&nbsp;L'allemand autrichien d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"de-AT\">\r\n</html>\r\n```\r\nVous devez utiliser le code de langue primaire \u00e0 deux caract\u00e8res et n'ajouter des balises secondaires de r\u00e9gion que lorsqu'il est n\u00e9cessaire de diff\u00e9rencier le contenu dans diff\u00e9rents dialectes qui peuvent ne pas \u00eatre mutuellement compr\u00e9hensibles. Pour les utilisateurs de lecteurs d'\u00e9cran, le fait de ne pas ajouter de sous-tags de r\u00e9gion ne devrait pas faire de diff\u00e9rence car ils sont g\u00e9n\u00e9ralement ignor\u00e9s par le logiciel.\r\n\r\nVous pouvez trouver une liste de toutes les \u00e9tiquettes et sous-\u00e9tiquettes dans la <a href=\"https://r12a.github.io/app-subtags/\" target=\"_blank\">liste des sous-\u00e9tiquettes de la langue BCP 47</a>.\r\n\r\n## Les avantages\r\nL'attribut `lang` est puissant et affecte de nombreux aspects de l'accessibilit\u00e9 du web et de l'exp\u00e9rience utilisateur en g\u00e9n\u00e9ral. Voici ses principaux avantages :\r\n\r\n### La technologie d'assistance\r\nLes synth\u00e9tiseurs vocaux qui prennent en charge plusieurs langues adaptent leur prononciation et leur syntaxe \u00e0 la langue de la page, pronon\u00e7ant le texte avec l'accent et la prononciation appropri\u00e9s.\r\n\r\nPour une page au contenu allemand dont la langue est r\u00e9gl\u00e9e sur l'anglais (`lang=\"en\"`), le logiciel de lecture d'\u00e9cran peut choisir un profil de voix synth\u00e9tique anglais et lire le texte allemand avec une prononciation anglaise. Si vous ne d\u00e9finissez aucune langue, les lecteurs d'\u00e9cran risquent de se rabattre sur les param\u00e8tres par d\u00e9faut du syst\u00e8me de l'utilisateur, ce qui peut ne pas \u00eatre appropri\u00e9. Le r\u00e9sultat peut \u00eatre difficile \u00e0 comprendre, confus ou m\u00eame compl\u00e8tement erron\u00e9.\r\n\r\nTous les lecteurs d'\u00e9cran ne prennent pas en charge de nombreuses langues. Certains logiciels changent de langue automatiquement, tandis que pour d'autres, les utilisateurs doivent installer et configurer manuellement des voix ou des packs de langues.\r\n\r\nLa d\u00e9finition de l'attribut permet \u00e9galement au logiciel de traduction en braille d'optimiser la sortie et de l'emp\u00eacher de cr\u00e9er par erreur des <a href=\"https://www.rnib.org.uk/living-with-sight-loss/education-and-learning/braille-tactile-codes/contracted-grade-2-braille-explained/\" target=\"_blank\">contractions en braille de grade 2</a>.\r\n\r\n### La traduction\r\nLes outils de traduction comme Google Translate utilisent les informations de l'attribut `lang` pour traduire le contenu de la page. Bien que ce type de logiciel soit g\u00e9n\u00e9ralement bon pour d\u00e9tecter automatiquement la langue de la page, un d\u00e9calage entre la langue r\u00e9elle et la langue d\u00e9finie peut donner lieu \u00e0 des <a href=\"https://www.matuzo.at/blog/lang-attribute/\" target=\"_blank\">traductions inattendues et non souhait\u00e9es</a>.\r\n\r\n### Les citations\r\nLes guillemets peuvent changer en fonction de la langue naturelle de la page. Par exemple, l'anglais utilise des guillemets diff\u00e9rents de ceux de l'allemand ou du fran\u00e7ais, et la bonne d\u00e9finition de lang aide les navigateurs \u00e0 choisir les glyphes appropri\u00e9s, comme l'illustrent les exemples [8](#exemple-8), [9](#exemple-9) et [10](#exemple-10).\r\n\r\n**<span id=\"exemple-8\">Exemple&nbsp;8</span>&nbsp;&ndash;&nbsp;Guillemets automatiques \u00e0 l'aide de l'\u00e9l\u00e9ment `<q>` en anglais**\r\n\r\n```html\r\n<p lang=\"en\">\r\n    <q>A quote in English.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \"A quote in English.\" -->\r\n```\r\n**<span id=\"exemple-9\">Exemple&nbsp;9</span>&nbsp;&ndash;&nbsp;Guillemets automatiques \u00e0 l'aide de l'\u00e9l\u00e9ment `<q>` en allemand**\r\n\r\n```html\r\n<p lang=\"de\">\r\n<q>Ein Zitat auf Deutsch.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \u201eEin Zitat auf Deutsch.\" -->\r\n```\r\n**<span id=\"exemple-10\">Exemple&nbsp;10</span>&nbsp;&ndash;&nbsp;Guillemets automatiques utilisant l'\u00e9l\u00e9ment `<q>` en fran\u00e7ais**\r\n\r\n```html\r\n<p lang=\"fr\">\r\n<q>Une citation en fran\u00e7ais.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \u00ab Une citation en fran\u00e7ais. \u00bb -->\r\n```\r\n### La c\u00e9sure\r\nL'attribut `lang` peut affecter <a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/hyphens\" target=\"_blank\">la c\u00e9sure</a> dans les CSS. Voir l'[exemple&nbsp;11](#exemple-11).\r\n\r\n**<span id=\"exemple-11\">Exemple&nbsp;11</span>&nbsp;&ndash;&nbsp;Un paragraphe avec une largeur maximale de 28 caract\u00e8res et une c\u00e9sure activ\u00e9e**\r\n\r\n```css\r\np {\r\n    max-width: 28ch;\r\n    hyphens: auto;\r\n}\r\n```\r\nDans les exemples&nbsp;[12](#exemple-12), [13](#exemple-13) et [14](#exemple-14), vous pouvez voir comment le m\u00eame paragraphe \u00e9crit en allemand, avec une valeur d'attribut lang diff\u00e9rente, est rendu diff\u00e9remment dans Google Chrome. Les mots ne s'interrompent pas du tout ou s'interrompent \u00e0 des positions diff\u00e9rentes. Seuls le premier et le deuxi\u00e8me exemples sont corrects. Il convient de noter que les navigateurs se comportent diff\u00e9remment.\r\n\r\n**<span id=\"exemple-12\">Exemple&nbsp;12</span>&nbsp;&ndash;&nbsp;Texte allemand correctement coup\u00e9 par un trait d'union dans un paragraphe d\u00e9fini comme allemand**\r\n\r\n```html\r\n<p lang=\"de\">\r\nWeit hinten, hinter den Wortbergen, fern der L\u00e4nder Vokalien und Konsonantien\r\nleben die Blindtexte. Abgeschieden wohnen sie in Buchstabhausen an der K\u00fcste\r\ndes Semantik, eines gro\u00dfen Sprachozeans. Ein kleines B\u00e4chlein namens Duden\r\nflie\u00dft durch ihren Ort und versorgt sie mit den n\u00f6tigen Regelialien.\r\n</p>\r\n<!-- R\u00e9sultat :\r\nWeit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und Konso-\r\n     nantien leben die Blindtexte. Abge-\r\n     schieden wohnen sie in Buchstab-\r\n     hausen an der K\u00fcste des Semantik,\r\n     eines gro\u00dfen Sprachozeans.\r\n     -->\r\n```\r\n**<span id=\"exemple-13\">Exemple&nbsp;13</span>&nbsp;&ndash;&nbsp;Pas de c\u00e9sure du texte allemand dans un paragraphe d\u00e9fini comme anglais**\r\n\r\n```html\r\n     <p lang=\"en\">\r\n     Weit hinten,\u2026\r\n     </p>\r\n     <!-- R\u00e9sultat :\r\n     Weit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und\r\n     Konsonantien leben die Blindtexte.\r\n     Abgeschieden wohnen sie in\r\n     Buchstabhausen an der K\u00fcste des\r\n     Semantik, eines gro\u00dfen\r\n     Sprachozeans.\r\n     -->\r\n```\r\n**<span id=\"exemple-14\">Exemple&nbsp;14</span>&nbsp;&ndash;&nbsp;Trait d'union incorrect du texte allemand dans un paragraphe d\u00e9fini comme fran\u00e7ais**\r\n\r\n```html\r\n     <p lang=\"fr\">\r\n     Weit hinten,\u2026\r\n     </p>\r\n     <!-- R\u00e9sultat :\r\n     Weit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und Konso-\r\n     nantien leben die Blindtexte. Abges-\r\n     chieden wohnen sie in Buchstabhau-\r\n     sen an der K\u00fcste des Semantik, eines\r\n     gro\u00dfen Sprachozeans.\r\n     -->\r\n```\r\n### S\u00e9lection des polices\r\n\r\nLes navigateurs peuvent s\u00e9lectionner <a href=\"https://www.w3.org/International/questions/qa-lang-why#fonts\" target=\"_blank\">des polices adapt\u00e9es</a> \u00e0 la langue pour afficher les d\u00e9tails des caract\u00e8res id\u00e9ographiques qui varient d'une langue \u00e0 l'autre, tels que le chinois, le japonais et le cor\u00e9en (connus sous le nom de \"langues CJK\").\r\n\r\n### Optimisation des moteurs de recherche (SEO)\r\n\r\nUne bonne d\u00e9finition du langage naturel peut am\u00e9liorer la qualit\u00e9 des r\u00e9sultats de recherche en aidant les moteurs de recherche \u00e0 la localisation.\r\n\r\n### Contr\u00f4les de formulaires\r\n\r\nDans certains navigateurs, l'attribut `lang` affecte \u00e9galement la mise en forme des contr\u00f4les de formulaire. Par exemple, <a href=\"https://www.mozilla.org/fr/firefox/new/\" target=\"_blank\">Firefox</a> affiche les bons caract\u00e8res d\u00e9cimaux dans les champs de saisie des nombres en fonction de la langue.\r\n",
      "created": "2025-05-29T12:47:21.648027",
      "updated": "2025-06-01T10:32:12.828365",
      "meta_description": "Am\u00e9liorez l'exp\u00e9rience utilisateur et le SEO en d\u00e9finissant la langue de votre page web. Exemples HTML/CSS inclus pour tout comprendre !",
      "status_id": 3
    },
    {
      "id": 2,
      "title": "Comment Django contribue \u00e0 s\u00e9curiser vos applications web ?",
      "slug": "comment-django-contribue-a-securiser-vos-applications-web",
      "body": "L\u2019**OWASP** (*Open Web Application Security Project*) est une organisation \u00e0 but non lucratif qui \u0153uvre pour am\u00e9liorer la s\u00e9curit\u00e9 des applications web. Son c\u00e9l\u00e8bre classement **OWASP Top 10**, mis \u00e0 jour en 2021, identifie les vuln\u00e9rabilit\u00e9s les plus critiques affectant les applications modernes, sur la base d\u2019analyses portant sur plus de 500 000 applications web.\r\n\r\nDans cet article, nous nous int\u00e9resserons \u00e0 la mani\u00e8re dont **Django**, le framework web Python, permet de mitiger ces menaces par ses m\u00e9canismes int\u00e9gr\u00e9s et sa philosophie de d\u00e9veloppement s\u00e9curis\u00e9.\r\n\r\n## D\u00e9faillances du contr\u00f4le d\u2019acc\u00e8s\r\nLes d\u00e9faillances du contr\u00f4le d\u2019acc\u00e8s repr\u00e9sentent l'une des vuln\u00e9rabilit\u00e9s les plus critiques identifi\u00e9es par l\u2019OWASP. Elles se produisent lorsque des utilisateurs peuvent acc\u00e9der \u00e0 des ressources ou effectuer des actions qui devraient leur \u00eatre interdites \u2014 qu\u2019il s\u2019agisse de consulter des donn\u00e9es sensibles, de modifier le profil d\u2019un autre utilisateur, ou d\u2019acc\u00e9der \u00e0 des fonctionnalit\u00e9s r\u00e9serv\u00e9es aux administrateurs.\r\n\r\n### Comment Django se positionne-t-il face \u00e0 cette menace ?\r\n**Django propose plusieurs m\u00e9canismes robustes pour mettre en \u0153uvre un contr\u00f4le d\u2019acc\u00e8s efficace :**\r\n\r\n- **Les mixins `LoginRequiredMixin` et `PermissionRequiredMixin`** permettent de restreindre facilement l\u2019acc\u00e8s aux vues bas\u00e9es sur les classes, en imposant l\u2019authentification ou des permissions sp\u00e9cifiques.\r\n- **Le syst\u00e8me de permissions int\u00e9gr\u00e9** offre une granularit\u00e9 fine : chaque mod\u00e8le peut \u00eatre associ\u00e9 \u00e0 des permissions de lecture, d\u2019\u00e9criture ou de suppression. Il est \u00e9galement possible de d\u00e9finir des permissions personnalis\u00e9es selon les besoins m\u00e9tier.\r\n- **Les d\u00e9corateurs `@login_required` et `@permission_required`** peuvent \u00eatre utilis\u00e9s sur les vues fonctionnelles pour un contr\u00f4le simple et explicite.\r\n- **Les objets `request.user` et `request.user.has_perm()`** permettent de v\u00e9rifier dynamiquement, c\u00f4t\u00e9 serveur, si l\u2019utilisateur dispose bien des autorisations n\u00e9cessaires pour une action donn\u00e9e.\r\n- **La gestion des groupes (`Group`)** permet de centraliser les permissions pour plusieurs utilisateurs, ce qui est particuli\u00e8rement utile dans des applications complexes.\r\n\r\nDjango ne se contente pas de proposer des outils techniques : il incite \u00e0 adopter une discipline de conception respectant le principe de moindre privil\u00e8ge. En combinant ses outils natifs avec une r\u00e9flexion rigoureuse sur les droits des utilisateurs, le framework permet de pr\u00e9venir efficacement la plupart des d\u00e9faillances de contr\u00f4le d\u2019acc\u00e8s.\r\n\r\n## D\u00e9faillances cryptographiques\r\nLes d\u00e9faillances cryptographiques surviennent lorsqu\u2019un syst\u00e8me repose sur des m\u00e9canismes de chiffrement ou de hachage obsol\u00e8tes, mal configur\u00e9s ou insuffisamment robustes. Ces erreurs exposent les donn\u00e9es sensibles \u2013 telles que les mots de passe, les jetons d\u2019authentification ou les informations personnelles \u2013 \u00e0 des risques de compromission, de falsification ou d\u2019interception.\r\n\r\n### Comment Django prot\u00e8ge-t-il les donn\u00e9es sensibles ?\r\n**Django int\u00e8gre par d\u00e9faut des pratiques cryptographiques solides, notamment :**\r\n\r\n- **Un m\u00e9canisme de hachage robuste pour les mots de passe**, utilisant des algorithmes \u00e9prouv\u00e9s comme **PBKDF2, Bcrypt, et Argon2**. Ces m\u00e9thodes sont con\u00e7ues pour r\u00e9sister aux attaques par force brute et rendent extr\u00eamement co\u00fbteuse la r\u00e9cup\u00e9ration d\u2019un mot de passe en clair \u00e0 partir d\u2019un hash.\r\n- **Une gestion centralis\u00e9e et s\u00e9curis\u00e9e des secrets via le param\u00e8tre** `SECRET_KEY`, utilis\u00e9 notamment pour signer les cookies, les jetons CSRF, ou encore les sessions utilisateur. Il est essentiel pour assurer l\u2019int\u00e9grit\u00e9 et la confidentialit\u00e9 des \u00e9changes entre le client et le serveur.\r\n\r\n**Attention** : il est imp\u00e9ratif de **ne jamais exposer** la variable `SECRET_KEY` dans votre code source ou dans un d\u00e9p\u00f4t public. Pour renforcer la s\u00e9curit\u00e9, stockez-la dans des variables d\u2019environnement ou un coffre-fort num\u00e9rique adapt\u00e9 (comme HashiCorp Vault, AWS Secrets Manager, etc.).\r\n\r\nEn fournissant une base cryptographique fiable et des recommandations claires, Django permet de r\u00e9duire consid\u00e9rablement les risques li\u00e9s \u00e0 une mauvaise impl\u00e9mentation de la s\u00e9curit\u00e9 des donn\u00e9es. Toutefois, la vigilance du d\u00e9veloppeur reste de mise : le choix des bons algorithmes et la gestion rigoureuse des secrets sont des responsabilit\u00e9s \u00e0 ne pas n\u00e9gliger.\r\n\r\n## Injections\r\nLes failles d\u2019injection comptent parmi les vuln\u00e9rabilit\u00e9s les plus critiques et les plus courantes dans les applications web. Elles permettent \u00e0 un attaquant d\u2019introduire des donn\u00e9es malveillantes dans une requ\u00eate \u2014 souvent SQL ou HTML \u2014 afin d\u2019alt\u00e9rer le comportement attendu de l\u2019application. Ces attaques peuvent entra\u00eener des acc\u00e8s non autoris\u00e9s \u00e0 la base de donn\u00e9es, des fuites de donn\u00e9es sensibles, voire une compromission totale du syst\u00e8me.\r\n\r\n### Comment Django pr\u00e9vient-il les risques d\u2019injection ?\r\n**Django fournit des m\u00e9canismes robustes pour pr\u00e9venir les attaques d\u2019injection, notamment :**\r\n\r\n- **Un ORM (Object-Relational Mapper) s\u00e9curis\u00e9**, qui repose sur des **requ\u00eates param\u00e9tr\u00e9es.** En encapsulant automatiquement les valeurs des param\u00e8tres, Django emp\u00eache l\u2019ex\u00e9cution de code arbitraire via les champs utilisateur. Cela prot\u00e8ge efficacement contre les attaques par injection SQL.\r\n- **Un syst\u00e8me de templates s\u00e9curis\u00e9** qui applique **l\u2019\u00e9chappement automatique** des variables inject\u00e9es dans le HTML. Par d\u00e9faut, toute donn\u00e9e affich\u00e9e dans une vue Django est consid\u00e9r\u00e9e comme potentiellement dangereuse et est donc \u00e9chapp\u00e9e pour \u00e9viter les attaques XSS (Cross-Site Scripting).\r\n\r\n**Attention** : lorsque vous utilisez des requ\u00eates brutes comme `raw()` ou `extra()`, vous contournez les protections de l\u2019ORM. Dans ce cas, **vous \u00eates responsable** de la s\u00e9curisation des donn\u00e9es inject\u00e9es. Une vigilance accrue s\u2019impose.\r\n\r\nGr\u00e2ce \u00e0 ces m\u00e9canismes, Django limite fortement les vecteurs d\u2019injection. Toutefois, la s\u00e9curit\u00e9 repose aussi sur les bonnes pratiques du d\u00e9veloppeur : valider et nettoyer les entr\u00e9es utilisateur, \u00e9viter l\u2019ex\u00e9cution de code dynamique, et restreindre les permissions en base de donn\u00e9es restent des mesures essentielles.\r\n\r\n## Conception non s\u00e9curis\u00e9e\r\n\r\nLa conception non s\u00e9curis\u00e9e d\u00e9signe l\u2019absence de m\u00e9canismes de s\u00e9curit\u00e9 d\u00e8s les premi\u00e8res phases de d\u00e9veloppement d\u2019une application. Elle ne rel\u00e8ve pas d\u2019un simple oubli de configuration, mais d\u2019un manque de r\u00e9flexion globale sur la s\u00e9curit\u00e9 : mod\u00e8les de menace inexistants, absence de mesures d\u00e9fensives durables, ou encore m\u00e9connaissance des vecteurs d\u2019attaque.\r\n\r\nIl ne s\u2019agit pas ici d\u2019un d\u00e9faut d\u2019impl\u00e9mentation, mais bien d\u2019un d\u00e9faut de conception. Une telle lacune rend l\u2019application vuln\u00e9rable \u00e0 un large \u00e9ventail d\u2019attaques, souvent impossibles \u00e0 corriger sans une refonte partielle du syst\u00e8me.\r\n\r\n### Django encourage une approche s\u00e9curis\u00e9e par d\u00e9faut :\r\n**Le framework Django int\u00e8gre nativement des pratiques de s\u00e9curit\u00e9 qui incitent \u00e0 une architecture r\u00e9siliente :**\r\n\r\n- **La philosophie \"secure by default\"** : de nombreux composants sont con\u00e7us pour restreindre les comportements dangereux. Par exemple, les protections CSRF (Cross-Site Request Forgery), l\u2019\u00e9chappement automatique dans les templates, ou la gestion rigoureuse des sessions sont activ\u00e9s par d\u00e9faut.\r\n- **Une documentation abondante et claire** d\u00e9di\u00e9e aux probl\u00e9matiques de s\u00e9curit\u00e9, permettant aux d\u00e9veloppeurs d\u2019int\u00e9grer de bonnes pratiques d\u00e8s la phase de conception.\r\n- **Des options de configuration explicites** pour les param\u00e8tres critiques comme les en-t\u00eates HTTP de s\u00e9curit\u00e9 (`SECURE_*`), les politiques de cookies, ou les m\u00e9canismes de hachage des mots de passe.\r\n\r\nEn r\u00e9sum\u00e9, si Django offre une base s\u00e9curis\u00e9e, c\u2019est au d\u00e9veloppeur d\u2019adopter une posture proactive : int\u00e9grer la s\u00e9curit\u00e9 d\u00e8s la phase de conception, penser en termes de sc\u00e9narios d\u2019attaque, et effectuer des revues r\u00e9guli\u00e8res d\u2019architecture sont des habitudes indispensables \u00e0 la cr\u00e9ation de syst\u00e8mes robustes.\r\n\r\n## Mauvaise configuration de s\u00e9curit\u00e9\r\n\r\nUne mauvaise configuration de s\u00e9curit\u00e9 survient lorsque des param\u00e8tres critiques ne sont pas correctement d\u00e9finis, que des composants par d\u00e9faut sont laiss\u00e9s activ\u00e9s en production, ou encore lorsque des services inutiles restent accessibles. Ces n\u00e9gligences exposent l\u2019application \u00e0 des vecteurs d\u2019attaque souvent \u00e9vitables.\r\n\r\nCe type de vuln\u00e9rabilit\u00e9 est particuli\u00e8rement courant : il peut d\u00e9couler de l\u2019usage de configurations inad\u00e9quates en environnement de production, de l\u2019oubli de d\u00e9sactiver les d\u00e9bogueurs, ou d\u2019une m\u00e9connaissance des options de s\u00e9curit\u00e9 offertes par le framework.\r\n\r\n**Django fournit plusieurs garde-fous contre les erreurs de configuration :**\r\n\r\n- **Le param\u00e8tre `DEBUG`**, qui doit imp\u00e9rativement \u00eatre d\u00e9sactiv\u00e9 en production. En effet, activ\u00e9, il r\u00e9v\u00e8le des informations sensibles sur l\u2019\u00e9tat interne de l\u2019application, les erreurs et les variables de contexte.\r\n- **Les param\u00e8tres de s\u00e9curit\u00e9 HTTP** (`SECURE_*`), tels que :\r\n\r\n\t- `SECURE_SSL_REDIRECT` : redirige automatiquement tout le trafic HTTP vers HTTPS.\r\n\t- `SECURE_HSTS_SECONDS` : active la politique HSTS pour inciter les navigateurs \u00e0 n\u2019utiliser que des connexions s\u00e9curis\u00e9es.\r\n\t- `SECURE_BROWSER_XSS_FILTER`, `SECURE_CONTENT_TYPE_NOSNIFF`, etc.\r\n\r\n- **Le contr\u00f4le des h\u00f4tes autoris\u00e9s** (`ALLOWED_HOSTS`) : ce param\u00e8tre restreint les domaines autoris\u00e9s \u00e0 interagir avec l\u2019application, \u00e9vitant les attaques de type Host Header Injection.\r\n- **La gestion des erreurs** : en production, les pages d\u2019erreur doivent \u00eatre personnalis\u00e9es afin de ne divulguer aucun d\u00e9tail technique.\r\n\r\n**Attention**: Une configuration n\u00e9glig\u00e9e transforme une application bien con\u00e7ue en cible facile. Il est vivement conseill\u00e9 de revoir r\u00e9guli\u00e8rement les param\u00e8tres de d\u00e9ploiement, d\u2019automatiser les v\u00e9rifications via des tests d\u2019int\u00e9gration et de se r\u00e9f\u00e9rer aux recommandations officielles.\r\n\r\n\r\n## Composants vuln\u00e9rables et obsol\u00e8tes\r\n\r\nCette vuln\u00e9rabilit\u00e9 r\u00e9sulte de l\u2019utilisation de biblioth\u00e8ques, d\u00e9pendances ou modules dont des failles de s\u00e9curit\u00e9 ont \u00e9t\u00e9 identifi\u00e9es mais non corrig\u00e9es. Elle est d\u2019autant plus critique que ces composants sont souvent int\u00e9gr\u00e9s au c\u0153ur du fonctionnement de l\u2019application.\r\n\r\nLes menaces peuvent provenir de :\r\n\r\n- biblioth\u00e8ques open-source non maintenues,\r\n- d\u00e9pendances non mises \u00e0 jour,\r\n- composants tiers activ\u00e9s sans v\u00e9rification de leur int\u00e9grit\u00e9 ni de leur provenance.\r\n\r\n**Django et l\u2019\u00e9cosyst\u00e8me Python offrent plusieurs leviers de pr\u00e9vention :**\r\n- **Le fichier** `requirements.txt` ou `pyproject.toml`, qui permet de verrouiller les versions des d\u00e9pendances et d\u2019en suivre l\u2019\u00e9volution de mani\u00e8re contr\u00f4l\u00e9e.\r\n- **Les outils d\u2019audit automatique**, tels que :\r\n\t- `pip-audit` ou `safety`, pour analyser les d\u00e9pendances \u00e0 la recherche de vuln\u00e9rabilit\u00e9s connues.\r\n\t- `dependabot` ou `renovate` (si vous utilisez GitHub ou GitLab), qui sugg\u00e8rent des mises \u00e0 jour d\u00e8s qu\u2019une faille est identifi\u00e9e.\r\n- **La documentation Django** elle-m\u00eame, r\u00e9guli\u00e8rement mise \u00e0 jour pour corriger ou contourner des failles affectant ses versions ant\u00e9rieures. Il est donc crucial de suivre les notes de version et les bulletins de s\u00e9curit\u00e9 publi\u00e9s par l\u2019\u00e9quipe Django.\r\n\r\nUn composant vuln\u00e9rable est une porte d\u2019entr\u00e9e potentielle pour les attaquants. Adopter une d\u00e9marche de veille proactive et maintenir un registre clair des d\u00e9pendances est indispensable \u00e0 la s\u00e9curisation de votre application.\r\n\r\n## Identification et authentification d\u00e9faillantes\r\n\r\nCette cat\u00e9gorie recouvre les failles li\u00e9es \u00e0 une mauvaise gestion de l'identit\u00e9 des utilisateurs et des m\u00e9canismes d\u2019authentification. Elle inclut, entre autres, les mots de passe faibles, l\u2019absence de protection contre les attaques par force brute, ou encore des m\u00e9canismes d\u2019authentification non s\u00e9curis\u00e9s.\r\n\r\nUne authentification d\u00e9faillante peut permettre \u00e0 un attaquant d\u2019usurper l\u2019identit\u00e9 d\u2019un utilisateur l\u00e9gitime, y compris un administrateur.\r\n**Django int\u00e8gre plusieurs protections robustes :**\r\n\r\n- **Un syst\u00e8me d\u2019authentification **int\u00e9gr\u00e9, avec prise en charge des sessions, des mots de passe hach\u00e9s (via `PBKDF2` par d\u00e9faut), et des permissions par utilisateur ou groupe.\r\n- **Des outils** pour renforcer la s\u00e9curit\u00e9, comme :\r\n\t- la prise en charge de politiques de mot de passe via des biblioth\u00e8ques tierces (`django-password-validator`, `django-axes`, etc.),\r\n\t- le blocage temporaire ou d\u00e9finitif apr\u00e8s plusieurs tentatives \u00e9chou\u00e9es de connexion,\r\n\t- l\u2019authentification multi-facteur (2FA), facilement int\u00e9grable via des packages comme `django-otp` ou `django-two-factor-auth`.\r\n- **Des signaux** (`signals`) **Django** tels que `user_logged_in`, `user_login_failed` ou `user_logged_out`, permettant de d\u00e9clencher des alertes ou des actions sp\u00e9cifiques en cas d'\u00e9v\u00e9nements li\u00e9s \u00e0 la connexion.\r\n\r\nUn syst\u00e8me d\u2019authentification mal con\u00e7u est souvent le maillon faible de la cha\u00eene de s\u00e9curit\u00e9. Une politique rigoureuse, alli\u00e9e \u00e0 un audit r\u00e9gulier de vos points d\u2019acc\u00e8s, est essentielle.\r\n\r\n\r\n## \u00c9checs en mati\u00e8re d\u2019int\u00e9grit\u00e9 logicielle\r\n\r\nCette cat\u00e9gorie regroupe les vuln\u00e9rabilit\u00e9s li\u00e9es \u00e0 l\u2019absence de v\u00e9rification de l\u2019int\u00e9grit\u00e9 du code ou des d\u00e9pendances utilis\u00e9es dans une application. Elle inclut notamment l\u2019usage de biblioth\u00e8ques compromises, la modification non contr\u00f4l\u00e9e du code en production, ou encore l\u2019absence de signature lors des mises \u00e0 jour logicielles.\r\n\r\nUn attaquant peut ainsi injecter du code malveillant via une d\u00e9pendance tierce, une mise \u00e0 jour falsifi\u00e9e, ou une cha\u00eene CI/CD non s\u00e9curis\u00e9e.\r\n\r\n**Django, bien que robuste, n\u00e9cessite des bonnes pratiques compl\u00e9mentaires :**\r\n\r\n- **Gestion des d\u00e9pendances** avec `pip freeze` ou `pip-tools`, pour figer les versions utilis\u00e9es et \u00e9viter les changements non d\u00e9sir\u00e9s.\r\n- **Utilisation d\u2019un fichier** `requirements.txt` versionn\u00e9 dans un d\u00e9p\u00f4t contr\u00f4l\u00e9, avec des v\u00e9rifications d\u2019int\u00e9grit\u00e9 (ex. : `hashin`, `pip-audit`).\r\n- **Surveillance continue des paquets** gr\u00e2ce \u00e0 des outils comme `Safety`, `Dependabot` (GitHub) ou `Bandit` pour l\u2019analyse statique du code Python.\r\n- **Signature et contr\u00f4le des d\u00e9ploiements** dans les environnements CI/CD (GitLab CI, GitHub Actions, Jenkins\u2026), afin de garantir que seuls les binaires ou les scripts valid\u00e9s sont d\u00e9ploy\u00e9s.\r\n\r\nLa compromission d\u2019une seule biblioth\u00e8que ou \u00e9tape de d\u00e9ploiement peut suffire \u00e0 compromettre tout votre syst\u00e8me. Privil\u00e9giez la transparence, l\u2019auditabilit\u00e9, et l\u2019automatisation s\u00e9curis\u00e9e dans vos processus de livraison.\r\n\r\n## D\u00e9fauts de journalisation et de surveillance\r\n\r\nCette vuln\u00e9rabilit\u00e9 survient lorsque les applications n\u2019enregistrent pas correctement les \u00e9v\u00e9nements de s\u00e9curit\u00e9, ou ne permettent pas une d\u00e9tection et une r\u00e9ponse rapides aux incidents. Sans journalisation ad\u00e9quate, les attaques passent inaper\u00e7ues, rendant toute investigation post\u00e9rieure difficile, voire impossible.\r\n\r\nUne absence de surveillance ou une mauvaise configuration des alertes peut retarder la d\u00e9tection d\u2019intrusions, d\u2019escalades de privil\u00e8ges, ou d\u2019activit\u00e9s suspectes.\r\n**Avec Django, il est possible de mettre en \u0153uvre une strat\u00e9gie de journalisation efficace :**\r\n\r\n- **Le module `logging` de Python**, pleinement pris en charge par Django, permet de centraliser les logs applicatifs avec diff\u00e9rents niveaux de criticit\u00e9 (`DEBUG`, `INFO`, `WARNING`, `ERROR`, `CRITICAL`).\r\n- **La configuration** dans `settings.py` permet de d\u00e9finir :\r\n\t- des formats d\u2019affichage,\r\n\t- des handlers (fichiers, consoles, services externes),\r\n\t- et des r\u00e8gles de filtrage pr\u00e9cises par module.\r\n-** L\u2019utilisation de middlewares personnalis\u00e9s** permet de tracer les requ\u00eates entrantes, les erreurs HTTP, ou les \u00e9v\u00e9nements utilisateur critiques (connexion, \u00e9chec d\u2019authentification, etc.).\r\n- **L\u2019int\u00e9gration avec des solutions de supervision** comme Sentry, ELK (Elasticsearch, Logstash, Kibana) ou Grafana Loki offre une visibilit\u00e9 en temps r\u00e9el sur le comportement de l\u2019application et facilite la corr\u00e9lation d\u2019\u00e9v\u00e9nements.\r\n\r\nUne journalisation efficace ne doit pas compromettre la confidentialit\u00e9 des donn\u00e9es : \u00e9vitez de logguer des mots de passe, des tokens ou des informations sensibles.\r\n\r\n\r\n## Falsification des requ\u00eates c\u00f4t\u00e9 serveur (SSRF)\r\n\r\nLa falsification des requ\u00eates c\u00f4t\u00e9 serveur (Server-Side Request Forgery, SSRF) est une vuln\u00e9rabilit\u00e9 qui permet \u00e0 un attaquant de contraindre le serveur \u00e0 effectuer des requ\u00eates vers des adresses internes ou externes. Cela peut conduire \u00e0 la divulgation d\u2019informations sensibles, \u00e0 la d\u00e9couverte de services internes, ou \u00e0 l\u2019exploitation de failles dans des services non expos\u00e9s au public.\r\n\r\nUn exemple courant est l'acc\u00e8s non autoris\u00e9 \u00e0 des m\u00e9tadonn\u00e9es de services cloud (comme AWS ou Google Cloud), via une requ\u00eate mal filtr\u00e9e.\r\n**Comment se prot\u00e9ger avec Django :**\r\n\r\n- **Validation stricte des entr\u00e9es utilisateur** : ne jamais faire aveugl\u00e9ment confiance aux URL ou adresses fournies par l'utilisateur. Utilisez des expressions r\u00e9guli\u00e8res ou des biblioth\u00e8ques sp\u00e9cialis\u00e9es pour valider et restreindre les domaines autoris\u00e9s.\r\n- **Filtrage des h\u00f4tes **: Django permet de d\u00e9finir une liste blanche via le param\u00e8tre ALLOWED_HOSTS. Bien que ce param\u00e8tre prot\u00e8ge principalement contre les attaques Host header, il doit \u00eatre correctement configur\u00e9 pour \u00e9viter certains d\u00e9tournements.\r\n- **Utilisation prudente de biblioth\u00e8ques tierces **: si votre application interagit avec des ressources distantes (API, fichiers, etc.), privil\u00e9giez des biblioth\u00e8ques r\u00e9put\u00e9es et v\u00e9rifiez les redirections ou les r\u00e9ponses inattendues.\r\n- **Restrictions r\u00e9seau** : limitez, au niveau de l\u2019infrastructure, les capacit\u00e9s de votre serveur \u00e0 effectuer des requ\u00eates sortantes, notamment vers les IP internes ou les m\u00e9tadonn\u00e9es cloud.\r\n\r\nEn cas de doute, isolez les composants sensibles dans des r\u00e9seaux distincts et appliquez le principe du moindre privil\u00e8ge.\r\n\r\n## En mati\u00e8re de s\u00e9curit\u00e9, l\u2019anticipation vaut toujours mieux que la r\u00e9action.\r\n\r\nLa s\u00e9curit\u00e9 des applications web ne rel\u00e8ve pas uniquement d\u2019un ensemble de bonnes pratiques : elle constitue un enjeu majeur pour la p\u00e9rennit\u00e9, la r\u00e9putation et la fiabilit\u00e9 d\u2019un projet. Le Top 10 OWASP 2021 nous rappelle que les vuln\u00e9rabilit\u00e9s les plus r\u00e9pandues restent souvent les plus n\u00e9glig\u00e9es.\r\n\r\nDjango, par sa conception, offre une architecture robuste int\u00e9grant des m\u00e9canismes de s\u00e9curit\u00e9 d\u00e8s la base : protection contre les injections, gestion fine des droits, hachage s\u00e9curis\u00e9 des mots de passe, ou encore pr\u00e9vention des attaques CSRF.\r\n\r\nCependant, aucun framework ne saurait garantir \u00e0 lui seul une s\u00e9curit\u00e9 parfaite. Il appartient aux d\u00e9veloppeurs de ma\u00eetriser les risques, de rester vigilants et de renforcer ces protections par une connaissance approfondie des menaces.\r\n\r\nAdopter une d\u00e9marche proactive, auditer r\u00e9guli\u00e8rement son code et suivre les recommandations de l\u2019OWASP sont autant de leviers pour construire des applications r\u00e9silientes, dignes de confiance.\r\n",
      "created": "2025-05-29T13:05:21.427899",
      "updated": "2025-06-01T10:40:10.701424",
      "meta_description": "OWASP Top 10 2021 : Comment Django prot\u00e8ge votre app contre les vuln\u00e9rabilit\u00e9s critiques (injections, SSRF, contr\u00f4le d'acc\u00e8s). D\u00e9couvrez ses m\u00e9canismes int\u00e9gr\u00e9s et bonnes pratiques pour s\u00e9curiser votre projet.",
      "status_id": 3
    },
    {
      "id": 3,
      "title": "Trop de types primitifs",
      "slug": "trop-de-types-primitifs",
      "body": "**Usage de types primitifs au lieu de petits objets pour des t\u00e2ches simples**\r\n\r\nDans un code bien structur\u00e9, il est pr\u00e9f\u00e9rable de cr\u00e9er de petits objets pour repr\u00e9senter des informations sp\u00e9cifiques telles que les devises, les intervalles de valeurs ou les num\u00e9ros de t\u00e9l\u00e9phone. Cependant, une obsession des types primitifs se manifeste lorsque des entiers, des cha\u00eenes de caract\u00e8res ou d'autres types primitifs sont employ\u00e9s \u00e0 la place d'objets d\u00e9di\u00e9s. Par exemple, au lieu de concevoir une classe \u00ab Devise \u00bb pour manipuler des valeurs mon\u00e9taires, le code utilise un simple float ou int. Ce choix, bien qu'initialement pratique, finit par complexifier la maintenance et la lisibilit\u00e9 du code.\r\n\r\n**Utilisation de constantes pour encoder des informations**\r\n\r\nUne pratique courante dans ce contexte est de d\u00e9finir des constantes pour signifier des informations sp\u00e9cifiques, comme `ROLE_UTILISATEUR_ADMIN = 1`, pour d\u00e9signer les utilisateurs administrateurs. Ce type de codage par des valeurs num\u00e9riques ou textuelles devient probl\u00e9matique d\u00e8s lors que le nombre de r\u00f4les ou de cat\u00e9gories augmente, ou si ces valeurs n\u00e9cessitent des modifications. Cette approche de codage rigide limite l\u2019\u00e9volutivit\u00e9 du code et peut facilement introduire des erreurs subtiles.\r\n\r\n**Emploi de cha\u00eenes de caract\u00e8res constantes comme noms de champs dans des tableaux de donn\u00e9es **\r\n\r\nTrop de primitifs se manifeste \u00e9galement lorsque des cha\u00eenes de caract\u00e8res sont utilis\u00e9es comme cl\u00e9s dans des tableaux ou dictionnaires pour repr\u00e9senter des noms de champs. Par exemple, dans une classe contenant un tableau de donn\u00e9es h\u00e9t\u00e9rog\u00e8nes, des constantes sous forme de cha\u00eenes de caract\u00e8res sont d\u00e9finies pour acc\u00e9der aux diff\u00e9rents champs (par exemple, `array[\"NOM_UTILISATEUR\"]`). Cette approche rend le code moins explicite, plus fragile et susceptible de g\u00e9n\u00e9rer des erreurs lorsque des modifications sont apport\u00e9es aux champs.\r\n\r\n## Les causes\r\n\r\n**Une solution de facilit\u00e9 dans des moments de rapidit\u00e9 **\r\n\r\nComme pour de nombreuses pratiques de codage mal avis\u00e9es, l\u2019obsession des types primitifs provient souvent d\u2019une solution de facilit\u00e9 ou d'une approche temporaire qui devient permanente. Le d\u00e9veloppeur pourrait se dire : \u00ab Il me suffit d'un champ pour stocker cette donn\u00e9e ! \u00bb Utiliser un type primitif est alors plus rapide que de cr\u00e9er une classe d\u00e9di\u00e9e, ce qui est per\u00e7u comme un effort injustifi\u00e9. Cependant, au fur et \u00e0 mesure que de nouvelles donn\u00e9es sont ajout\u00e9es de la m\u00eame mani\u00e8re, la classe gonfle et devient difficile \u00e0 manipuler et \u00e0 maintenir.\r\n\r\n**Simulation de types par des primitives **\r\n\r\nPour \u00e9viter de concevoir de nouveaux types, il est fr\u00e9quent de recourir \u00e0 des types primitifs qui \u00ab simulent \u00bb les types n\u00e9cessaires. Cela conduit \u00e0 des listes de valeurs autoris\u00e9es sous forme de nombres ou de cha\u00eenes, qui servent de type de substitution. Les noms de ces valeurs sp\u00e9cifiques sont ensuite attribu\u00e9s via des constantes pour faciliter la lecture, mais cela entra\u00eene une diffusion de ces constantes dans le code et rend difficile l\u2019identification de leur signification et de leur logique.\r\n\r\n**Simulation de champs \u00e0 l\u2019aide de types primitifs** \r\n\r\nUn autre sympt\u00f4me courant est l\u2019utilisation de tableaux de donn\u00e9es contenant des types primitifs pour simuler des champs. Ainsi, la classe inclut un tableau avec des donn\u00e9es vari\u00e9es, et des constantes sous forme de cha\u00eenes de caract\u00e8res servent d\u2019index pour acc\u00e9der \u00e0 chaque type de donn\u00e9e dans le tableau. Cette approche limite la clart\u00e9 du code et augmente le risque d\u2019erreurs, car ces cha\u00eenes d\u2019index peuvent \u00eatre facilement modifi\u00e9es ou mal utilis\u00e9es.\r\n\r\n## G\u00e9rer ce genre de cas\r\n\r\n**Cr\u00e9er des classes d\u00e9di\u00e9es pour les groupes logiques de primitives **\r\n\r\nLorsqu'une classe contient de nombreux champs primitifs, il peut \u00eatre pertinent de les regrouper logiquement au sein d'une nouvelle classe qui porte un nom explicite, facilitant ainsi la compr\u00e9hension de leur r\u00f4le. Par ailleurs, le comportement associ\u00e9 \u00e0 ces donn\u00e9es peut \u00eatre d\u00e9plac\u00e9 dans cette classe, offrant une meilleure encapsulation et rendant le code plus maintenable. La technique Remplacer une valeur de donn\u00e9e par un objet est recommand\u00e9e.\r\n\r\n**Encapsuler les param\u00e8tres primitifs dans un objet **\r\n\r\nLorsque des valeurs primitives sont fr\u00e9quemment pass\u00e9es en param\u00e8tres dans les m\u00e9thodes, il est judicieux de cr\u00e9er un objet param\u00e8tre pour les regrouper. Cela am\u00e9liore la lisibilit\u00e9 et permet de conserver la coh\u00e9rence des donn\u00e9es transmises. Les techniques Introduire un objet param\u00e8tre et Pr\u00e9server l\u2019objet entier sont adapt\u00e9es pour atteindre cet objectif.\r\n\r\n**Remplacer les codes de type par des classes ou des sous-classes **\r\n\r\nLorsque des variables de type primitif servent \u00e0 encoder des informations complexes, comme des codes de type, il est pr\u00e9f\u00e9rable de les remplacer par une classe ou des sous-classes d\u00e9di\u00e9es. Par exemple, au lieu d'utiliser un int pour repr\u00e9senter des cat\u00e9gories d'utilisateurs, une classe TypeUtilisateur ou des sous-classes Admin, Client, etc., permettent de structurer le code de mani\u00e8re claire. Les techniques Remplacer un code de type par une classe, Remplacer un code de type par des sous-classes  et Remplacer un code de type par un \u00e9tat/strat\u00e9gie permettent d\u2019adapter le code aux besoins sp\u00e9cifiques de chaque type.\r\n\r\n**Remplacer les tableaux par des objets **\r\n\r\nDans les cas o\u00f9 des tableaux de donn\u00e9es h\u00e9t\u00e9rog\u00e8nes sont utilis\u00e9s, remplacer ces tableaux par des objets permet d\u2019assurer une meilleure structuration du code. Chaque champ de l'objet remplace un \u00e9l\u00e9ment du tableau, rendant l\u2019intention du code plus claire. Pour cette t\u00e2che, la technique Remplacer un tableau par un objet est recommand\u00e9e.\r\n\r\n## Conclusion\r\n\r\nL\u2019utilisation d\u2019objets en lieu et place des types primitifs permet d\u2019augmenter la flexibilit\u00e9 du code. Les objets apportent une structure et peuvent \u00e9voluer avec les besoins, contrairement aux primitives qui imposent souvent des contraintes rigides.\r\n\r\nLe regroupement des op\u00e9rations sur des donn\u00e9es sp\u00e9cifiques au sein de classes permet d'\u00e9viter la dispersion du code. Les op\u00e9rations deviennent centralis\u00e9es et le code devient plus simple \u00e0 comprendre, avec des donn\u00e9es explicites et des comportements associ\u00e9s. Cela \u00e9limine les suppositions sur la signification de certaines constantes ou sur les raisons de leur pr\u00e9sence dans des tableaux.\r\n\r\nLa structuration par objets facilite l'identification de code dupliqu\u00e9. Les doublons sont g\u00e9n\u00e9ralement plus difficiles \u00e0 rep\u00e9rer lorsque des types primitifs sont diss\u00e9min\u00e9s dans le code, alors que les objets permettent de centraliser les donn\u00e9es et les op\u00e9rations, rendant plus \u00e9videntes les r\u00e9p\u00e9titions ou les similitudes dans les op\u00e9rations.\r\n",
      "created": "2025-06-02T13:48:05.969214",
      "updated": "2025-06-02T13:48:05.969225",
      "meta_description": "D\u00e9couvrez pourquoi l\u2019abus de types primitifs (int, string, float) nuit \u00e0 la qualit\u00e9 du code. Apprenez \u00e0 les remplacer par des objets pour am\u00e9liorer la maintenabilit\u00e9, la lisibilit\u00e9 et l\u2019\u00e9volutivit\u00e9 de vos applications.",
      "status_id": 3
    },
    {
      "id": 4,
      "title": "Les signatures de m\u00e9thodes trop grandes",
      "slug": "les-signatures-de-methodes-trop-grandes",
      "body": "Une m\u00e9thode qui prend plus de trois ou quatre param\u00e8tres peut rapidement devenir probl\u00e9matique. Ce ph\u00e9nom\u00e8ne se produit souvent lorsqu'on essaie de combiner plusieurs algorithmes ou logiques au sein d'une m\u00eame m\u00e9thode. Dans ces cas, une longue liste de param\u00e8tres est utilis\u00e9e pour indiquer quel algorithme ou quelle logique doit \u00eatre ex\u00e9cut\u00e9 et comment cela doit se d\u00e9rouler.\r\n\r\nUn autre facteur pouvant conduire \u00e0 des listes de param\u00e8tres excessives est l'effort de rendre les classes plus ind\u00e9pendantes entre elles. Par exemple, pour r\u00e9duire les d\u00e9pendances entre classes, le code qui s'occupait de cr\u00e9er des objets dans une m\u00e9thode est d\u00e9plac\u00e9 en dehors de celle-ci. D\u00e9sormais, c\u2019est la m\u00e9thode appelante qui cr\u00e9e ces objets et les passe en param\u00e8tres. Cela permet \u00e0 la classe d'origine de ne plus \u00eatre au courant des relations entre ces objets, ce qui r\u00e9duit sa d\u00e9pendance. Cependant, si plusieurs objets doivent \u00eatre cr\u00e9\u00e9s de cette mani\u00e8re, chacun d'entre eux devra \u00eatre transmis sous forme de param\u00e8tre, allongeant ainsi la liste des param\u00e8tres de la m\u00e9thode.\r\n\r\nLes longues listes de param\u00e8tres pr\u00e9sentent plusieurs inconv\u00e9nients. Elles rendent la m\u00e9thode plus difficile \u00e0 comprendre, car il devient de plus en plus complexe de savoir ce que chaque param\u00e8tre repr\u00e9sente et comment ils interagissent. De plus, ces listes de param\u00e8tres peuvent devenir contradictoires et compliqu\u00e9es \u00e0 utiliser \u00e0 mesure qu'elles grandissent.\r\n\r\n## V\u00e9rification des valeurs pass\u00e9es en param\u00e8tres\r\n\r\nV\u00e9rifiez quelles valeurs sont pass\u00e9es en tant que param\u00e8tres dans une m\u00e9thode. Si certains des arguments ne sont en r\u00e9alit\u00e9 que le r\u00e9sultat d'appels de m\u00e9thode sur un autre objet, vous pouvez appliquer la technique **Remplacer un param\u00e8tre par un appel de m\u00e9thode**. Cela consiste \u00e0 \u00e9viter de passer le r\u00e9sultat de cet appel en param\u00e8tre et \u00e0 plut\u00f4t effectuer cet appel directement \u00e0 l'int\u00e9rieur de la m\u00e9thode concern\u00e9e. L'objet sur lequel l'appel est fait peut \u00eatre stock\u00e9 dans un champ de la classe elle-m\u00eame ou bien transmis \u00e0 la m\u00e9thode sous forme de param\u00e8tre.\r\n\r\nAu lieu de passer un ensemble de donn\u00e9es issues d'un autre objet sous forme de plusieurs param\u00e8tres, il est souvent plus judicieux de passer directement l'objet entier \u00e0 la m\u00e9thode. Cette approche est connue sous le nom de **Pr\u00e9server l'objet entier**. Cela permet de simplifier le nombre de param\u00e8tres et d'acc\u00e9der plus facilement aux donn\u00e9es n\u00e9cessaires sans devoir les d\u00e9composer \u00e0 l'avance.\r\n\r\nCependant, si les param\u00e8tres proviennent de diff\u00e9rentes sources (c'est-\u00e0-dire de diff\u00e9rents objets ou structures de donn\u00e9es), il est recommand\u00e9 de les regrouper dans un objet unique. Ce regroupement de param\u00e8tres peut \u00eatre effectu\u00e9 \u00e0 l'aide de la technique **Introduire un objet param\u00e8tre**. Cela consiste \u00e0 cr\u00e9er un objet sp\u00e9cifique qui contiendra tous les param\u00e8tres n\u00e9cessaires, ce qui permet de ne passer qu'un seul param\u00e8tre \u00e0 la m\u00e9thode au lieu de plusieurs.",
      "created": "2025-06-02T13:52:58.039787",
      "updated": "2025-06-02T13:52:58.039793",
      "meta_description": "Des m\u00e9thodes avec trop de param\u00e8tres nuisent \u00e0 la lisibilit\u00e9 et \u00e0 la maintenance du code. D\u00e9couvrez comment simplifier vos signatures gr\u00e2ce aux techniques : introduire un objet param\u00e8tre, pr\u00e9server l\u2019objet entier et remplacer un param\u00e8tre par un appel de m\u00e9thode.",
      "status_id": 3
    },
    {
      "id": 5,
      "title": "Les m\u00e9thodes trop volumineuses",
      "slug": "les-methodes-trop-volumineuses",
      "body": "Dans le monde du d\u00e9veloppement logiciel, un code peut sembler parfait \u00e0 premi\u00e8re vue, mais il peut cacher des probl\u00e8mes sous-jacents qui peuvent se manifester au fil du temps. L'une des r\u00e8gles d'or en mati\u00e8re de d\u00e9veloppement est qu'une m\u00e9thode ou fonction d\u00e9passant dix/quinze lignes devrait vous alerter. Pourquoi ? Parce que cela pourrait \u00eatre le signe d'une mauvaise pratique de d\u00e9veloppement.\r\n\r\n## Raisons du Probl\u00e8me\r\n\r\nAu fil du temps, les d\u00e9veloppeurs ont tendance \u00e0 ajouter des fonctionnalit\u00e9s \u00e0 une m\u00e9thode sans jamais en supprimer. Ce ph\u00e9nom\u00e8ne est probl\u00e9matique, car il est g\u00e9n\u00e9ralement plus facile d'\u00e9crire du nouveau code que de relire et de r\u00e9viser le code existant. Ainsi, cette accumulation peut passer inaper\u00e7ue jusqu'\u00e0 ce que la m\u00e9thode devienne un v\u00e9ritable fouillis.\r\n\r\nLa pens\u00e9e selon laquelle \"ce ne sont que deux lignes\" incite souvent \u00e0 \u00e9viter la cr\u00e9ation de nouvelles m\u00e9thodes pour de petits ajouts. Cela entra\u00eene l\u2019ajout de lignes de code une \u00e0 une, ce qui peut aboutir \u00e0 un enchev\u00eatrement de code spaghetti. Ce type de code devient alors difficile \u00e0 comprendre, \u00e0 maintenir et \u00e0 faire \u00e9voluer.\r\n\r\n### Am\u00e9lioration\r\n\r\nHeureusement, il existe plusieurs strat\u00e9gies pour am\u00e9liorer la qualit\u00e9 de votre code :\r\n\r\n### Extraire la M\u00e9thode\r\n\r\nSi vous vous trouvez dans l'obligation de commenter une partie de votre code \u00e0 l'int\u00e9rieur d'une m\u00e9thode, cela peut \u00eatre un signe qu'il est temps de cr\u00e9er une nouvelle m\u00e9thode. En effet, si une portion de code n\u00e9cessite une explication, il est souvent pr\u00e9f\u00e9rable de la s\u00e9parer dans une m\u00e9thode distincte. Cela non seulement am\u00e9liore la lisibilit\u00e9 du code, mais permet \u00e9galement de rendre son fonctionnement plus clair. M\u00eame si vous n\u2019avez qu'une seule ligne de code \u00e0 isoler, le fait de l'extraire dans une m\u00e9thode d\u00e9di\u00e9e peut aider \u00e0 rendre votre code plus compr\u00e9hensible et maintenable.\r\n\r\n### G\u00e9rer les Variables\r\n\r\nLorsque les variables ou les param\u00e8tres locaux rendent difficile l'extraction d'une m\u00e9thode, plusieurs techniques peuvent \u00eatre utilis\u00e9es pour simplifier le processus :\r\n\r\n- Remplacer la m\u00e9thode temporaire par une requ\u00eate : Au lieu de laisser des variables temporaires encombrer la m\u00e9thode, envisagez de les remplacer par une requ\u00eate qui renvoie directement la valeur souhait\u00e9e. Cela peut aider \u00e0 r\u00e9duire la complexit\u00e9 et \u00e0 am\u00e9liorer la lisibilit\u00e9.\r\n- Introduire un objet de param\u00e8tre : Si une m\u00e9thode n\u00e9cessite plusieurs param\u00e8tres, pensez \u00e0 cr\u00e9er un objet qui regroupe ces param\u00e8tres. Cela permet de passer un seul objet \u00e0 la m\u00e9thode au lieu de plusieurs variables, rendant l'appel de la m\u00e9thode plus clair. \r\n- Pr\u00e9server l'objet entier : Dans certains cas, il peut \u00eatre judicieux de passer l'objet entier \u00e0 la m\u00e9thode plut\u00f4t que de passer uniquement certaines de ses propri\u00e9t\u00e9s. Cela peut simplifier la gestion des donn\u00e9es et \u00e9viter des erreurs li\u00e9es \u00e0 des variables manquantes.\r\n\r\n### D\u00e9placer des M\u00e9thodes\r\n\r\nSi aucune des solutions pr\u00e9c\u00e9dentes ne permet de simplifier votre code, pensez \u00e0 d\u00e9placer la m\u00e9thode enti\u00e8re dans un objet distinct. Cette approche peut contribuer \u00e0 rendre votre code plus clair et plus modulaire, car elle permet de regrouper des fonctionnalit\u00e9s similaires dans une seule entit\u00e9. Cela facilite \u00e9galement la maintenance et les tests, car chaque objet peut \u00eatre g\u00e9r\u00e9 ind\u00e9pendamment des autres.\r\n\r\n### D\u00e9composer les Conditions et Boucles\r\n\r\nLes op\u00e9rateurs conditionnels (comme if, else, etc.) et les boucles (comme for ou while) peuvent souvent indiquer que votre code contient des \u00e9l\u00e9ments qui pourraient \u00eatre mieux organis\u00e9s dans une m\u00e9thode distincte. Lorsque vous remarquez de telles structures, envisagez d'utiliser des techniques comme :\r\n\r\n- D\u00e9composer la condition : Si une condition devient trop complexe, il peut \u00eatre utile de la simplifier en la s\u00e9parant dans une m\u00e9thode distincte. Cela rendra le code plus lisible et facilitera la compr\u00e9hension de la logique.\r\n- Extraire la m\u00e9thode pour les boucles : Si une boucle contient un code substantiel, envisagez de cr\u00e9er une m\u00e9thode distincte pour g\u00e9rer ce code. Cela permet de clarifier ce que fait la boucle et de r\u00e9duire la longueur de la m\u00e9thode d'origine.\r\n\r\n## B\u00e9n\u00e9fices\r\n\r\nLes classes qui contiennent des m\u00e9thodes courtes ont tendance \u00e0 \u00eatre plus durables et plus faciles \u00e0 maintenir. En effet, plus une m\u00e9thode est longue, plus elle devient difficile \u00e0 comprendre. De plus, les m\u00e9thodes longues peuvent dissimuler du code dupliqu\u00e9, ce qui complique davantage la maintenance du code. En ayant des m\u00e9thodes plus courtes et mieux d\u00e9finies, vous facilitez la compr\u00e9hension et la gestion de votre code.\r\nPerformances\r\n\r\nUn argument fr\u00e9quemment avanc\u00e9 contre la r\u00e9duction de la taille des m\u00e9thodes est qu'elle pourrait nuire aux performances. Cependant, dans la plupart des cas, cet impact est si minime qu'il ne m\u00e9rite pas d'inqui\u00e9tude. En \u00e9crivant un code clair et lisible, vous serez mieux plac\u00e9 pour rep\u00e9rer des opportunit\u00e9s d'optimisation et ainsi r\u00e9aliser de r\u00e9els gains de performance si cela s'av\u00e8re n\u00e9cessaire.",
      "created": "2025-06-02T14:00:00.904416",
      "updated": "2025-06-02T14:12:43.859562",
      "meta_description": "M\u00e9thodes trop longues ? Apprenez \u00e0 les simplifier pour un code plus clair, maintenable et performant.",
      "status_id": 3
    },
    {
      "id": 6,
      "title": "Code propre : Lutter contre la Dette Technique",
      "slug": "code-propre-lutter-contre-la-dette-technique",
      "body": "**Un code propre est \u00e9vident pour les autres d\u00e9veloppeurs.**\r\n\r\nIl ne s'agit pas de cr\u00e9er des algorithmes complexes et sophistiqu\u00e9s. Des noms de variables mal choisis, des classes et m\u00e9thodes surcharg\u00e9es, des \"nombres magiques\" \u2014 tous ces \u00e9l\u00e9ments rendent le code confus et difficile \u00e0 comprendre. Un bon code est lisible, compr\u00e9hensible et auto-explicatif, m\u00eame pour quelqu'un qui ne l\u2019a pas \u00e9crit.\r\n\r\n**Un code propre ne contient pas de doublons.**\r\n\r\nLa duplication complique les changements futurs. Chaque fois que vous devez modifier un morceau de code dupliqu\u00e9, vous devez vous souvenir de r\u00e9pliquer ce changement \u00e0 chaque instance. Cela augmente inutilement la charge cognitive et ralentit le travail.\r\n\r\n**Un code propre est minimaliste.**\r\n\r\nIl doit contenir le strict n\u00e9cessaire en termes de classes et d'\u00e9l\u00e9ments. Moins de code signifie moins de choses \u00e0 comprendre et \u00e0 maintenir, donc moins de bugs potentiels. Le code est une responsabilit\u00e9 \u2014 gardez-le concis et simple.\r\n\r\n**Les commentaires dans un code propre**\r\n\r\nLes commentaires jouent un r\u00f4le important dans la lisibilit\u00e9 et la compr\u00e9hension d'un code, mais leur utilisation doit \u00eatre judicieuse. Voici comment aborder les commentaires dans un code propre :\r\n\r\n- **Clart\u00e9 et Contexte **: Les commentaires doivent expliquer le pourquoi d'un choix plut\u00f4t que le quoi. Un bon code devrait \u00eatre suffisamment clair pour que les d\u00e9veloppeurs comprennent la logique sans avoir \u00e0 lire des commentaires d\u00e9taill\u00e9s. Les commentaires peuvent fournir un contexte pr\u00e9cieux, comme la raison d'un algorithme particulier ou des d\u00e9tails sur une d\u00e9cision de conception.\r\n- **\u00c9viter les Redondances** : \u00c9vitez de commenter des \u00e9l\u00e9ments \u00e9vidents ou de d\u00e9crire ce que fait le code ligne par ligne. Par exemple, au lieu de commenter un code comme ci-dessous, il vaut mieux choisir des noms de variables explicites et rendre le code lisible.\r\n\r\n```python\r\nx = x + 1  # Ajoute 1 \u00e0 x\r\n```\r\n\r\n- **Documentation des Fonctions** : Utilisez des docstrings (commentaires en d\u00e9but de fonction) pour expliquer le but de la fonction, ses param\u00e8tres et ce qu\u2019elle retourne. Cela aide \u00e0 comprendre comment utiliser une fonction sans avoir \u00e0 lire son code.\r\n```python\r\ndef add(a, b):\r\n    \"\"\"\r\n    Additionne deux nombres.\r\n\r\n    :param a: Premier nombre\r\n    :param b: Deuxi\u00e8me nombre\r\n    :return: Somme de a et b\r\n    \"\"\"\r\n    return a + b\r\n```\r\n\r\n- **Mettre \u00e0 Jour les Commentaires** : Les commentaires doivent \u00eatre mis \u00e0 jour en m\u00eame temps que le code. Des commentaires obsol\u00e8tes peuvent induire en erreur et causer plus de confusion qu\u2019ils n\u2019en r\u00e9solvent. Une bonne pratique est de revoir les commentaires lors de chaque refactoring.\r\n- **Sections et TODOs** : Les commentaires peuvent \u00eatre utilis\u00e9s pour marquer des sections de code ou des t\u00e2ches \u00e0 accomplir (TODOs). Cependant, veillez \u00e0 ce que ces commentaires soient \u00e9galement suivis et maintenus. Par exemple :\r\n```python\r\n# TODO: Optimiser cette fonction pour de meilleures performances\r\n```\r\n- **Exceptions et Cas Particuliers** : Si vous g\u00e9rez des cas particuliers ou des exceptions qui ne sont pas \u00e9vidents, des commentaires peuvent aider \u00e0 clarifier pourquoi une solution a \u00e9t\u00e9 choisie. Cela permet de mieux comprendre les d\u00e9cisions qui ont \u00e9t\u00e9 prises.\r\n\r\nDans un code propre, les commentaires sont un compl\u00e9ment, pas un substitut \u00e0 la clart\u00e9 du code. Ils doivent \u00eatre utilis\u00e9s pour am\u00e9liorer la compr\u00e9hension et fournir des informations essentielles sans surcharger le code de d\u00e9tails inutiles. Un bon \u00e9quilibre entre un code lisible et des commentaires pertinents est la cl\u00e9 d'un code maintenable et efficace.\r\n\r\n### Un code propre r\u00e9ussit tous les tests.\r\n\r\nSi seulement 95 % de vos tests passent, c\u2019est un signal d\u2019alerte. Pire encore, une couverture de tests \u00e0 0 % signifie que vous travaillez sans filet. Un code propre est pleinement test\u00e9, assurant ainsi sa robustesse.\r\n\r\n### Un code propre est \u00e9conomique \u00e0 long terme.\r\n\r\nUn code bien \u00e9crit est moins co\u00fbteux \u00e0 maintenir. Il r\u00e9duit la complexit\u00e9, les erreurs, et donc le temps pass\u00e9 \u00e0 corriger ou \u00e0 faire \u00e9voluer le projet. En fin de compte, cela diminue les frais techniques.",
      "created": "2025-06-02T14:10:16.255067",
      "updated": "2025-06-02T14:10:16.255074",
      "meta_description": "Un code propre, c\u2019est un code qui parle de lui-m\u00eame. Moins de bugs, plus de clart\u00e9, z\u00e9ro dette technique. La propret\u00e9, c\u2019est la puissance.",
      "status_id": 3
    },
    {
      "id": 7,
      "title": "D\u00e9crire le document",
      "slug": "decrire-le-document",
      "body": "Les utilisateurs de lecteurs d\u2019\u00e9cran ne savent pas toujours sur quelle page ils se trouvent lorsqu\u2019ils naviguent sur un site web. Ils peuvent ne pas comprendre le sujet d\u2019une page ou ne pas remarquer que le contenu a chang\u00e9 si le titre de la page n\u2019est pas correctement d\u00e9fini.\r\n\r\nVous pouvez nommer les pages \u00e0 l\u2019aide de l\u2019\u00e9l\u00e9ment HTML `<title>`. Le titre doit \u00eatre unique et d\u00e9crire de mani\u00e8re concise le sujet ou l\u2019objectif de chaque page. [Voir l\u2019exemple 1](#exemple-1)\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span>**\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n  <head>\r\n    <title>Produits \u2013 Magasin de v\u00eatements Renaud</title>\r\n  </head>\r\n</html>\r\n```\r\n\r\nPour les aper\u00e7us de m\u00e9dias sociaux, vous pouvez \u00e9ventuellement utiliser an <a href=\"https://ogp.me/\" target=\"_blank\">open graph meta tag</a> pour inclure plus d'informations ou des informations diff\u00e9rentes, comme le montre  [l\u2019exemple 2](#exemple-2) :\r\n\r\n**<span id=\"exemple-2\">Exemple 2</span>**\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n  <head>\r\n    <title>Produits \u2013 Magasin de v\u00eatements Renaud</title>\r\n\t\t<meta property=\"og:title\"  content=\"Trouvez des robes, jeans et plus encore chez Renaud\">\r\n  </head>\r\n</html>\r\n```\r\nAjouter un contexte selon l\u2019\u00e9tat de la page peut aussi \u00eatre utile (voir [exemple 3 - 6](#exemple-3-6)) :\r\n\r\n**<span id=\"exemple-3-6\">Exemple 3 \u00e0 6</span>**\r\n```html\r\n<!-- Exemple 3 -->\r\n<title>Commande (\u00e9tape 3 sur 4) \u2013 Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- Exemple 4 -->\r\n<title>2 erreurs \u2013 Inscription \u2013 Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- Exemple 5 -->\r\n<title>21 r\u00e9sultats pour \u201crobes\u201d \u2013 Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- Exemple 6 -->\r\n<title>Page 2 \u2013 R\u00e9sultats de recherche \u2013 Magasin de v\u00eatements Renaud</title>\r\n```\r\n\r\nParfois, il faut travailler pour s'orienter sur un site Web, par exemple lorsque les utilisateurs atterrissent sur une page provenant d'une ressource externe comme un moteur de recherche ou si des changements de page se produisent de fa\u00e7on inattendue ou inopin\u00e9e. C'est particuli\u00e8rement vrai pour les applications \u00e0 page unique (SPA), o\u00f9 la navigation sur les pages fonctionne diff\u00e9remment de la plupart des sites.\r\n\r\nLe titre de la page est l'un des \u00e9l\u00e9ments essentiels d'un document HTML, et les utilisateurs b\u00e9n\u00e9ficient d'un titre de page bien form\u00e9 et descriptif.\r\n\r\nLes utilisateurs du lecteur d'\u00e9cran peuvent utiliser des raccourcis pour annoncer le titre de la page. Par exemple, s'ils cliquent sur un lien dans une SPA et que le contenu change, mais qu'il n'y a pas d'annonce de changement, ils peuvent utiliser un raccourci pour s'orienter et v\u00e9rifier s'ils ont atterri sur une autre page. Vous pouvez essayer vous-m\u00eame en utilisant l'un des raccourcis du [tableau 1](#tableau-1).\r\n\r\n<table id=\"tableau-1\">\r\n    <caption>Diff\u00e9rentes fa\u00e7ons d'annoncer le titre de la page avec les lecteurs d'\u00e9cran.</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Commande</th>\r\n            <th scope=\"col\">Annonce</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>JAWS</td>\r\n            <td><code>Ins</code> + <code>T</code></td>\r\n            <td>Titre de la page</td>\r\n        </tr>\r\n        <tr>\r\n            <td>NVDA</td>\r\n            <td><code>Ins</code> + <code>T</code></td>\r\n            <td>Titre de la page</td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver macOS</td>\r\n            <td><code>VO</code> + <code>Shift</code> + <code>I</code></td>\r\n            <td>R\u00e9sum\u00e9 de la page, y compris le titre de la page</td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver macOS</td>\r\n            <td><code>VO</code> + <code>F</code></td>\r\n            <td>Titre de la page</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n**Note** : Par d\u00e9faut , VO correspond \u00e0 la combinaison des pressions simultan\u00e9es sur `Control` et `Option` dans VoiceOver sur macOS. Tu peux aussi faire correspondre `VO` \u00e0 `Caps Lock` dans les <a href=\"https://support.apple.com/en-gb/guide/voiceover/unac048/10/mac/14.0\" target=\"_blank\">param\u00e8tres de VoiceOver Utility</a>.\r\n\r\nIl y a d'autres raisons d'\u00e9crire de bons titres de page : ils servent d'\u00e9tiquettes pour les pages de signets/favoris, et les moteurs de recherche utilisent le titre dans leurs pages de r\u00e9sultats. Les sites de m\u00e9dias sociaux, les applications de chat et de messagerie et les logiciels similaires utilisent le titre dans les aper\u00e7us de liens lorsqu'aucun autre titre n'est sp\u00e9cifi\u00e9. Il convient de noter que la m\u00e9tabalise open graph pr\u00e9sent\u00e9e dans l'[exemple 2](#exemple-2) n'est pas une alternative \u00e0 l'\u00e9l\u00e9ment `<title>`. C'est au site ou \u00e0 l'application d'interpr\u00e9ter ou non le titre open graph. Id\u00e9alement, le contenu du titre natif devrait \u00eatre suffisamment bon pour r\u00e9pondre \u00e0 tous les besoins.\r\n\r\nIl existe plusieurs bonnes pratiques que vous devez suivre lorsque vous r\u00e9digez des titres de pages.\r\n\r\n## Le titre doit \u00eatre unique\r\n\r\nLe `<title>` sert d'\u00e9tiquette dans les onglets ou les fen\u00eatres du navigateur. Les titres uniques permettent de distinguer une page d'une autre si plusieurs onglets du m\u00eame site sont ouverts. Un probl\u00e8me fr\u00e9quent est que le titre est le m\u00eame sur toutes les pages (voir [exemple 7](#exemple-7)).\r\n\r\n**<span id=\"exemple-7\">Exemple 7</span>&nbsp;&ndash;&nbsp;Mauvaise pratique - Trois pages diff\u00e9rentes avec le m\u00eame titre.**\r\n```html\r\n<!-- produits.html -->\r\n<title> Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- a-propos-de-nous.html -->\r\n<title> Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- contact.html -->\r\n<title> Magasin de v\u00eatements Renaud</title>\r\n```\r\nUtilisez des titres uniques pour communiquer le but de la page et am\u00e9liorer l'orientation (voir l'[exemple 8](#exemple-8)).\r\n\r\n**<span id=\"exemple-8\">Exemple 8</span>&nbsp;&ndash;&nbsp;Trois pages diff\u00e9rentes, chacune avec un titre unique**\r\n\r\n```html\r\n<!-- produits.html -->\r\n<title> Les produits - Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- a-propos-de-nous.html -->\r\n<title> Notre \u00e9quipe - Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- contact.html -->\r\n<title> Nous contacter - Magasin de v\u00eatements Renaud</title>\r\n```\r\n\r\nCela s'applique aux sites Web comportant plusieurs pages, mais aussi aux SPA. Il se peut que vous deviez prendre des mesures suppl\u00e9mentaires dans une SPA , mais si l'utilisateur navigue vers un itin\u00e9raire diff\u00e9rent, le titre de la page doit \u00e9galement changer. Hidde De Vries explique comment faire cela dans \u00ab&nbsp;<a href=\"https://hidde.blog/accessible-page-titles-in-a-single-page-app/\" target=\"_blank\">Accessible page titles in a Single Page App</a>&nbsp;\u00bb.\r\n\r\n### Le titre doit \u00eatre concis\r\n\r\nLe titre de doit \u00eatre concis et d\u00e9crire avec pr\u00e9cision l'objectif de la page. C'est la premi\u00e8re information que re\u00e7oit un utilisateur de lecteur d'\u00e9cran lorsqu'il acc\u00e8de \u00e0 une page. Ils n'ont pas besoin d'un r\u00e9sum\u00e9 d\u00e9taill\u00e9 du contenu de la page, mais d'une description succincte.\r\n\r\nUne autre raison de limiter la longueur du titre est qu'il est g\u00e9n\u00e9ralement coup\u00e9 dans les pages de r\u00e9sultats de recherche \u00e0 partir d'une certaine longueur de caract\u00e8res (environ 50 \u00e0 60 caract\u00e8res).\r\n\r\n### Le titre doit \u00eatre descriptif\r\n\r\nLorsque vous donnez un titre \u00e0 une page, faites-le en pensant \u00e0 l'utilisateur. Bien que le r\u00e9f\u00e9rencement soit important, l'exp\u00e9rience de l'utilisateur est bien plus importante. Le titre doit d\u00e9crire l'objectif de la page et ne doit pas inclure de termes de marketing ou de r\u00e9f\u00e9rencement dans le seul but d'am\u00e9liorer le classement de la page.\r\n\r\n### Les informations pertinentes viennent en premier\r\n\r\nLe titre doit commencer par le nom de la page, suivi du nom du site, de l'entreprise ou de l'organisation, comme le montre l'[exemple 2](#exemple-2). Le fait de placer les informations pertinentes en premier r\u00e9duit les r\u00e9p\u00e9titions pour les utilisateurs de lecteurs d'\u00e9cran qui visitent plusieurs pages d'un site, car ils obtiennent d'abord les d\u00e9tails sp\u00e9cifiques \u00e0 la page. Cette fa\u00e7on d'organiser le contenu facilite le balayage et l'identification des pages lorsque de nombreux onglets sont ouverts.\r\n\r\nNe mettez pas le nom de l'organisation en premier (comme dans l'[exemple 9](#exemple-9)) car les informations pertinentes risquent d'\u00eatre coup\u00e9es\r\n\r\n**<span id=\"exemple-9\">Exemple 9</span> : Mauvaise pratique - Nom du site suivi du nom de la page.**\r\n\r\n```html\r\n<title>Magasin Renaud - Produits</title>\r\n```\r\n### Informations d\u00e9pendantes du contexte\r\n\r\nParfois, il est utile d'ajouter un contexte ou des informations suppl\u00e9mentaires. Par exemple, si vous divisez une page en plusieurs \u00e9tapes, le titre doit inclure l'\u00e9tape en cours. L'[exemple 4](#exemple-3-6) montre le titre de la troisi\u00e8me des quatre \u00e9tapes d'un processus de paiement. S'il y a des erreurs de validation dans un formulaire, vous pouvez indiquer le nombre d'erreurs. Pour les pages de r\u00e9sultats de recherche, vous pouvez ajouter le nombre de r\u00e9sultats ou la page actuelle.\r\n",
      "created": "2025-06-02T14:41:36.666000",
      "updated": "2025-06-02T16:49:32.014030",
      "meta_description": "Comment r\u00e9diger des titres de pages HTML accessibles et utiles pour les lecteurs d\u2019\u00e9cran.",
      "status_id": 3
    },
    {
      "id": 8,
      "title": "Flask - chapitre 1 : Hello world !",
      "slug": "flask-chapitre-1-hello-world",
      "body": "\u00ab Flask, c\u2019est amusant. \u00bb Cette d\u00e9claration audacieuse est l'une des premi\u00e8res choses que vous verrez en consultant la documentation officielle de Flask et, au fil de ce tuto, vous comprendrez pourquoi tant de d\u00e9veloppeurs Python sont du m\u00eame avis.\r\n\r\n## Qu\u2019est-ce que Flask ?\r\nFlask est un framework Web l\u00e9ger \u00e9crit en Python. Il a commenc\u00e9 comme une blague du 1er avril, avant de devenir un outsider tr\u00e8s populaire dans le monde des frameworks web en Python.\r\nAujourd\u2019hui, c\u2019est l\u2019un des frameworks Python les plus utilis\u00e9s par les start-ups, et il est de plus en plus reconnu comme l\u2019outil id\u00e9al pour d\u00e9velopper des solutions simples et rapides dans la plupart des entreprises.\r\nAu c\u0153ur de Flask, on trouve un ensemble de biblioth\u00e8ques puissantes permettant de g\u00e9rer les t\u00e2ches les plus courantes du d\u00e9veloppement web, telles que :\r\n\r\n- Le routage d\u2019URL, qui permet de lier facilement des URLs \u00e0 votre code\r\n- Le rendu de templates avec Jinja2, l\u2019un des moteurs de templates Python les plus puissants\r\n- La gestion des sessions et la s\u00e9curisation des cookies\r\n- L\u2019analyse des requ\u00eates HTTP et une gestion flexible des r\u00e9ponses\r\n- Un d\u00e9bogueur interactif accessible via le navigateur\r\n- Une gestion de configuration d\u2019application simple, souple et facile \u00e0 utiliser\r\n\r\nCe tuto vous apprendra \u00e0 utiliser ces outils \u00e0 travers des exemples pratiques et concrets. Nous aborderons \u00e9galement des biblioth\u00e8ques tierces couramment utilis\u00e9es pour les fonctionnalit\u00e9s que Flask ne propose pas en natif, comme l\u2019acc\u00e8s aux bases de donn\u00e9es ou la validation de formulaires. \u00c0 la fin de ce tuto, vous serez pr\u00eat \u00e0 vous lancer dans votre prochain grand projet avec Flask.\r\n\r\n### Une grande libert\u00e9 implique une grande responsabilit\u00e9\r\n\r\nComme le dit la documentation, Flask, c\u2019est amusant, mais cela peut aussi \u00eatre un d\u00e9fi, en particulier lorsque vous d\u00e9veloppez une application de grande envergure. Contrairement \u00e0 d\u2019autres frameworks web populaires en Python, comme Django, Flask n\u2019impose pas de structure particuli\u00e8re pour organiser vos modules ou votre code. Si vous avez d\u00e9j\u00e0 utilis\u00e9 d\u2019autres frameworks web, vous pourriez \u00eatre surpris de constater que d\u00e9velopper avec Flask ressemble davantage \u00e0 \u00e9crire du Python pur qu\u2019\u00e0 remplir un canevas impos\u00e9 par le framework.\r\n\r\nCe tuto vous apprendra \u00e0 utiliser Flask pour \u00e9crire des applications claires et expressives.\r\nAu fil de votre progression, non seulement vous deviendrez un d\u00e9veloppeur Flask exp\u00e9riment\u00e9, mais vous renforcerez aussi vos comp\u00e9tences en d\u00e9veloppement Python\r\n\r\n## Mise en place d\u2019un environnement de d\u00e9veloppement\r\n\r\nFlask est \u00e9crit en Python, donc avant de commencer \u00e0 cr\u00e9er des applications Flask, nous devons nous assurer que Python est install\u00e9. La plupart des distributions Linux et les versions r\u00e9centes de macOS sont livr\u00e9es avec Python pr\u00e9install\u00e9.\r\nLes exemples de ce tuto n\u00e9cessitent Python 3.x. Des instructions pour installer Python sont disponibles \u00e0 l\u2019adresse suivante : <a href=\"http://www.python.org\" target=\"_blank\">http://www.python.org</a>.\r\n\r\nSi c\u2019est la premi\u00e8re fois que vous utilisez Python, de nombreuses ressources gratuites et de qualit\u00e9 sont disponibles sur le web.\r\nJe vous recommande <a href=\"https://inforef.be/swi/download/apprendre_python3_5.pdf\" target=\"blank\">Apprendre \u00e0 programmer avec Python 3</a>, de G\u00e9rard Swinnen, accessible gratuitement.\r\n\r\nVous pouvez v\u00e9rifier que Python est install\u00e9 et que vous disposez de la bonne version en lan\u00e7ant l\u2019interpr\u00e9teur interactif Python depuis un terminal :\r\n\r\n```bash\r\n$python3\r\nPython 3.9.2 (default, Mar 20 2025, 02:07:39) \r\n[GCC 10.2.1 20210110] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> \r\n```\r\n\r\n\u00c0 l\u2019invite de commande (`>>>`), tapez `exit()` puis appuyez sur Entr\u00e9e pour quitter l\u2019interpr\u00e9teur.\r\n\r\n### Installation de packages Python\r\n\r\nMaintenant que vous vous \u00eates assur\u00e9 que Python est correctement install\u00e9, nous allons installer quelques packages Python populaires qui seront utilis\u00e9s tout au long de ce tuto.\r\n\r\nNous allons d\u2019abord installer ces packages \u00e0 l\u2019\u00e9chelle du syst\u00e8me, mais une fois cela fait, nous travaillerons exclusivement dans des environnements virtuels.\r\n\r\n### Installation de pip\r\n\r\nL\u2019installateur de packages Python de r\u00e9f\u00e9rence est `pip`. Nous l\u2019utiliserons tout au long de ce tuto pour installer Flask et d\u2019autres biblioth\u00e8ques tierces.\r\n\r\nSi vous avez d\u00e9j\u00e0 `setuptools` install\u00e9, vous pouvez installer `pip` en lan\u00e7ant simplement la commande suivante :\r\n\r\n```bash\r\n$sudo easy_install pip\r\n```\r\nApr\u00e8s avoir termin\u00e9 l\u2019installation, v\u00e9rifiez que pip est correctement install\u00e9 :\r\n\r\n```bash\r\n$pip --version\r\npip 22.1 from /home/$user/.local/lib/python3.9/site-packages/pip (python 3.9)\r\n```\r\n\r\nLes num\u00e9ros de version sont susceptibles d\u2019\u00e9voluer, donc pour un guide d\u00e9finitif, veuillez consulter les instructions officielles disponibles \u00e0 l\u2019adresse suivante : <a href=\"http://www.pip-installer.org/en/latest/installing.html\" target=\"_blank\">http://www.pip-installer.org/en/latest/installing.html</a>.\r\n\r\n### Installation de virtualenv\r\n\r\nUne fois `pip` install\u00e9, nous pouvons passer \u00e0 l\u2019installation de l\u2019outil le plus important dans la bo\u00eete \u00e0 outils de tout d\u00e9veloppeur Python : `virtualenv`. `Virtualenv` facilite la cr\u00e9ation d\u2019environnements Python isol\u00e9s, chacun avec ses propres copies des packages syst\u00e8me et tiers.\r\n\r\n### Pourquoi utiliser virtualenv ?\r\n\r\n`Virtualenv` r\u00e9sout plusieurs probl\u00e8mes li\u00e9s \u00e0 la gestion des packages. Imaginez que vous ayez une vieille application construite avec une toute premi\u00e8re version de Flask, et que vous souhaitiez cr\u00e9er un nouveau projet avec la version la plus r\u00e9cente de Flask.\r\nSi Flask est install\u00e9 \u00e0 l\u2019\u00e9chelle du syst\u00e8me, vous seriez oblig\u00e9 soit de mettre \u00e0 jour votre ancien projet, soit d\u2019\u00e9crire votre nouveau projet en utilisant l\u2019ancienne version de Flask. Si les deux projets utilisaient `virtualenv`, chacun pourrait fonctionner avec sa propre version de Flask, sans conflits ni probl\u00e8mes. `Virtualenv` facilite le contr\u00f4le des versions des packages tiers utilis\u00e9s par votre projet.\r\n\r\nAutre point important : installer des packages \u00e0 l\u2019\u00e9chelle du syst\u00e8me n\u00e9cessite g\u00e9n\u00e9ralement des privil\u00e8ges \u00e9lev\u00e9s (par exemple, `sudo pip install foo`). En utilisant `virtualenv`, vous pouvez cr\u00e9er des environnements Python et installer des packages en tant qu\u2019utilisateur normal. Cela est particuli\u00e8rement utile si vous d\u00e9ployez sur un h\u00e9bergement mutualis\u00e9 ou si vous n\u2019avez pas les droits d\u2019administrateur.\r\n\r\n### Installation de virtualenv avec pip\r\n\r\nNous allons utiliser pip pour installer `virtualenv` ; comme il s\u2019agit d\u2019un package Python standard, il peut \u00eatre install\u00e9 comme n\u2019importe quel autre package Python. Pour vous assurer que virtualenv est install\u00e9 \u00e0 l\u2019\u00e9chelle du syst\u00e8me, ex\u00e9cutez la commande suivante (qui n\u00e9cessite des privil\u00e8ges \u00e9lev\u00e9s) :\r\n\r\n```bash\r\n$sudo pip install virtualenv\r\n$virtualenv --version\r\nvirtualenv 20.14.1 from /home/$user/.local/lib/python3.9/site-packages/virtualenv/__init__.py\r\n```\r\n\r\nLes num\u00e9ros de version sont susceptibles d\u2019\u00e9voluer, donc pour un guide d\u00e9finitif, veuillez consulter les instructions officielles sur : <a href=\"http://virtualenv.org\" target=\"_blank\">http://virtualenv.org</a>.\r\n\r\n## Cr\u00e9er votre premi\u00e8re application Flask\r\n\r\nMaintenant que nous avons install\u00e9 les outils n\u00e9cessaires, nous sommes pr\u00eats \u00e0 cr\u00e9er notre premi\u00e8re application Flask.\r\nPour commencer, cr\u00e9ez un r\u00e9pertoire \u00e0 un emplacement pratique qui contiendra tous vos projets Python.\r\nDans le terminal ou l\u2019invite de commande, placez-vous dans ce r\u00e9pertoire ; pour ma part, c\u2019est /home/$user/projects, ou simplement ~/projects sur les syst\u00e8mes Unix.\r\n\r\n```bash\r\n$mkdir projects\r\n$cd projects\r\n```\r\nNous allons maintenant cr\u00e9er un environnement virtuel (`virtualenv`). Les commandes ci-dessous vont cr\u00e9er un nouveau r\u00e9pertoire nomm\u00e9 hello_flask \u00e0 l\u2019int\u00e9rieur de votre dossier de projets, contenant un environnement Python complet et isol\u00e9.\r\n\r\n```bash\r\n$virtualenv venv\r\n```\r\nVous devriez avoir un nouveau dossier du nom de `venv` \u00e0 la racine de `~ /projects`. Maintenant, il va falloir activer cet environnement virtuel. \r\n\r\n```bash\r\n$source venv/bin/activate\r\n```\r\nVous devriez constater que votre prompt dans votre terminal a chang\u00e9. En effet, avant les droits, le nom du dossier `venv` est entre parenth\u00e8ses. \r\n\r\n**note**: Dans un environnement Microsoft, \u00e7a n'est pas le cas ! \r\n```bash\r\n(venv) user@host:~/projects$ \r\n```\r\nLorsque vous activez un virtualenv, votre variable d\u2019environnement `PATH` est temporairement modifi\u00e9e afin de garantir que les packages que vous installez ou utilisez restent confin\u00e9s \u00e0 cet environnement virtuel.\r\n\r\n### Installer Flask dans votre virtualenv\r\n\r\nMaintenant que nous avons v\u00e9rifi\u00e9 que notre environnement virtuel est correctement configur\u00e9, nous pouvons installer Flask.\r\nLorsque vous \u00eates dans un virtualenv, **vous ne devez jamais installer de packages avec des privil\u00e8ges administrateur.**\r\nSi vous obtenez une erreur de permission lors de l\u2019installation de Flask, v\u00e9rifiez bien que votre virtualenv est activ\u00e9 correctement.\r\n\r\n```bash\r\n(venv)$ pip install Flask\r\n```\r\n\r\nVous verrez d\u00e9filer du texte pendant que pip t\u00e9l\u00e9charge le package Flask ainsi que ses d\u00e9pendances avant de les installer dans votre environnement virtuel. Flask d\u00e9pend de quelques biblioth\u00e8ques tierces suppl\u00e9mentaires, que pip t\u00e9l\u00e9chargera et installera automatiquement pour vous. V\u00e9rifions maintenant que tout a bien \u00e9t\u00e9 install\u00e9 :\r\n\r\n```bash\r\n(venv) user@host:~/projects$ python\r\nPython 3.9.2 (default, Mar 20 2025, 02:07:39) \r\n[GCC 10.2.1 20210110] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import flask\r\n>>> flask.__version__\r\n<stdin>:1: DeprecationWarning: The '__version__' attribute is deprecated and will be removed in Flask 3.2. Use feature detection or 'importlib.metadata.version(\"flask\")' instead.\r\n'3.1.1'\r\n>>> flask\r\n<module 'flask' from '/home/user/Bureau/temp_projects/venv/lib/python3.9/site-packages/flask/__init__.py'>\r\n>>> \r\n```\r\n\r\nF\u00e9licitations\u202f! Vous avez install\u00e9 Flask, et nous sommes maintenant pr\u00eats \u00e0 commencer \u00e0 coder.\r\n\r\n## Hello, Flask!\r\n\r\nCr\u00e9ez un nouveau fichier nomm\u00e9 `app.py` dans le r\u00e9pertoire de votre virtualenv `venv`. \u00c0 l\u2019aide de votre \u00e9diteur de texte ou IDE pr\u00e9f\u00e9r\u00e9, saisissez le code suivant :\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello, Flask!\"\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\nEnregistrez le fichier, puis ex\u00e9cutez app.py en le lan\u00e7ant depuis la ligne de commande. Vous devez vous assurer que votre environnement virtuel `venv` est bien activ\u00e9 :\r\n\r\n```bash\r\n(venv) user@host:~/projects$ python app.py \r\n * Serving Flask app 'app'\r\n * Debug mode: on\r\nWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\r\n * Running on http://127.0.0.1:5000\r\nPress CTRL+C to quit\r\n * Restarting with stat\r\n * Debugger is active!\r\n * Debugger PIN: 110-019-933\r\n```\r\n\r\nLorsque vous ouvrez votre navigateur pr\u00e9f\u00e9r\u00e9 et que vous acc\u00e9dez \u00e0 l\u2019adresse `http://127.0.0.1:5000`, vous verrez s\u2019afficher une page blanche tr\u00e8s simple, sans mise en forme ni image, avec uniquement le message suivant au centre (ou en haut \u00e0 gauche selon le navigateur) :\r\n\r\n```\r\nHello, Flask!\r\n```\r\n\r\nCe rendu minimal est tout \u00e0 fait normal : Flask renvoie simplement une cha\u00eene de caract\u00e8res brute sans HTML ni CSS. C\u2019est le comportement de base d\u2019une route Flask renvoyant du texte simple.\r\n\r\n### Comprendre le code\r\n\r\nNous venons de cr\u00e9er une application Flask tr\u00e8s basique. Pour bien comprendre ce qui se passe, analysons ce code ligne par ligne :\r\n```python\r\nfrom flask import Flask\r\n```\r\nNotre application commence par importer la classe Flask. Cette classe repr\u00e9sente une application WSGI (Web Server Gateway Interface) unique, et c\u2019est l\u2019objet central de tout projet Flask.\r\n\r\n**Qu\u2019est-ce que WSGI ?**\r\n\r\nWSGI est le standard officiel pour les serveurs web Python, d\u00e9fini dans la **PEP 333**.\r\nOn peut le voir comme un ensemble de r\u00e8gles et de comportements que doivent respecter une application et un serveur pour qu\u2019ils puissent communiquer correctement.\r\n\r\nEn d\u2019autres termes, WSGI agit comme un interm\u00e9diaire :\r\n\r\n- entre ton code Python (ton app Flask),\r\n- et un serveur web (comme Gunicorn, uWSGI, ou m\u00eame le serveur de d\u00e9veloppement de Flask).\r\n\r\n**Bonne nouvelle** : Flask s\u2019occupe de toute cette complexit\u00e9 pour vous. Vous n\u2019avez pas besoin d\u2019impl\u00e9menter WSGI manuellement. Vous vous concentrez uniquement sur le d\u00e9veloppement de votre application, et Flask g\u00e8re l\u2019interface avec les serveurs.\r\n\r\n```python\r\napp = Flask(__name__)\r\n```\r\n\r\nDans cette ligne, nous cr\u00e9ons une instance de l'application Flask dans la variable app, en lui passant le nom de notre module (g\u00e9n\u00e9ralement via `__name__`).\r\n\r\n- `app` : c\u2019est le nom de la variable dans laquelle on stocke notre application Flask. Ce nom est une convention courante, mais on pourrait l\u2019appeler autrement si on le souhaite.\r\n- `Flask(__name__)` : on instancie Flask en lui passant `__name__`, qui est une variable sp\u00e9ciale contenant le nom du module actuel (par exemple `__main__` si vous ex\u00e9cutez le fichier directement).\r\n\r\n```python\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello, Flask!\"\r\n```\r\n\r\nDans les lignes pr\u00e9c\u00e9dentes, nous indiquons \u00e0 notre application Flask de diriger toutes les requ\u00eates vers / (l\u2019URL racine) vers cette fonction de vue (index). Une vue est simplement une fonction ou une m\u00e9thode qui retourne une r\u00e9ponse quelconque. Chaque fois que vous ouvrez un navigateur et acc\u00e9dez \u00e0 l\u2019URL racine de notre application, Flask appellera cette fonction de vue et enverra la valeur retourn\u00e9e au navigateur. Il y a quelques points \u00e0 noter concernant ces lignes de code :\r\n\r\n- `@app.route` est un d\u00e9corateur Python li\u00e9 \u00e0 la variable `app` d\u00e9finie pr\u00e9c\u00e9demment. Ce d\u00e9corateur (`app.route`) enveloppe la fonction suivante, ici `index`, afin de diriger les requ\u00eates pour une URL particuli\u00e8re vers une vue sp\u00e9cifique. Le nom `index` est choisi pour cette fonction car c\u2019est le nom courant pour la premi\u00e8re page qu\u2019un serveur web utilise. D\u2019autres noms possibles pourraient \u00eatre `homepage` ou `main`. Les d\u00e9corateurs sont un sujet riche et int\u00e9ressant pour les d\u00e9veloppeurs Python, donc si vous ne les connaissez pas encore, je vous recommande d\u2019utiliser votre moteur de recherche pr\u00e9f\u00e9r\u00e9 pour trouver un bon tutoriel.\r\n- La fonction `index` ne prend aucun argument. Cela peut sembler \u00e9trange si vous venez d\u2019autres frameworks web o\u00f9 l\u2019on attend souvent un objet requ\u00eate (`request`) ou quelque chose de similaire. Nous verrons dans les exemples suivants comment acc\u00e9der aux valeurs de la requ\u00eate.\r\n- Les lignes suivantes ex\u00e9cutent notre application en utilisant le serveur de d\u00e9veloppement int\u00e9gr\u00e9 en mode debug. L\u2019instruction `if` est une convention Python courante qui garantit que l\u2019application ne sera lanc\u00e9e que lorsque nous ex\u00e9cutons le script via `python app.py`, et ne sera pas lanc\u00e9e si nous essayons d\u2019importer cette application depuis un autre fichier Python.\r\n\r\n```python\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\n### Routes et requ\u00eates\r\n\r\nPour l\u2019instant, notre application Flask n\u2019est pas tr\u00e8s amusante, alors voyons les diff\u00e9rentes fa\u00e7ons d\u2019ajouter un comportement plus int\u00e9ressant \u00e0 notre application web. Une m\u00e9thode courante consiste \u00e0 ajouter un comportement r\u00e9actif, de sorte que notre application puisse examiner les valeurs pr\u00e9sentes dans l\u2019URL et les traiter.\r\n\r\nAjoutons une nouvelle route \u00e0 notre application Hello Flask appel\u00e9e hello. Cette nouvelle route affichera un message de bienvenue \u00e0 la personne dont le nom appara\u00eet dans l\u2019URL :\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello, Flask!\"\r\n\r\n@app.route('/hello/<name>')\r\ndef hello(name):\r\n    return 'Hello, %s' % name\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\nVoici une description possible du rendu dans le navigateur pour l\u2019URL http://127.0.0.1:5000/hello/Charlie. Lorsque vous ouvrez cette URL dans votre navigateur, vous voyez une page blanche avec un message simple et personnalis\u00e9 affich\u00e9 en texte noir, centr\u00e9 en haut de la page. Le message dit :\r\n\r\n```\r\nHello, Charlie\r\n```\r\n\r\nCe message est g\u00e9n\u00e9r\u00e9 dynamiquement par votre application Flask en utilisant la partie \u00ab Charlie \u00bb de l\u2019URL pour personnaliser le contenu affich\u00e9 \u00e0 l\u2019\u00e9cran. C\u2019est un exemple de contenu r\u00e9actif en fonction des param\u00e8tres d\u2019URL.\r\nDans l\u2019exemple pr\u00e9c\u00e9dent, la route que nous avons ajout\u00e9e sp\u00e9cifie un seul param\u00e8tre : `name`. Ce param\u00e8tre appara\u00eet \u00e9galement dans la d\u00e9claration de la fonction en tant que seul argument. Flask associe automatiquement l\u2019URL `/hello/Charlie` \u00e0 la vue `hello` ; cela s\u2019appelle le mapping. Il passe ensuite la cha\u00eene de caract\u00e8res \u00ab Charlie \u00bb \u00e0 notre fonction de vue en tant qu\u2019argument.\r\n\r\nQue se passe-t-il si nous naviguons vers `http://127.0.0.1:5000/hello/` sans sp\u00e9cifier de nom ? Comme vous pouvez le voir, le serveur de d\u00e9veloppement Flask renverra une r\u00e9ponse 404, indiquant que l\u2019URL ne correspond \u00e0 aucune route connue.\r\n\r\n### Lecture des valeurs de la requ\u00eate\r\n\r\nEn plus de l'URL, des valeurs peuvent \u00eatre transmises \u00e0 votre application via la cha\u00eene de requ\u00eate (query string). Celle-ci est compos\u00e9e de paires cl\u00e9-valeur arbitraires ajout\u00e9es \u00e0 la fin de l'URL, apr\u00e8s un point d'interrogation&nbsp;(`?`).\r\n<table>\r\n    <caption>Tableau : liste d'urls avec des querystrings</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">URL</th>\r\n            <th scope=\"col\">Valeurs des arguments</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>/hello/?name=Charlie</td>\r\n            <td>name: Charlie</td>\r\n        </tr>\r\n        <tr>\r\n            <td>/hello/?name=Charlie&favorite_color=green</td>\r\n            <td>\r\n                name: Charlie <br>\r\n                favorite_color: green\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\nPour acc\u00e9der \u00e0 ces valeurs dans vos fonctions de vue, Flask fournit un objet request qui encapsule toutes les informations sur la requ\u00eate `HTTP` en cours.\r\n\r\nDans l'exemple suivant, nous allons modifier notre vue `hello` pour qu'elle r\u00e9agisse \u00e9galement aux noms pass\u00e9s via la cha\u00eene de requ\u00eate. Si aucun nom n'est sp\u00e9cifi\u00e9 (ni dans l'URL ni dans les param\u00e8tres), nous renverrons une erreur 404.\r\n\r\n```python\r\nfrom flask import Flask, abort, request\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/')\r\ndef index():\r\n    return 'Hello, Flask!'\r\n\r\n@app.route('/hello/<name>')\r\n@app.route('/hello/')\r\ndef hello(name=None):\r\n    if name is None:\r\n        # Si aucun nom n\u2019est sp\u00e9cifi\u00e9 dans l\u2019URL, tenter de le r\u00e9cup\u00e9rer depuis la cha\u00eene de requ\u00eate.\r\n        name = request.args.get('name')\r\n        if name:\r\n            return 'Hello, %s' % name\r\n    else:\r\n        # Aucun nom n\u2019a \u00e9t\u00e9 sp\u00e9cifi\u00e9 dans l\u2019URL ni dans la cha\u00eene de requ\u00eate.\r\n        abort(404)\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True, port=8000)\r\n```\r\n\r\nComme vous pouvez le voir, nous avons ajout\u00e9 un second d\u00e9corateur de route \u00e0 la vue `hello`. Flask permet d\u2019associer plusieurs routes URL \u00e0 une m\u00eame fonction de vue.\r\nPuisque notre nouvelle route (`/hello/`) ne contient pas de param\u00e8tre name, nous devons adapter la signature de la fonction `hello` pour rendre ce param\u00e8tre optionnel. Cela se fait en lui assignant une valeur par d\u00e9faut (`None`).\r\n\r\nLe corps de la fonction a \u00e9galement \u00e9t\u00e9 modifi\u00e9 pour v\u00e9rifier si un nom est pr\u00e9sent. Si aucun nom n\u2019est fourni via l\u2019URL dynamique, la fonction tente alors de le r\u00e9cup\u00e9rer dans les param\u00e8tres de la cha\u00eene de requ\u00eate (`request.args.get('name')`).\r\nSi le nom est trouv\u00e9, un message de bienvenue est retourn\u00e9. Dans le cas contraire, la fonction interrompt le traitement en retournant une erreur 404 \u2013 Page non trouv\u00e9e.\r\n\r\n## D\u00e9bogage d'applications Flask\r\n\r\nl est in\u00e9vitable que, t\u00f4t ou tard, nous introduisions un bug dans notre code.\r\nPuisque les bugs sont in\u00e9vitables, le mieux que nous puissions esp\u00e9rer en tant que d\u00e9veloppeurs est d'avoir de bons outils pour les diagnostiquer et les corriger rapidement. Heureusement, Flask int\u00e8gre un d\u00e9bogueur web extr\u00eamement puissant.\r\n\r\nLe d\u00e9bogueur de Flask permet d\u2019inspecter l\u2019\u00e9tat de votre application au moment m\u00eame o\u00f9 une erreur se produit, \u00e9liminant ainsi le besoin d\u2019ajouter des `print` ou des points d\u2019arr\u00eat manuellement.\r\n\r\nPour l\u2019activer, il suffit de lancer l\u2019application Flask en mode debug.\r\nCela peut se faire de plusieurs mani\u00e8res, mais nous l\u2019avons d\u00e9j\u00e0 mis en place via le code suivant :\r\n\r\n```python\r\nif __name__ == '__main__':\r\n\tapp.run(debug=True)\r\n```\r\n\r\nPour tester cela, introduisons un bug dans l'application `hello_flask` en cr\u00e9ant une faute de frappe. Ici, j'ai simplement supprim\u00e9 le \"e\" final du nom de la variable :\r\n\r\n```python\r\n @app.route('/hello/<name>')\r\n@app.route('/hello/')\r\ndef hello(name=None):\r\n    if nam is None:\r\n        # Si aucun nom n\u2019est sp\u00e9cifi\u00e9 dans l\u2019URL, tenter de le r\u00e9cup\u00e9rer depuis la cha\u00eene de requ\u00eate.\r\n        name = request.args.get('name')\r\n        if name:\r\n            return 'Hello, %s' % name\r\n    else:\r\n        # Aucun nom n\u2019a \u00e9t\u00e9 sp\u00e9cifi\u00e9 dans l\u2019URL ni dans la cha\u00eene de requ\u00eate.\r\n        abort(404)\r\n```\r\nLorsque nous lan\u00e7ons le serveur de d\u00e9veloppement et tentons d\u2019acc\u00e9der \u00e0 notre vue, la page de d\u00e9bogage s\u2019affiche d\u00e9sormais. Cette liste de code s\u2019appelle une traceback (ou pile d\u2019appels) et elle est constitu\u00e9e de la pile des appels de fonctions imbriqu\u00e9s qui ont pr\u00e9c\u00e9d\u00e9 l\u2019erreur proprement dite. La traceback fournit en g\u00e9n\u00e9ral un indice pr\u00e9cieux sur ce qui a pu se passer.\r\nTout en bas, on voit la ligne de code que nous avons intentionnellement mal \u00e9crite, accompagn\u00e9e de l\u2019erreur Python g\u00e9n\u00e9r\u00e9e : une exception de type `NameError`, qui nous indique que `nam` n\u2019est pas d\u00e9fini.\r\n\r\nLa v\u00e9ritable magie op\u00e8re lorsque vous placez votre souris sur la ligne surlign\u00e9e. \u00c0 droite s\u2019affichent deux petites ic\u00f4nes repr\u00e9sentant un terminal et un fichier source. En cliquant sur l\u2019ic\u00f4ne `Source Code`, vous d\u00e9veloppez le code source autour de la ligne qui a g\u00e9n\u00e9r\u00e9 l\u2019erreur. C\u2019est tr\u00e8s utile pour replacer l\u2019erreur dans son contexte.\r\n\r\nL\u2019ic\u00f4ne Terminal est encore plus int\u00e9ressante. En cliquant dessus, une console interactive appara\u00eet avec l\u2019invite Python standard.\r\nCette console vous permet d\u2019inspecter en temps r\u00e9el la valeur des variables locales au moment o\u00f9 l\u2019exception s\u2019est produite.\r\nEssayez par exemple de taper `name` puis d\u2019appuyer sur Entr\u00e9e : si une valeur a \u00e9t\u00e9 sp\u00e9cifi\u00e9e dans l\u2019URL, elle devrait s\u2019afficher.\r\nOn peut \u00e9galement consulter les arguments de la requ\u00eate courante. Au fil des chapitres et de vos propres exp\u00e9rimentations, savoir diagnostiquer et corriger rapidement des bugs sera une comp\u00e9tence pr\u00e9cieuse.",
      "created": "2025-06-02T17:26:10.889073",
      "updated": "2025-06-06T01:08:52.864765",
      "meta_description": "D\u00e9couvrez Flask avec un Hello World simple et rapide : premiers pas pour cr\u00e9er une appli web en Python. Id\u00e9al d\u00e9butants. 1er chapitre d\u2019un tuto complet.",
      "status_id": 1
    },
    {
      "id": 9,
      "title": "D\u00e9finir la largeur de la fen\u00eatre",
      "slug": "definir-la-largeur-de-la-fenetre",
      "body": "Parfois, les utilisateurs de veulent zoomer sur une page parce qu'ils ne peuvent pas lire le texte ou parce qu'ils veulent voir quelque chose de plus pr\u00e8s. Ils ne peuvent pas le faire si les param\u00e8tres de la fen\u00eatre de visualisation interdisent le zoom. C'est particuli\u00e8rement probl\u00e9matique pour les personnes malvoyantes.\r\n\r\nConfigurez la balise m\u00e9ta viewport de mani\u00e8re \u00e0 ce qu'elle soit la plus flexible possible. \u00c9vitez les param\u00e8tres restrictifs.\r\n\r\nLa balise meta de l'[exemple 1](#exemple-1) fonctionne pour la plupart des sites Web et des applications Web. C'est tout ce dont vous avez besoin pour configurer les param\u00e8tres de viewport afin de construire un site web flexible, adaptatif et r\u00e9actif.\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span> La page utilise la largeur disponible de l'appareil comme largeur de la fen\u00eatre de visualisation**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n```\r\n\r\nIl existe des propri\u00e9t\u00e9s ou des valeurs sp\u00e9cifiques que vous devez \u00e9viter.\r\n\r\nD\u00e9finir la valeur de la propri\u00e9t\u00e9 `width` \u00e0 une valeur autre que `device-width` peut causer des probl\u00e8mes. Si la largeur d\u00e9finie de la fen\u00eatre de visualisation est sup\u00e9rieure \u00e0 la largeur disponible sur l'\u00e9cran, le contenu peut d\u00e9border, ce qui entra\u00eene l'apparition de barres de d\u00e9filement horizontales. L '[exemple 2](#exemple-2) applique une largeur de fen\u00eatre explicite.\r\n\r\n**<span id=\"exemple-2\">Exemple 2</span>  Mauvaise pratique : Largeur de la fen\u00eatre de visualisation fix\u00e9e \u00e0 une valeur absolue.**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=500, initial-scale=1\">\r\n```\r\n\r\n`maximum-scale` vous permet de limiter le niveau de zoom maximum, qui est 10 par d\u00e9faut dans la plupart des navigateurs. Si vous le d\u00e9finissez sur 1, vous d\u00e9sactiverez le zoom dans certains navigateurs (voir [exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple 3</span>  Mauvaise pratique : Zoom d\u00e9sactiv\u00e9 en r\u00e9glant l'\u00e9chelle maximale sur 1**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width, maximum-scale=1, initial-scale=1\">\r\n```\r\nLe param\u00e8tre user-scalable d\u00e9finit si le zoom est autoris\u00e9. La valeur no ou 0 d\u00e9sactive le zoom, comme le montre l'[exemple 4](#exemple-4).\r\n\r\n**<span id=\"exemple-4\">Exemple 4</span>  Mauvaise pratique : D\u00e9sactiver le zoom en r\u00e9glant `user-scalable` sur \"no\"**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1\">\r\n```\r\n\r\nLes utilisateurs doivent pouvoir personnaliser leur exp\u00e9rience de navigation en fonction de leurs pr\u00e9f\u00e9rences et de leurs besoins. Les navigateurs offrent diff\u00e9rents param\u00e8tres et fonctionnalit\u00e9s pour y parvenir. La possibilit\u00e9 de d\u00e9finir des tailles de police plus grandes ou de zoomer sur la page est essentielle, mais de nombreux sites Web interdisent le zoom sur les appareils portables.\r\n\r\nAvant que le responsive web design ne devienne une r\u00e9alit\u00e9, les sites web \u00e9taient con\u00e7us pour des \u00e9crans de grande taille, utilisant souvent des valeurs de largeur fixes comme `960px` ou `1024px` pour le corps ou le contenu principal de la page. Avec l'essor des smartphones et autres appareils portables, cela est devenu un probl\u00e8me car les largeurs de pixels des \u00e9crans de ces appareils \u00e9taient g\u00e9n\u00e9ralement beaucoup plus petites que `960px`. Le <a href=\"https://www.w3.org/TR/CSS2/visudet.html#containing-block-details\" target=\"_blank\">bloc contenant initial</a>, le rectangle dans lequel vit l'\u00e9l\u00e9ment racine (`<html>`), a les dimensions de la fen\u00eatre d'affichage. Si la page est plus grande que la fen\u00eatre de visualisation, il peut en r\u00e9sulter <a href=\"https://drafts.csswg.org/css-viewport/#intro\" target=\"_blank\">une mise en page involontaire, un contenu tronqu\u00e9 et des limites de d\u00e9filement d\u00e9sagr\u00e9ables</a>. C'est pourquoi les navigateurs mobiles utilisent g\u00e9n\u00e9ralement une largeur fixe (g\u00e9n\u00e9ralement `980px` \u00e0 `1024px`) pour le bloc initial. La pr\u00e9sentation r\u00e9sultante est ensuite r\u00e9duite pour s'adapter \u00e0 l'espace disponible sur l'\u00e9cran. Cela att\u00e9nue les probl\u00e8mes, mais cela signifie aussi que la taille des pixels CSS sur ces pages sera beaucoup plus petite, ce qui obligera les utilisateurs \u00e0 zoomer.\r\n\r\nSur les sites Web r\u00e9actifs, ce n'est pas un probl\u00e8me, car ils ont \u00e9t\u00e9 con\u00e7us pour fonctionner correctement sur des interfaces d'affichage vari\u00e9es. Cependant, tu dois changer la largeur fixe du bloc contenant sur les appareils mobiles en une largeur relative aux dimensions de la fen\u00eatre de visualisation pour qu'elle fonctionne bien avec les conceptions r\u00e9actives. Tu peux le faire en utilisant la balise viewport `meta`, comme illustr\u00e9 dans l['exemple 1](#exemple-1).\r\n\r\n`width=device-width` d\u00e9finit la largeur de la fen\u00eatre de visualisation en fonction de la largeur disponible de l'appareil.\r\n\r\n`initial-scale=1` garantit que le niveau de zoom par d\u00e9faut est de 100 %. Il se peut que ce ne soit pas toujours la valeur par d\u00e9faut dans tous les navigateurs. C'est pourquoi je recommande de le d\u00e9finir explicitement.\r\n\r\nLe fait qu'une page soit responsive et optimis\u00e9e pour les petits viewports ne signifie pas que les utilisateurs ne voudront pas zoomer. Adrian Roselli \u00e9num\u00e8re plusieurs raisons pour lesquelles la possibilit\u00e9 de zoomer est essentielle dans son article \u00ab&nbsp;<a href=\"https://adrianroselli.com/2015/10/dont-disable-zoom.html\" target=\"_blank\">Don't Disable Zoom</a>&nbsp;\u00bb :\r\n\r\n- Le texte peut \u00eatre trop petit pour que l'utilisateur puisse le lire.\r\n- L'utilisateur peut vouloir voir plus de d\u00e9tails dans une image.\r\n- La s\u00e9lection des mots \u00e0 copier/coller peut \u00eatre plus facile pour les utilisateurs lorsque le texte est plus grand.\r\n- L'utilisateur veut recadrer les \u00e9l\u00e9ments anim\u00e9s hors de la vue pour r\u00e9duire les distractions.\r\n- Le d\u00e9veloppeur a fait un mauvais travail de conception responsive, et l'utilisateur doit zoomer juste pour utiliser la page.\r\n- Il y a un bug dans le navigateur qui fait que le niveau de zoom par d\u00e9faut est bizarre.\r\n- Cela peut \u00eatre d\u00e9routant pour les utilisateurs lorsque le navigateur interpr\u00e8te un geste de pincement/\u00e9cartement comme quelque chose d'autre.\r\n\r\nLes sites web qui d\u00e9sactivent le zoom sont un probl\u00e8me r\u00e9pandu. Selon le chapitre sur l'accessibilit\u00e9 de <a href=\"https://almanac.httparchive.org/en/2022/accessibility#zooming-and-scaling\" target=\"_blank\">l'Almanach du Web 2022</a>, 23 % des pages d'accueil de bureau et 28 % des pages d'accueil mobiles tentent de d\u00e9sactiver le zoom. L'auteur du rapport utilise le terme tentative, car certains navigateurs, comme Safari sur iOS ou Samsung Internet sur Android, ignorent les propri\u00e9t\u00e9s `maximum-scale=1` et `user-scalable=no`. Chrome et Firefox ne le font pas, mais les utilisateurs peuvent <a href=\"https://www.matuzo.at/blog/2022/please-stop-disabling-zoom/\" target=\"_blank\">forcer le zoom dans les param\u00e8tres de leur navigateur</a>. Dans Firefox, trouve les param\u00e8tres du navigateur, s\u00e9lectionne \"Accessibilit\u00e9\" et active \u00ab&nbsp;Zoom sur tous les sites web&nbsp;\u00bb. Dans Chrome, trouve les param\u00e8tres du navigateur, s\u00e9lectionne \"Accessibilit\u00e9\" et coche \u00ab&nbsp;Forcer l'activation du zoom&nbsp;\u00bb.\r\n\r\n**Raisons justifi\u00e9es de d\u00e9sactiver le zoom**\r\n\r\nSur le site web moyen, il n'y a pas de bonne raison de d\u00e9sactiver le zoom. Il en va de m\u00eame pour les sites web de type app qui ressemblent \u00e0 des apps natives. Il existe de rares exceptions o\u00f9 les gestes pour zoomer interf\u00e9reraient avec les fonctionnalit\u00e9s du site web. Un exemple serait un site qui ne contient qu'une carte interactive. Si c'est le cas, il peut \u00eatre acceptable de d\u00e9sactiver la fonction de zoom native, mais vous devez fournir une solution alternative personnalis\u00e9e .\r\n",
      "created": "2025-06-02T21:14:57.989721",
      "updated": "2025-06-02T21:39:51.082662",
      "meta_description": "Configurez la balise viewport pour un site responsive accessible, sans bloquer le zoom. Bonnes et mauvaises pratiques illustr\u00e9es.",
      "status_id": 3
    },
    {
      "id": 10,
      "title": "Optimiser l'ordre de rendu",
      "slug": "optimiser-l-ordre-de-rendu",
      "body": "L'en-t\u00eate d'un document peut contenir divers \u00e9l\u00e9ments qui servent \u00e0 des fins diff\u00e9rentes : balises m\u00e9ta, scripts, liens vers d'autres ressources, et plus encore. Ils peuvent \u00eatre plac\u00e9s dans n'importe quel ordre, mais certains \u00e9l\u00e9ments doivent passer avant d'autres pour garantir de bonnes performances de chargement. Un chargement inefficace des ressources emp\u00eache les utilisateurs d'obtenir des informations rapidement, voire de les obtenir tout court.\r\n\r\nL'expert en performances Web Harry Roberts <a href=\"https://csswizardry.com/ct/\" target=\"_blank\">sugg\u00e8re un ordre sp\u00e9cifique</a> des \u00e9l\u00e9ments dans le site `<head>` pour garantir la meilleure strat\u00e9gie de chargement possible, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span> L'ordre id\u00e9al des \u00e9l\u00e9ments dans le `<head>`**\r\n```html\r\n<head>\r\n  <!-- Character encoding -->\r\n  <meta charset=\"UTF-8\">\r\n\r\n  <!-- Viewport meta tag -->\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n  <!-- CSP headers -->\r\n  <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\r\n\r\n  <!-- Page title -->\r\n  <title>Magasin v\u00eatement Renaud</title>\r\n\r\n  <!-- preconnect -->\r\n  <link rel=\"preconnect\" href=\"#\" />\r\n\r\n  <!-- Asynchronous JavaScript -->\r\n  <script src=\"\" async></script>\r\n\r\n  <!-- CSS that includes @import -->\r\n  <style>\r\n    @import \"file.css\";\r\n  </style>\r\n\r\n  <!-- Synchronous JavaScript -->\r\n  <script src=\"\"></script>\r\n\r\n  <!-- Synchronous CSS -->\r\n  <link rel=\"stylesheet\" href=\"#\">\r\n\r\n  <!-- preload -->\r\n  <link rel=\"preload\" href=\"#\" />\r\n\r\n  <!-- Deferred JavaScript -->\r\n  <script src=\"\" defer></script>\r\n  <script src=\"\" type=\"module\"></script>\r\n\r\n  <!-- prefetch / prerender -->\r\n  <link rel=\"prefetch\" href=\"#\" />\r\n  <link rel=\"prerender\" href=\"#\" />\r\n\r\n  <!-- divers -->\r\n  <meta name=\"description\" content=\"\">\r\n</head>\r\n```\r\n\r\nIl existe diff\u00e9rents domaines au sein de la conception et du d\u00e9veloppement web, comme l'accessibilit\u00e9, la convivialit\u00e9, l'exp\u00e9rience utilisateur, la performance et la s\u00e9curit\u00e9. Ils se concentrent tous sur des choses diff\u00e9rentes, mais ils ne s'excluent pas mutuellement. L'accessibilit\u00e9, par exemple, recoupe tous ces domaines. Am\u00e9liorer l'accessibilit\u00e9 des champs de formulaire peut se traduire par une meilleure exp\u00e9rience utilisateur pour tout le monde. Si un site web se charge lentement, cela affecte l'exp\u00e9rience des utilisateurs et l'accessibilit\u00e9. Un site Web qui se charge trop longtemps ou pas du tout sur une connexion lente <a href=\"https://bell.bz/this-is-why-performance-matters/\" target=\"_blank\">n'est pas accessible</a>. Concevoir et construire des sites Web accessibles signifie cr\u00e9er des exp\u00e9riences inclusives sans barri\u00e8res qui emp\u00eachent les gens d'interagir avec le Web. Ces obstacles comprennent les handicaps physiques, temporaires et situationnels, ainsi que les restrictions socio-\u00e9conomiques concernant le mat\u00e9riel, la bande passante et la vitesse.\r\n\r\nLe fait de respecter l'ordre des \u00e9l\u00e9ments dans le site `<head>` a une incidence sur les performances en g\u00e9n\u00e9ral, mais aussi sur le rendu d'\u00e9l\u00e9ments sp\u00e9cifiques qui peuvent contenir des informations essentielles pour les utilisateurs de technologies d'assistance. Le HTML est analys\u00e9 ligne par ligne, ce qui signifie qu'un navigateur ne sait pas que la ligne 4 existe alors que la ligne 3 n'a pas fini d'\u00eatre analys\u00e9e. Si quelque chose bloque le rendu au d\u00e9but d'un document, les lignes suivantes doivent attendre que le navigateur ait fini d'analyser les lignes pr\u00e9c\u00e9dentes. L'ordre correct des \u00e9l\u00e9ments dans le site `<head>` est donc crucial pour les performances et l'accessibilit\u00e9 du Web.\r\n\r\nLes experts en performance sugg\u00e8rent plusieurs r\u00e8gles et optimisations, notamment :\r\n\r\n- Si quelque chose n'a pas besoin d'\u00eatre dans le site `<head>`, supprimez-le ou mettez-le dans le site `<body>`. Cela inclut les scripts de faible priorit\u00e9, les redirections ou toute charge utile inutile.\r\n- Auto-h\u00e9bergez autant que possible et ne comptez pas sur des r\u00e9seaux de diffusion de contenu (CDN) tiers. Harry Roberts explique pourquoi dans son article \u00ab&nbsp;<a href=\"https://csswizardry.com/2019/05/self-host-your-static-assets/\" target=\"_blank\">Self-Host Your Static Assets</a>&nbsp;\u00bb. \r\n- <a href=\"https://validator.w3.org/\" target=\"_blank\">Validez votre code HTML</a>, car les \u00e9l\u00e9ments non valides dans le `<head>` peuvent causer des probl\u00e8mes de performance.\r\n- Les m\u00e9tadonn\u00e9es sur la page, comme le codage des caract\u00e8res et les informations sur le viewport, passent en premier.\r\n- Rien de ce qui bloque le rendu ne doit venir avant le `<title>`.\r\n- Le JavaScript synchrone vient avant le CSS, parce que le CSS bloque l'ex\u00e9cution du JavaScript suivant.\r\n- \u00c9vitez @import dans les CSS.\r\n- Les balises m\u00e9ta de r\u00e9f\u00e9rencement et sociales passent en dernier.\r\n\r\nHarry Roberts a cr\u00e9\u00e9 un fichier CSS appel\u00e9 <a href=\"https://csswizardry.com/ct/\" target=\"_blank\">ct.css</a>, \u00e9galement disponible sous forme de bookmarklet, que tu peux utiliser pour effectuer des tests sur tes \u00e9l\u00e9ments `<head>`.",
      "created": "2025-06-02T22:03:08.850799",
      "updated": "2025-06-02T22:16:02.089880",
      "meta_description": "Optimisez l\u2019ordre des balises <head> pour un chargement web plus rapide, accessible et performant",
      "status_id": 3
    },
    {
      "id": 11,
      "title": "Structure du document",
      "slug": "structure-du-document",
      "body": "Si une page ne contient pas suffisamment de r\u00e9gions s\u00e9mantiques, les utilisateurs risquent de ne pas comprendre comment elle est structur\u00e9e. Ce manque de balisage s\u00e9mantique les emp\u00eache d'utiliser des raccourcis pour naviguer plus efficacement.\r\n\r\nUtilisez *des points de rep\u00e8re*: des r\u00e9gions qui repr\u00e9sentent l'organisation et la structure d'une page web. Elles identifient g\u00e9n\u00e9ralement les zones auxquelles l'utilisateur peut vouloir acc\u00e9der rapidement.\r\n\r\nIl existe \u00e9galement des rep\u00e8res communs que vous utiliserez sur votre site, comme `<header>`, `<main>`, et `<footer>`. Chaque \u00e9l\u00e9ment de la page doit se trouver \u00e0 l'int\u00e9rieur de l'un de ces rep\u00e8res, comme le montre l['exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Structure exemplaire d'une page web**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>Produits - Magasins de v\u00eatements Renaud</title>\r\n    </head>\r\n    <body>\r\n        <header>\r\n            <a href=\"/\">Magasins de v\u00eatements Renaud</a>\r\n            <nav aria-label=\"Main\">\r\n                <ul>\r\n                    <li><a href=\"/\">Accueil</a></li>\r\n                    <li><a href=\"/produits\" aria-current=\"page\">Nos produits</a></li>\r\n                    <li><a href=\"/notre-equipe\">Notre \u00e9quipe</a></li>\r\n                    <li><a href=\"/contacter\">Nous contacter</a></li>\r\n                </ul>\r\n            </nav>\r\n            <form role=\"search\">\r\n                <label for=\"search\">Chercher</label>\r\n                <input type=\"text\" id=\"search\">\r\n            </form>\r\n        </header>\r\n        <main id=\"content\">\r\n            <h1>Nos produits</h1>\r\n            <!-- etc. -->\r\n        </main>\r\n        <footer>&copy; 2025</footer>\r\n    </body>\r\n</html>\r\n```\r\n- `<header>` : L'en-t\u00eate du site (banni\u00e8re rep\u00e8re)\r\n- `<nav>` : La navigation principale (rep\u00e8re de navigation)\r\n- `<form>` : La recherche du site (rep\u00e8re de recherche)\r\n- `<main>` : Le contenu principal (rep\u00e8re principal)\r\n- `<footer>` : Le pied de page du site (rep\u00e8re contentinfo)\r\n\r\nL'utilisation d'\u00e9l\u00e9ments s\u00e9mantiques dans les composants et les r\u00e9gions d'une page est la base de tout site Web accessible, mais les utilisateurs peuvent \u00e9galement b\u00e9n\u00e9ficier de groupes s\u00e9mantiques plus importants. La page doit communiquer la fa\u00e7on dont elle est structur\u00e9e et regrouper les \u00e9l\u00e9ments communs \u00e0 l'ensemble du site et sp\u00e9cifiques \u00e0 la page. Les points de rep\u00e8re en HTML sont utiles \u00e0 cet \u00e9gard.\r\n\r\nVous pouvez d\u00e9finir des points de rep\u00e8re avec les \u00e9l\u00e9ments HTML appropri\u00e9s ou utiliser l'attribut `role` lorsqu'il n'existe pas d'\u00e9l\u00e9ment. Les \u00e9l\u00e9ments de l'[exemple 2](#exemple-2) sont s\u00e9mantiquement identiques.\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Deux rep\u00e8res de banni\u00e8re**\r\n\r\n```html\r\n<!-- <header> avec un r\u00f4le de banni\u00e8re implicite -->\r\n<header></header>\r\n\r\n<!-- <div> avec un r\u00f4le de banni\u00e8re explicite -->\r\n<div role=\"banner\"></div>\r\n```\r\n\r\n**Astuce** : La plupart des \u00e9l\u00e9ments s\u00e9mantiques en HTML v\u00e9hiculent deux informations : leur r\u00f4le accessible et un nom accessible. Le r\u00f4le d\u00e9finit de quel type d'\u00e9l\u00e9ment il s'agit : un bouton, un lien, une image, etc. Le nom accessible est un texte par lequel un logiciel peut identifier un composant, provenant du contenu textuel de l'\u00e9l\u00e9ment, d'un autre \u00e9l\u00e9ment associ\u00e9 comme `<label>`, ou d'un attribut comme `aria-label`, `aria-labelledby`, `alt`, ou `title`.\r\n\r\nSuivre <a href=\"https://www.w3.org/TR/using-aria/#firstrule\" target=\"_blank\">la premi\u00e8re r\u00e8gle d'utilisation des applications Internet riches accessibles (ARIA)</a> et pr\u00e9f\u00e9rer les \u00e9l\u00e9ments avec des r\u00f4les implicites \u00e0 l'utilisation de l'attribut role si la prise en charge du navigateur le permet. Les anciens navigateurs et lecteurs d'\u00e9cran qui ne prennent pas en charge les \u00e9l\u00e9ments avec des r\u00f4les implicites avaient besoin du r\u00f4le explicite suppl\u00e9mentaire, comme le montre l'[exemple 3](#exemple-3), mais il n'est plus n\u00e9cessaire de sp\u00e9cifier les deux.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;`<header>` avec un r\u00f4le de banni\u00e8re explicite suppl\u00e9mentaire**\r\n\r\n```html\r\n<header role=\"banner\"></header>\r\n```\r\n\r\nIl existe diff\u00e9rents types de r\u00e9gions qui servent d'autres objectifs dans des contextes diff\u00e9rents. Le [tableau 1](#table-1) dresse la liste des \u00e9l\u00e9ments HTML, des r\u00f4les ARIA correspondants et du contexte dans lequel ils sont expos\u00e9s en tant que points de rep\u00e8re.\r\n\r\n<table id=\"table-1\">\r\n    <caption>Tabelau 1 : Rep\u00e8res HTML et leurs r\u00f4les ARIA</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">\u00c9l\u00e9ment</th>\r\n            <th scope=\"col\">R\u00f4le d'ARIA</th>\r\n            <th scope=\"col\">Conditions</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td><code>header</code></td>\r\n            <td>banni\u00e8re</td>\r\n            <td>Uniquement dans le contexte de l'\u00e9l\u00e9ment body ; pas lorsqu'il s'agit d'un descendant de <code>article</code>, <code>aside</code>, <code>main</code>, <code>nav</code>, ou <code>section</code> (ou de tout autre \u00e9l\u00e9ment avec les r\u00f4les explicites correspondants).</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>nav</code></td>\r\n            <td>navigation</td>\r\n            <td> - </td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>main</code></td>\r\n            <td>principal</td>\r\n            <td> - </td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>section</code></td>\r\n            <td>r\u00e9gion</td>\r\n            <td>Lorsqu'il a un nom accessible.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>form</code></td>\r\n            <td>formulaire</td>\r\n            <td>Lorsqu'il a un nom accessible.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>search</code></td>\r\n            <td>recherche</td>\r\n            <td>Ou forme avec <code>role=\"search\"</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>aside</code></td>\r\n            <td>compl\u00e9mentaires</td>\r\n            <td> - </td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>footer</code></td>\r\n            <td>contentinfo</td>\r\n            <td>Uniquement dans le contexte de l'\u00e9l\u00e9ment body ; pas lorsqu'il s'agit d'un descendant de <code>article</code>, <code>aside</code>, <code>main</code>, <code>nav</code>, ou <code>section</code> (ou de tout autre \u00e9l\u00e9ment avec les r\u00f4les explicites correspondants).</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nIl y a de nombreuses raisons d'utiliser des points de rep\u00e8re. Les rep\u00e8res aident les utilisateurs de lecteurs d'\u00e9cran \u00e0 s'orienter sur la page. Le logiciel peut annoncer des points de rep\u00e8re lorsque les utilisateurs entrent ou sortent du contenu. Ils contiennent chaque \u00e9l\u00e9ment de la page pour aider les utilisateurs \u00e0 les d\u00e9couvrir.\r\n\r\nLes utilisateurs de lecteurs peuvent sauter d'un point de rep\u00e8re \u00e0 l'autre \u00e0 l'aide de raccourcis clavier ou de gestes, ce qui constitue un moyen pratique de passer \u00e0 des zones sp\u00e9cifiques sans interagir avec le reste de la page (voir [tableau 2](#table-2)).\r\n\r\nDans VoiceOver sur iOS, vous pouvez s\u00e9lectionner l'option \"rep\u00e8re\" dans le <a href=\"https://support.apple.com/en-gb/guide/voiceover/mchlp2719/mac\" target=\"_blank\">rotor</a>, qui vous donne un acc\u00e8s direct \u00e0 certains \u00e9l\u00e9ments de la page, et utiliser les gestes de balayage vers le haut et vers le bas pour naviguer entre les rep\u00e8res. Dans TalkBack sur Android, vous pouvez r\u00e9gler les commandes de lecture sur \"points de rep\u00e8re\" et balayer vers le haut et le bas pour naviguer. Dans NVDA sur Windows, vous pouvez appuyer sur `D` ou `Shift` + `D`, et dans JAWS sur `Windows`, `R` et `Shift` + `R` pour faire la m\u00eame chose (voir [Tableau 2](#table-2)).\r\n\r\n<table id=\"table-2\">\r\n    <caption>Tableau 2 : Raccourcis de navigation des points de rep\u00e8re</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Commande</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>NVDA</td>\r\n            <td><code>D</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>JAWS</td>\r\n            <td><code>R</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Narrateur</td>\r\n            <td><code>D</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver sur iOS</td>\r\n            <td>Rotor</td>\r\n        </tr>\r\n        <tr>\r\n            <td>TalkBack sur Android</td>\r\n            <td>Contr\u00f4les de lecture</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nCe sont surtout les utilisateurs de lecteurs d'\u00e9cran qui b\u00e9n\u00e9ficient de ces points de rep\u00e8re, mais des extensions de navigateur comme \u00ab&nbsp;<a href=\"http://matatk.agrip.org.uk/landmarks/\" target=\"_blank\">Landmark Navigation via Keyboard or Pop-up</a>&nbsp;\u00bb ajoutent des raccourcis clavier au navigateur, ce qui permet aux utilisateurs ne poss\u00e9dant pas de lecteur d'\u00e9cran d'acc\u00e9der aux points de rep\u00e8re.\r\n\r\nLes utilisateurs du lecteur d'\u00e9cran peuvent dresser la liste de tous les points de rep\u00e8re d'une page et y acc\u00e9der directement (voir [tableau 3](#table-3))\r\n\r\n<table id=\"table-3\">\r\n    <caption>Tableau 3 : Raccourcis pour lister toutes sortes d'\u00e9l\u00e9ments, tels que les points de rep\u00e8re.</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Commande</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>NVDA</td>\r\n            <td><code>Ins</code> + <code>F7</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>JAWS</td>\r\n            <td><code>Ins</code> + <code>Ctrl</code> + <code>R</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver sur iOS</td>\r\n            <td>Rotor</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nLes trois points de rep\u00e8re principaux les plus pertinents de sont `<header>`, `<main>`, et `<footer>`.\r\nLe site `<header>`, avec son r\u00f4le implicite `banner`, contient principalement du contenu orient\u00e9 vers le site plut\u00f4t que du contenu sp\u00e9cifique \u00e0 la page. Il s'agit g\u00e9n\u00e9ralement d'un logo, de liens de saut, de la navigation principale, de navigations secondaires, d'un widget de recherche et d'autres contenus pertinents et visibles sur chaque page.\r\n\r\nTous les `<header>` ne sont pas des points de rep\u00e8re. S'il est imbriqu\u00e9 dans `<article>`, `<aside>`, `<main>`, `<nav>`, ou `<section>`, il est s\u00e9mantiquement similaire \u00e0 un `<div>` et n'est plus consid\u00e9r\u00e9 comme un point de rep\u00e8re. Il est possible d'avoir plusieurs \u00e9l\u00e9ments `header` sur une page, mais il ne faut ajouter qu'un seul point de rep\u00e8re banner.\r\n\r\nEn g\u00e9n\u00e9ral, vous trouverez les rep\u00e8res `banner` au d\u00e9but du `<body>` dans le document. Visuellement, c'est g\u00e9n\u00e9ralement en haut de la page. C'est un sch\u00e9ma courant mais pas une r\u00e8gle stricte ; cela peut aussi ressembler \u00e0 une barre lat\u00e9rale. La position n'affecte pas son objectif s\u00e9mantique. Ce n'est pas parce qu'il est situ\u00e9 sur le c\u00f4t\u00e9 que son r\u00f4le doit changer.\r\n\r\nLe r\u00f4le implicite de l'\u00e9l\u00e9ment `<main>`  repr\u00e9sente le contenu principal de la page. Il ne doit y avoir qu'un seul \u00e9l\u00e9ment principal visible sur une page, et ses anc\u00eatres doivent \u00eatre limit\u00e9s \u00e0 html et body pour garantir une structure hi\u00e9rarchiquement correcte. Si n\u00e9cessaire, il est possible de l'envelopper dans des \u00e9l\u00e9ments `<div>`.\r\n\r\nSi vous travaillez avec une SPA comportant plusieurs \u00e9l\u00e9ments `<main>` sur une page, cache tous les \u00e9l\u00e9ments inactifs, comme le montre l'[exemple 4](#exemple-4). Le fait d'avoir plus d'un point de rep\u00e8re principal visible et accessible sur une page peut perturber les utilisateurs et les amener \u00e0 manquer du contenu parce qu'ils s'attendent g\u00e9n\u00e9ralement \u00e0 n'en avoir qu'un seul par page.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Plusieurs \u00e9l\u00e9ments `main`, mais un seul est visible**\r\n\r\n```html\r\n<main hidden>\r\n  <h1>Home</h1>\r\n</main>\r\n<main>\r\n  <h1>Products</h1>\r\n</main>\r\n<main hidden>\r\n  <h1>Team</h1>\r\n</main>\r\n<main hidden>\r\n  <h1>Contact</h1>\r\n</main>\r\n```\r\n\r\nLe r\u00f4le implicite `contentinfo` de l'\u00e9l\u00e9ment `<footer>` contient \u00e9galement du contenu orient\u00e9 vers le site. Il s'agit g\u00e9n\u00e9ralement de donn\u00e9es sur les droits d'auteur, de navigations secondaires et d'autres liens.\r\n\r\nComme pour `<header>`, `<footer>` n'est un point de rep\u00e8re que dans le contexte de `<body>`. S'il est imbriqu\u00e9 dans `<article>`, `<aside>`, `<main>`, `<nav>`, ou `<section>`, il n'est plus un point de rep\u00e8re. Il est possible d'avoir plusieurs \u00e9l\u00e9ments `footer` sur une page, mais il ne faut ajouter qu'un seul point de rep\u00e8re `contentinfo` .",
      "created": "2025-06-03T14:26:19.775914",
      "updated": "2025-06-03T17:00:57.675179",
      "meta_description": "Structure HTML accessible : facilitez la navigation avec des rep\u00e8res s\u00e9mantiques comme main, nav ou footer",
      "status_id": 3
    },
    {
      "id": 12,
      "title": "Cr\u00e9er des rep\u00e8res de navigation",
      "slug": "creer-des-reperes-de-navigation",
      "body": "Quelle que soit la fa\u00e7on dont les utilisateurs acc\u00e8dent \u00e0 un site Web, ils doivent \u00eatre en mesure d'identifier les navigations. Sinon, ils risquent de ne pas pouvoir trouver le contenu qu'ils recherchent, s'orienter et naviguer. Identifiez les navigations et permettez un acc\u00e8s rapide aux groupes de liens importants, tels que la navigation principale ([exemple 1](#exemple-1)), les fils d'Ariane ([exemple 2](#exemple-2)), ou les navigations locales ([exemple 3](#exemple-3)).\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span> La navigation principale d'un site**\r\n\r\n```html\r\n<header>\r\n  <nav aria-label=\"Main\"> \r\n    <ul>\r\n      <li><a href=\"/accueil\">Accueil</a></li>\r\n      <li><a href=\"/produits\" aria-current=\"page\">Produits</a></li> \r\n      <li><a href=\"/a-propos-de-nous\">\u00e0 propos de nous</a></li>\r\n      <li><a href=\"/contacter\">nous contacter</a></li>\r\n    </ul>\r\n  </nav>\r\n</header>\r\n```\r\n\r\n**Note** : `aria-current=\"page\"` met en \u00e9vidence la page active.\r\n\r\n**<span id=\"exemple-2\">Exemple 2</span> Une navigation en fil d'Ariane sur des pages profond\u00e9ment imbriqu\u00e9es**\r\n\r\n```html\r\n<nav aria-label=\"Fil d\u2019Ariane\">\r\n  <ol>\r\n    <li><a href=\"/produits/\">Produits</a></li>\r\n    <li><a href=\"/produits/robes/\">Nos robes</a></li>\r\n    <li>\r\n      <a href=\"/produits/robes/courtes\" aria-current=\"page\">robes courtes</a>\r\n    </li>\r\n  </ol>\r\n</nav>\r\n```\r\n\r\n**Note** : `aria-current=\"page\"` met en \u00e9vidence la page active.\r\n\r\n\r\n**<span id=\"exemple-3\">Exemple 3</span> Une navigation locale \u00e0 l'int\u00e9rieur d'une page**\r\n\r\n```html\r\n<nav aria-label=\"Sommaire de la page\">\r\n  <ol>\r\n    <li><a href=\"#entreprise\">Entreprise</a></li>\r\n    <li><a href=\"#license\">License</a></li>\r\n    <li><a href=\"#voir-aussi\">voir aussi</a></li>\r\n    <li><a href=\"#nos-references\">Nos r\u00e9f\u00e9rences</a></li>\r\n  </ol>\r\n</nav>\r\n```\r\n**Note** : l'utilisation des attributs aria-label sur les navigations n'est pas obligatoire, surtout si le but de la navigation est clair d'apr\u00e8s le contexte. \r\n\r\nLa navigation d'une page doit se distinguer visuellement et s\u00e9mantiquement du reste du contenu de la page. En termes de style, cela signifie g\u00e9n\u00e9ralement qu'il faut la placer \u00e0 un endroit bien visible du site ou de la page et la mettre en valeur en utilisant un style diff\u00e9rent de celui des \u00e9l\u00e9ments similaires du reste de la page. En termes de s\u00e9mantique, vous utilisez l'\u00e9l\u00e9ment `<nav>` pour d\u00e9finir un rep\u00e8re de navigation et marquer les principaux liens de navigation. Un lecteur d'\u00e9cran annonce quelque chose comme `navigation` lorsque l'utilisateur interagit avec lui. Cependant, tous les groupes de liens ne constituent pas automatiquement une navigation. Par exemple, si le pied de page de votre site ne contient que quelques liens, il n'est pas n\u00e9cessaire de les inclure dans un \u00e9l\u00e9ment `<nav>`. Le rep\u00e8re `contentinfo` est suffisant pour ce cas d'utilisation. Cela ne veut pas dire que vous ne devez jamais utiliser l'\u00e9l\u00e9ment `<nav>` \u00e0 l'int\u00e9rieur d'un pied de page. Lorsqu'il y a diff\u00e9rents groupes de liens dans le pied de page, il peut \u00eatre utile d'envelopper chaque groupe dans un \u00e9l\u00e9ment `<nav>` et de l'\u00e9tiqueter. C'est une question de jugement, qui d\u00e9pend de la complexit\u00e9 et de l'\u00e9tendue du contenu.\r\n\r\nLe fait que les \u00e9l\u00e9ments de `<nav>` soient des rep\u00e8res est particuli\u00e8rement utile pour les utilisateurs de lecteurs d'\u00e9cran, car ils peuvent y acc\u00e9der directement \u00e0 l'aide de raccourcis clavier. \r\n\r\nVous pouvez utiliser l'\u00e9l\u00e9ment `<nav>` pour la navigation principale de votre site et les \u00e9l\u00e9ments de navigation sp\u00e9cifiques \u00e0 la page comme les navigations par fil d'Ariane ([exemple 2](#exemple-2)), la pagination ou la navigation par contenu ([exemple 3](#exemple-3)). \r\n\r\nPour finir, vous n'\u00eates pas oblig\u00e9 de structurer les liens d'une navigation \u00e0 l'aide d'un \u00e9l\u00e9ment de liste, mais c'est conseill\u00e9. Je vous expliquerai plus tard les avantages. Vous pouvez utiliser une liste ordonn\u00e9e ou non ordonn\u00e9e. Si vous n'\u00eates pas s\u00fbr, le choix par d\u00e9faut de `<ul>` (liste non ordonn\u00e9e) est s\u00fbr.",
      "created": "2025-06-04T14:39:29.634806",
      "updated": "2025-06-11T15:09:45.214109",
      "meta_description": "Apprenez \u00e0 structurer des rep\u00e8res de navigation accessibles pour aider tous les utilisateurs \u00e0 s\u2019orienter efficacement sur votre site web.",
      "status_id": 3
    },
    {
      "id": 13,
      "title": "G\u00e9rer un environnement virtuel avec Python, pip et Pipenv",
      "slug": "gerer-un-environnement-virtuel-avec-python-pip-et-pipenv",
      "body": "Lorsque vous d\u00e9veloppez plusieurs projets Python, chacun peut n\u00e9cessiter des biblioth\u00e8ques diff\u00e9rentes, voire des versions sp\u00e9cifiques de ces biblioth\u00e8ques. Pour \u00e9viter les conflits, Python permet de cr\u00e9er des environnements virtuels : des espaces isol\u00e9s dans lesquels vous installez uniquement les d\u00e9pendances dont votre projet a besoin. Ainsi, votre syst\u00e8me reste propre et vous ma\u00eetrisez exactement ce que votre projet utilise.\r\n\r\n## Cr\u00e9er un environnement virtuel avec venv\r\n\r\nLa premi\u00e8re \u00e9tape consiste \u00e0 cr\u00e9er un environnement virtuel dans le r\u00e9pertoire de votre projet. Cela va g\u00e9n\u00e9rer un dossier contenant une version ind\u00e9pendante de l\u2019interpr\u00e9teur Python ainsi que de `pip`.\r\n\r\n```bash\r\n$python3 -m venv .venv\r\n```\r\n\r\nIci, `.venv` est le nom du dossier qui contiendra l\u2019environnement virtuel. Vous pouvez l\u2019appeler autrement, mais .venv est une convention largement adopt\u00e9e. Cette commande ne fait qu\u2019installer une structure de fichiers, elle ne lance pas l\u2019environnement.\r\n\r\n## Activer l\u2019environnement virtuel\r\n\r\nAvant d\u2019utiliser votre environnement, vous devez l\u2019activer. L\u2019activation consiste \u00e0 modifier temporairement ta session pour que Python et pip pointent vers l\u2019environnement virtuel, et non vers les versions globales du syst\u00e8me.\r\n\r\n**Selon le syst\u00e8me :**\r\n\r\n- GNU/Linux - MacOS :\r\n```bash\r\nsource .venv/bin/activate\r\n```\r\n- Microsoft Windows :  \r\n```cmd\r\n.venv\\Scripts\\activate.bat\r\n``` \r\n\r\nUne fois activ\u00e9, vous verrez le nom de l\u2019environnement s\u2019afficher dans ton terminal, ce qui confirme que vous travaillez bien dans ce contexte isol\u00e9.\r\n\r\n##  Installer des biblioth\u00e8ques avec pip\r\n\r\nMaintenant que votre environnement est actif, vous pouvez installer les biblioth\u00e8ques dont votre projet a besoin en utilisant `pip`.\r\n\r\n```bash\r\npip install requests flask\r\n```\r\nCes biblioth\u00e8ques seront install\u00e9es uniquement dans l\u2019environnement virtuel .venv, et n\u2019auront aucun impact sur les autres projets ou sur votre syst\u00e8me.\r\n\r\n### Installer une version sp\u00e9cifique d\u2019un module\r\n\r\nLorsque vous travaillez sur un projet, il est parfois essentiel d\u2019installer une version pr\u00e9cise d\u2019un module pour garantir la compatibilit\u00e9 ou \u00e9viter une r\u00e9gression.\r\n\r\n```bash\r\npip install numpy==1.21.0\r\n```\r\n**Quelques variantes utiles :**\r\n\r\n- `==` : exactement cette version\r\n- `>=` : au moins cette version\r\n- `<=` : au plus cette version\r\n- `!=` : toute version sauf celle-ci\r\n- `~=` : compatible avec (ex : requests~=2.25 installe la derni\u00e8re 2.25.x)\r\n\r\n**avec `requirements.txt`** :\r\nVous pouvez aussi fixer la version dans le fichier `requirements.txt` :\r\n```\r\nDjango==4.2.3\r\nrequests>=2.26,<3.0\r\n```\r\n\r\nPuis installer toutes les d\u00e9pendances :\r\n```bash\r\npip install -r requirements.txt\r\n```\r\n\r\n## G\u00e9rer les d\u00e9pendances\r\n\r\nQuand vous travaillez sur un projet, il est important de pouvoir facilement partager les biblioth\u00e8ques utilis\u00e9es. Pour cela, on utilise un fichier `requirements.txt` qui liste toutes les d\u00e9pendances.\r\n\r\nPour sauvegarder les d\u00e9pendances :\r\n```bash\r\npip freeze > requirements.txt\r\n```\r\n\r\nPour r\u00e9installer les m\u00eames d\u00e9pendances ailleurs :\r\n```bash\r\npip install -r requirements.txt\r\n```\r\nAinsi, n\u2019importe qui (ou vous-m\u00eame dans quelques mois) pourra recr\u00e9er exactement le m\u00eame environnement.\r\n\r\n## D\u00e9sactiver l\u2019environnement\r\n\r\nLorsque vous avez fini de travailler sur votre projet, vous pouvez d\u00e9sactiver l\u2019environnement virtuel. Cela remet le terminal dans son \u00e9tat initial, en sortant de l\u2019environnement isol\u00e9.\r\n\r\n```bash\r\ndeactivate\r\n```\r\nVotre interpr\u00e9teur Python redevient alors celui du syst\u00e8me.\r\n\r\n## Supprimer un environnement virtuel\r\n\r\nSi vous n\u2019avez plus besoin de l\u2019environnement (par exemple, si vous supprimez le projet), vous pouvez simplement supprimer le dossier .venv. Cela ne supprime que l\u2019environnement, pas votre projet ou vos fichiers de code.\r\n\r\n**Selon le syst\u00e8me :**\r\n\r\n- GNU/Linux - MacOS :\r\n```bash\r\nrm -rf .venv\r\n```\r\n- Microsoft Windows :  \r\n```cmd\r\nrd /s /q .venv\r\n``` \r\n\r\n## Utiliser Pipenv pour simplifier la gestion des environnements et des d\u00e9pendances\r\n\r\nBien que `venv` et `pip` soient des outils puissants, l'utilisation de Pipenv peut grandement simplifier la gestion des environnements virtuels et des d\u00e9pendances. Pipenv combine les fonctionnalit\u00e9s de `pip` et `virtualenv` en un seul outil, offrant une exp\u00e9rience plus fluide et moins sujette aux erreurs. \r\n\r\nLa documentation officielle de Python recommande l'utilisation de Pipenv pour la gestion des d\u00e9pendances des applications.\r\n\r\nDans le <a href=\"https://packaging.python.org/en/latest/guides/tool-recommendations/\" target=\"_blank\">Python Packaging User Guide</a>, il est indiqu\u00e9 que Pipenv est l'un des outils reconnus pour cr\u00e9er des fichiers de verrouillage (lock files), qui contiennent les versions exactes de tous les paquets install\u00e9s dans un environnement, afin d'assurer la reproductibilit\u00e9. Cela est particuli\u00e8rement utile pour les projets collaboratifs o\u00f9 il est essentiel que tous les contributeurs utilisent les m\u00eames versions de d\u00e9pendances.\r\n\r\nDe plus, le guide <a href=\"https://packaging.python.org/en/latest/tutorials/managing-dependencies/\" target=\"_blank\">Managing Application Dependencies</a> pr\u00e9sente un tutoriel d\u00e9taill\u00e9 sur l'utilisation de Pipenv pour g\u00e9rer les d\u00e9pendances d'une application. Il y est mentionn\u00e9 que, bien que `pip` soit souvent suffisant pour un usage personnel, Pipenv est recommand\u00e9 pour les projets collaboratifs, car c'est un outil de plus haut niveau qui simplifie la gestion des d\u00e9pendances pour les cas d'utilisation courants.\r\n\r\nEn r\u00e9sum\u00e9, Pipenv est recommand\u00e9 par la documentation officielle de Python pour la gestion des d\u00e9pendances des applications, en particulier dans des contextes collaboratifs o\u00f9 la reproductibilit\u00e9 et la simplicit\u00e9 de gestion sont essentielles.\r\n\r\n### Installation de Pipenv\r\n\r\nInstallez Pipenv en utilisant `pip` :\r\n```bash\r\npip install --user pipenv\r\n```\r\n**Note**: Il est recommand\u00e9 d'utiliser l'option `--user` pour \u00e9viter les probl\u00e8mes de permissions et les conflits avec les paquets syst\u00e8me.\r\n\r\n### Cr\u00e9er un nouveau projet avec Pipenv\r\n\r\n**Initialiser un projet**\r\n\r\nDans le r\u00e9pertoire de votre projet, ex\u00e9cutez :\r\n\r\n```bash\r\npipenv shell\r\n```\r\n**Note**: Cela cr\u00e9era un fichier Pipfile qui g\u00e9rera les d\u00e9pendances de votre projet.\r\n\r\n**Installer des paquets**\r\n\r\nPour installer une biblioth\u00e8que, par exemple `requests` :\r\n```bash\r\npipenv install requests\r\n```\r\n\r\n**D\u00e9sactiver l'environnement virtuel :**\r\nPour sortir de l'environnement virtuel :\r\n\r\n```bash\r\nexit\r\n```\r\n**G\u00e9rer les d\u00e9pendances de d\u00e9veloppement :**\r\nPour installer des paquets n\u00e9cessaires uniquement pour le d\u00e9veloppement, utilise l'option `--dev` :\r\n```bash\r\npipenv install --dev pytest\r\n```\r\n\r\n**V\u00e9rifier les d\u00e9pendances :**\r\nPour v\u00e9rifier les vuln\u00e9rabilit\u00e9s de s\u00e9curit\u00e9 dans les d\u00e9pendances :\r\n```bash\r\npipenv check\r\n```\r\n\r\n### Avantages de Pipenv\r\n\r\n- **Gestion simplifi\u00e9e** : Unifie la gestion des environnements virtuels et des d\u00e9pendances. \r\n- **Reproductibilit\u00e9 **: Le fichier Pipfile.lock assure que tous les contributeurs utilisent les m\u00eames versions de paquets.\r\n- **S\u00e9curit\u00e9** : Int\u00e8gre des outils pour v\u00e9rifier les vuln\u00e9rabilit\u00e9s dans les d\u00e9pendances.\r\n- **Compatibilit\u00e9** : Fonctionne sur Windows, macOS et Linux.\r\n\r\n## R\u00e9sum\u00e9 des commandes importantes\r\n\r\n<table>\r\n    <caption>Commandes cl\u00e9s pour g\u00e9rer efficacement un environnement Python avec <code>venv</code> et <code>pipenv</code>.</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Action</th>\r\n            <th scope=\"col\">Commande</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>Cr\u00e9er un environnement virtuel</td>\r\n            <td><code>python3 -m venv .venv</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Activer (Linux/macOS)</td>\r\n            <td><code>source .venv/bin/activate</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Activer (Windows)</td>\r\n            <td><code>.venv\\Scripts\\activate.bat</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer un paquet</td>\r\n            <td><code>pip install nom_du_paquet</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Geler les d\u00e9pendances</td>\r\n            <td><code>pip freeze &gt; requirements.txt</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer depuis requirements</td>\r\n            <td><code>pip install -r requirements.txt</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>D\u00e9sactiver l\u2019environnement</td>\r\n            <td><code>deactivate</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Supprimer l\u2019environnement</td>\r\n            <td><code>rm -rf .venv</code> ou <code>rd /s /q .venv</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer Pipenv</td>\r\n            <td><code>pip install --user pipenv</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Initialiser un projet avec Pipenv</td>\r\n            <td><code>pipenv install</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer un paquet avec Pipenv</td>\r\n            <td><code>pipenv install nom_du_paquet</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Activer l'environnement Pipenv</td>\r\n            <td><code>pipenv shell</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>V\u00e9rifier les vuln\u00e9rabilit\u00e9s</td>\r\n            <td><code>pipenv check</code></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n",
      "created": "2025-06-05T11:44:50.830224",
      "updated": "2025-06-05T13:01:12.063571",
      "meta_description": "Apprenez \u00e0 g\u00e9rer vos environnements Python avec venv, pip et Pipenv pour \u00e9viter les conflits de d\u00e9pendances et garder vos projets propres.",
      "status_id": 3
    },
    {
      "id": 14,
      "title": "Flask - Chapitre 2 : Pr\u00e9paration du projet de blog",
      "slug": "flask-chapitre-2-preparation-du-projet-de-blog",
      "body": "Dans la suite de ce tuto, nous allons construire, am\u00e9liorer et d\u00e9ployer un site de blog con\u00e7u pour les d\u00e9veloppeurs. Ce projet vous initiera aux t\u00e2ches les plus courantes du d\u00e9veloppement web, comme :\r\n\r\n- La gestion de bases de donn\u00e9es relationnelles,\r\n- Le traitement et la validation des donn\u00e9es de formulaire,\r\n- et bien s\u00fbr (le pr\u00e9f\u00e9r\u00e9 de tous) : les tests.\r\n\r\n\u00c0 chaque chapitre, vous apprendrez une nouvelle comp\u00e9tence \u00e0 travers des projets concrets et pratiques. Dans le tableau suivant, vous trouverez une br\u00e8ve description des comp\u00e9tences cl\u00e9s associ\u00e9es aux diff\u00e9rentes fonctionnalit\u00e9s du blog.\r\n\r\n<table>\r\n    <caption>Correspondance entre les comp\u00e9tences techniques et les fonctionnalit\u00e9s du site de blog</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Comp\u00e9tence</th>\r\n            <th scope=\"col\">Fonctionnalit\u00e9(s) du site de blog</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <th scope=\"row\">Bases de donn\u00e9es relationnelles avec SQLAlchemy <br>Flask-SQLAlchemy</th>\r\n            <td>Stocker les articles et les tags dans une base de donn\u00e9es relationnelle. Effectuer une grande vari\u00e9t\u00e9 de requ\u00eates, y compris la pagination, les plages de dates, la recherche en texte int\u00e9gral, les jointures internes et externes, et plus encore.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Traitement et validation de formulaires <br>Flask-WTF</th>\r\n            <td>Cr\u00e9er et modifier des articles de blog \u00e0 l\u2019aide de formulaires. Dans les chapitres suivants, nous utiliserons \u00e9galement les formulaires pour connecter les utilisateurs au site et permettre aux visiteurs de publier des commentaires.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Rendu de templates avec Jinja2</th>\r\n            <td>Cr\u00e9er un ensemble de templates clair et extensible, en utilisant l\u2019h\u00e9ritage et les inclusions lorsque cela est pertinent.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Authentification des utilisateurs et tableaux de bord d\u2019administration<br>Flask-Login</th>\r\n            <td>Stocker les comptes utilisateurs dans la base de donn\u00e9es et restreindre la page de gestion des articles aux utilisateurs enregistr\u00e9s. Construire un panneau d\u2019administration pour g\u00e9rer les articles, les comptes utilisateurs, et afficher des statistiques comme les pages vues, la g\u00e9olocalisation IP, etc.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Ajax et APIs RESTful<br>Flask-API</th>\r\n            <td>Construire un syst\u00e8me de commentaires dynamique avec Ajax affich\u00e9 sur chaque article. Exposer les articles du blog via une API RESTful, et cr\u00e9er un client en ligne de commande pour publier des articles via l\u2019API.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Tests unitaires <br>pytest</th>\r\n            <td>Construire une suite compl\u00e8te de tests pour le blog, et apprendre \u00e0 simuler des requ\u00eates r\u00e9elles et \u00e0 utiliser des mocks pour simplifier les interactions complexes.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Tout le reste</th>\r\n            <td>Protection contre les attaques CSRF, flux Atom, d\u00e9tection de spam, ex\u00e9cution de t\u00e2ches asynchrones, d\u00e9ploiement, SSL (HTTPS), h\u00e9bergement, et plus encore.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n## Le cahier des charges\r\n\r\nIl est toujours bon, lorsqu\u2019on d\u00e9marre un projet ambitieux, d\u2019avoir une sp\u00e9cification fonctionnelle en t\u00eate. Pour le site de blog, notre sp\u00e9cification sera tout simplement la liste des fonctionnalit\u00e9s que nous souhaitons int\u00e9grer. Ces fonctionnalit\u00e9s sont bas\u00e9es sur mon exp\u00e9rience dans le d\u00e9veloppement de mon blog personnel :\r\n\r\n- Les articles doivent pouvoir \u00eatre saisis via une interface web. Pour la mise en forme, l\u2019auteur pourra utiliser **Markdown**, un langage de balisage l\u00e9ger et agr\u00e9able visuellement.\r\n- Des images pourront \u00eatre t\u00e9l\u00e9vers\u00e9es sur le site et facilement int\u00e9gr\u00e9es aux articles.\r\n- Les articles pourront \u00eatre organis\u00e9s \u00e0 l\u2019aide de **tags** (\u00e9tiquettes) en nombre illimit\u00e9.\r\n- Le site devra supporter **plusieurs auteurs**.\r\n- Les articles pourront \u00eatre affich\u00e9s par **ordre de publication**, mais aussi list\u00e9s par **mois**, par **tag**, ou par **auteur**. Les longues listes d\u2019articles seront **pagin\u00e9es**.\r\n- Les articles pourront \u00eatre enregistr\u00e9s en tant que **brouillons**, visibles uniquement par leur auteur jusqu\u2019\u00e0 leur publication.\r\n- Les visiteurs du site pourront **poster des commentaires** sur les articles. Ces commentaires seront **v\u00e9rifi\u00e9s contre le spam**, puis l\u2019auteur pourra choisir de les rendre visibles ou non.\r\n- Des **flux Atom** seront disponibles pour tous les articles, y compris des flux s\u00e9par\u00e9s pour chaque auteur et chaque tag.\r\n- Les articles pourront \u00eatre acc\u00e9d\u00e9s via une **API RESTful**. Les auteurs disposeront d\u2019un **jeton d\u2019API** leur permettant de modifier les articles via l\u2019API.\r\n\r\nBien que cette liste ne soit pas exhaustive, elle couvre les fonctionnalit\u00e9s principales de notre site de blog. J\u2019esp\u00e8re que vous trouverez ce projet \u00e0 la fois **amusant** et **stimulant**.Je suis certain que vous avez h\u00e2te de commencer, alors lan\u00e7ons la mise en place de notre projet de blog.\r\n\r\n## Cr\u00e9ation du projet blog\r\n\r\nCommen\u00e7ons par cr\u00e9er un nouveau projet dans notre r\u00e9pertoire de travail. Sur mon ordinateur portable, il s'agit de `/home/user/projects`, ou, sur un syst\u00e8me Unix, simplement `~/projects`. C\u2019est exactement ce que nous avons fait lorsque nous avons cr\u00e9\u00e9 l\u2019application `hello_flask`. **Note** : n'oubliez pas d'effacer l'ancien projet (hello_flask)\r\n\r\n```bash\r\n$ cd ~/projects\r\n$ mkdir blog\r\n$ cd blog\r\n```\r\n\r\nNous allons ensuite devoir configurer notre environnement `virtualenv`. Cela diff\u00e8re de ce que nous avons fait pr\u00e9c\u00e9demment, car il s\u2019agit d\u2019une mani\u00e8re plus structur\u00e9e d\u2019utiliser `virtualenv`.\r\n\r\n```bash\r\n$ python -m venv .venv\r\n```\r\n\r\nL\u2019\u00e9tape suivante consiste \u00e0 installer Flask dans notre environnement virtuel. Pour cela, nous allons activer le `virtualenv` et utiliser `pip` pour installer Flask.\r\n\r\n```bash\r\n$ source .venv/bin/activate\r\n(.venv) ... $ pip install flask\r\n```\r\n\r\nJusqu\u2019\u00e0 pr\u00e9sent, tout cela devrait t\u2019\u00eatre relativement familier. Cependant, au lieu de cr\u00e9er un seul fichier pour notre application \u2014 ce qui est tout \u00e0 fait autoris\u00e9 et pertinent pour des applications tr\u00e8s simples \u2014 nous pouvons aussi cr\u00e9er un nouveau dossier nomm\u00e9 app. Ce dossier nous permettra de structurer notre application de mani\u00e8re modulaire et plus logique. \r\n\r\n\u00c0 l\u2019int\u00e9rieur de ce dossier, nous allons cr\u00e9er cinq fichiers vides nomm\u00e9s : `__init__.py`, `app.py`, `config.py`, `main.py` et `views.py`, comme suit :\r\n\r\n```bash\r\n(.venv) ... $ mkdir app\r\n(.venv) ... $ touch app/{__init__,app,config,main,views}.py\r\n```\r\n**Note** : La derni\u00e8re commande utilise une petite astuce du shell pour cr\u00e9er plusieurs fichiers \u00e0 partir des noms entre crochets. \r\n\r\nMais \u00e0 quoi servent ces fichiers que nous venons de cr\u00e9er ? Comme vous allez le voir, chaque fichier a un r\u00f4le important. Leur nom donne d\u00e9j\u00e0 une id\u00e9e de leur fonction, mais voici un bref aper\u00e7u des responsabilit\u00e9s de chaque fichier :\r\n\r\n<table>\r\n    <caption>Structure de base d\u2019un dossier app/ pour une application Flask</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Nom du fichier</th>\r\n            <th scope=\"col\">Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td><code>__init__.py</code></td>\r\n\t\t\t\t\t\t<td>Indique \u00e0 Python que le dossier <code>app/</code> doit \u00eatre trait\u00e9 comme un package Python.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>app.py</code></td>\r\n            <td>Contient l\u2019application Flask elle-m\u00eame.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>config.py</code></td>\r\n            <td>Fichier destin\u00e9 \u00e0 stocker les variables de configuration de notre application Flask.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>main.py</code></td>\r\n            <td>Le point d\u2019entr\u00e9e pour ex\u00e9cuter l\u2019application.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>views.py</code></td>\r\n            <td>D\u00e9finit les routes URL et les vues associ\u00e9es de l\u2019application.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n## Une application Flask minimaliste\r\n\r\nRemplissons maintenant ces fichiers avec le strict minimum de code n\u00e9cessaire pour obtenir une application Flask ex\u00e9cutable.\r\nCela mettra notre projet en bonne position pour le chapitre suivant, dans lequel nous commencerons \u00e0 coder la sauvegarde et la r\u00e9cup\u00e9ration des articles du blog depuis la base de donn\u00e9es.\r\n\r\nNous allons commencer par le module `config.py`. Ce fichier contiendra une classe `Configuration` qui indiquera \u00e0 Flask que nous souhaitons ex\u00e9cuter notre application en mode `DEBUG`.\r\n\r\nAjoutez les deux lignes de code suivantes dans le fichier `config.py` :\r\n\r\n```python\r\nclass Configuration(object):\r\n    DEBUG = True\r\n```\r\n\r\nEnsuite, nous allons cr\u00e9er notre application Flask et lui indiquer d\u2019utiliser les valeurs de configuration d\u00e9finies dans le module `config`. Ajoutez le code suivant dans le fichier `app.py` :\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom config import Configuration\r\n\r\n\r\napp = Flask(__name__)\r\napp.config.from_object(Configuration)\r\n```\r\n\r\nLe module views contiendra une seule vue, li\u00e9e \u00e0 l\u2019URL racine du site. Ajoutez le code suivant dans `views.py` :\r\n\r\n```python\r\nfrom app import app\r\n\r\n\r\n@app.route('/')\r\ndef homepage():\r\n    return 'Accueil'\r\n```\r\n\r\nComme vous l\u2019avez probablement remarqu\u00e9, il nous manque encore l\u2019appel \u00e0 `app.run()`. Nous placerons ce code dans `main.py`, que nous utiliserons comme point d\u2019entr\u00e9e de notre application. Ajoute le code suivant dans le fichier `main.py` :\r\n\r\n```python\r\nfrom app import app\r\nimport views\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\nNous n\u2019appelons pas `app.run(debug=True)` car nous avons d\u00e9j\u00e0 indiqu\u00e9 \u00e0 Flask d\u2019ex\u00e9cuter l\u2019application en mode debug via l\u2019objet `Configuration`. Vous pouvez lancer l\u2019application depuis la ligne de commande en ex\u00e9cutant le module main de la fa\u00e7on suivante : \r\n```bash\r\n(.venv) ... $ python app/main.py\r\n```\r\n\r\n### Prise de recul\r\n\r\n\u00c0 l\u2019exception de la classe Configuration, la majeure partie de ce code devrait vous sembler famili\u00e8re. Nous avons essentiellement repris le code de l\u2019exemple hello_flask et l\u2019avons r\u00e9parti en plusieurs modules. Cela peut sembler un peu excessif d\u2019\u00e9crire seulement deux ou trois lignes par fichier, mais \u00e0 mesure que votre projet grandira, vous verrez \u00e0 quel point cet engagement pr\u00e9coce en faveur d\u2019une bonne organisation porte ses fruits. Vous avez peut-\u00eatre remarqu\u00e9 qu\u2019il existe une priorisation interne entre ces fichiers, bas\u00e9e sur l\u2019ordre dans lequel ils sont import\u00e9s \u2014 ceci afin d\u2019\u00e9viter le risque d\u2019importations circulaires. Une importation circulaire se produit lorsque deux modules s\u2019importent mutuellement, ce qui emp\u00eache leur importation effective. Avec Flask, il est tr\u00e8s facile de g\u00e9n\u00e9rer ce genre de probl\u00e8me, car de nombreux \u00e9l\u00e9ments d\u00e9pendent de l\u2019objet central `app`.\r\n\r\nPour \u00e9viter cela, certaines personnes pr\u00e9f\u00e8rent regrouper tout dans un seul module. Cela fonctionne pour les petites applications, mais ce n\u2019est pas viable au-del\u00e0 d\u2019une certaine taille ou complexit\u00e9. C\u2019est pourquoi nous avons d\u00e9coup\u00e9 notre application en plusieurs modules et cr\u00e9\u00e9 un point d\u2019entr\u00e9e unique qui contr\u00f4le l\u2019ordre des importations.\r\n\r\n### Le flux d\u2019importation\r\n\r\nL\u2019ex\u00e9cution commence lorsque vous lancez la commande python `main.py` depuis la ligne de commande. La premi\u00e8re ligne de code que l\u2019interpr\u00e9teur Python rencontre importe l\u2019objet app depuis le module `app`. Nous nous trouvons maintenant dans `app.py`, qui importe Flask ainsi que notre objet `Configuration`. Le reste du module `app.py` est alors lu et interpr\u00e9t\u00e9, puis le contr\u00f4le revient \u00e0 `main.py`.\r\n\r\nLa seconde ligne de `main.py` importe le module `views`. Nous sommes alors dans `views.py`, qui d\u00e9pend de `app.py` pour le d\u00e9corateur `@app.route` \u2014 et cet objet est d\u00e9j\u00e0 disponible depuis `main.py`. Les routes et les vues sont enregistr\u00e9es au moment o\u00f9 le module `views` est interpr\u00e9t\u00e9, puis l\u2019ex\u00e9cution revient \u00e0 `main.py`. Puisque vous ex\u00e9cutez directement `main.py`, la condition du bloc `if` s\u2019\u00e9value \u00e0 `True` et votre application se lance.\r\n\r\n",
      "created": "2025-06-05T23:48:47.804219",
      "updated": "2025-06-06T01:04:22.403066",
      "meta_description": "Chapitre 2 : Cr\u00e9ez un blog minimaliste avec Flask en posant les bases du projet. Structure, routes simples et premi\u00e8res vues au programme.",
      "status_id": 1
    },
    {
      "id": 15,
      "title": "Cr\u00e9er des rep\u00e8res pour les formulaires",
      "slug": "creer-des-reperes-pour-les-formulaires",
      "body": "Certains formulaires , tels que les formulaires de recherche et les filtres, sont des \u00e9l\u00e9ments centraux d'un site Web. En particulier pour les utilisateurs de lecteurs d'\u00e9cran, la recherche sur le site est souvent une alternative utile \u00e0 la navigation conventionnelle. Les utilisateurs qui ne peuvent pas trouver facilement des formulaires importants peuvent avoir des difficult\u00e9s \u00e0 obtenir des informations.\r\n\r\nLa solution est de promouvoir les formulaires importants d'une page vers des points de rep\u00e8re peut aider \u00e0 la d\u00e9couverte. L'acc\u00e8s direct par des raccourcis peut \u00eatre utile pour les formulaires de recherche (voir l'[exemple 1](#exemple-1) et l'[exemple 2](#exemple-2)) et les formulaires de connexion ([exemple 3](#exemple-3)).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Formulaire avec un r\u00f4le de recherche**\r\n\r\n```html\r\n<form role=\"search\">\r\n  <label for=\"site-search\">Chercher</label>\r\n  <input type=\"text\" id=\"site-search\">\r\n\t<button type=\"submit\">Lancer la recherche</button>\r\n</form>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Formulaire dans un \u00e9l\u00e9ment de recherche**\r\n\r\n```html\r\n<search role=\"search\">\r\n  <form>\r\n    <label for=\"site-search\">Chercher</label>\r\n    <input type=\"text\" id=\"site-search\">\r\n\t\t<button type=\"submit\">Lancer la recherche</button>\r\n  </form>\r\n</search>\r\n```\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Point de rep\u00e8re d'un formulaire de connexion**\r\n\r\n```html\r\n<form role=\"form\" method=\"post\">\r\n  <fieldset>\r\n    <legend>Se connecter</legend>\r\n    <div>\r\n      <label for=\"username\">utilisateur</label>\r\n      <input type=\"text\" id=\"username\" autocomplete=\"username\">\r\n    </div>\r\n    <div>\r\n      <label for=\"password\">Mot de passe</label>\r\n      <input type=\"password\" id=\"password\" autocomplete=\"current-password\">\r\n    </div>\r\n  </fieldset>\r\n\t<button type=\"submit\">Se connecter</button>\r\n</form>\r\n```\r\n\r\nLa recherche sur le site, la recherche sur la page, les filtres et les formulaires de connexion sont souvent des \u00e9l\u00e9ments essentiels d'une page. Vous pouvez transformer un formulaire en rep\u00e8re `search` ou `form` (voir l'[exemple 1](#exemple-1) et l'[exemple 3](#exemple-3) ) en utilisant l'attribut `role` et en \u00e9tiquetant le formulaire. Vous pouvez aussi utiliser l'\u00e9l\u00e9ment `<search>`, qui a un r\u00f4le de recherche implicite([exemple 2](#exemple-2)).\r\n\r\nEn regardant le [tableau 1](#table-1),vous remarquerez que la prise en charge des rep\u00e8res de recherche et de formulaire est mitig\u00e9e. Tous les lecteurs d'\u00e9cran test\u00e9s prennent bien en charge le r\u00f4le `search`, mais seul VoiceOver avec Safari 17.3+ prend en charge l'\u00e9l\u00e9ment de recherche. C'est parce que cet \u00e9l\u00e9ment a \u00e9t\u00e9 introduit au d\u00e9but de l'ann\u00e9e 2023. Selon votre public, vous devrez peut-\u00eatre combiner l'\u00e9l\u00e9ment avec le r\u00f4le pour obtenir le meilleur r\u00e9sultat. La plupart des lecteurs d'\u00e9cran de bureau prennent en charge le r\u00f4le `form` lorsque vous l'\u00e9tiquettez. VoiceOver (sur macOS et iOS), et TalkBack n'annoncent pas les rep\u00e8res de forme. \u00c9tant donn\u00e9 que l'attribut `role` ne nuit \u00e0 rien lorsqu'il n'est pas pris en charge, il est prudent de l'utiliser et d'offrir un avantage aux utilisateurs dont le logiciel le prend en charge.\r\n\r\n<table id=\"table-1\">\r\n  <caption>Test de lecteur d'\u00e9cran : Comment les r\u00f4les de formulaire et de recherche sont-ils expos\u00e9s ?</caption>\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\" style=\"width: 300px;\">R\u00e9glage</th>\r\n      <th scope=\"col\">NVDA</th>\r\n      <th scope=\"col\">VoiceOver</th>\r\n      <th scope=\"col\">JAWS</th>\r\n      <th scope=\"col\">Narrateur</th>\r\n      <th scope=\"col\">TalkBack</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire sans r\u00f4le ni \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire sans r\u00f4le, \u00e9tiquet\u00e9 par l'en-t\u00eate</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de formulaire et sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de formulaire, \u00e9tiquet\u00e9 par l'en-t\u00eate</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire sans r\u00f4le, \u00e9tiquet\u00e9 par la l\u00e9gende</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>groupe</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de formulaire, \u00e9tiquet\u00e9 par la l\u00e9gende</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>groupe</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de recherche et sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de recherche, \u00e9tiquet\u00e9 par un titre</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>\u00e9l\u00e9ment de recherche sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>\u00e9l\u00e9ment de recherche avec r\u00f4le de recherche et sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>\u00e9l\u00e9ment de recherche avec r\u00f4le de recherche, \u00e9tiquet\u00e9 par un titre</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n**Note** : texte en gras indique qu'il n'est pas annonc\u00e9 comme un point de rep\u00e8re \"formulaire\", mais qu'il est accessible via la navigation par points de rep\u00e8re.\r\n\r\n\r\n",
      "created": "2025-06-06T14:01:00.250866",
      "updated": "2025-06-06T14:58:44.844886",
      "meta_description": "Am\u00e9liorez l\u2019accessibilit\u00e9 de vos formulaires HTML gr\u00e2ce aux r\u00f4les ARIA et balises adapt\u00e9es. Guide pratique avec exemples et compatibilit\u00e9 lecteur d\u2019\u00e9cran.",
      "status_id": 3
    },
    {
      "id": 16,
      "title": "Flask - Chapitre 3 : Bases de donn\u00e9es relationnelles avec SQLAlchemy",
      "slug": "flask-chapitre-3-bases-de-donnees-relationnelles-avec-sqlalchemy",
      "body": "Les bases de donn\u00e9es relationnelles constituent la pierre angulaire sur laquelle repose presque toute application Web moderne. Apprendre \u00e0 concevoir votre application en termes de tables et de relations est l'une des cl\u00e9s d\u2019un projet propre et bien structur\u00e9. Comme vous le verrez dans ce chapitre, le mod\u00e8le de donn\u00e9es que vous choisirez d\u00e8s le d\u00e9part influencera presque tous les aspects du code qui suivra. Nous utiliserons SQLAlchemy, un puissant <abbr>[ORM](#def-orm)</abbr> qui nous permet d\u2019abstraire la complexit\u00e9 des diff\u00e9rents moteurs de bases de donn\u00e9es afin de travailler directement avec la base depuis Python.\r\n\r\n<span id=\"def-orm\"><strong>Remarque</strong>: Un mapping objet-relationnel (en anglais Object-Relational Mapping ou ORM) est un type de programme informatique qui se place en interface entre un programme applicatif et une base de donn\u00e9es relationnelle pour simuler une base de donn\u00e9es orient\u00e9e objet. Ce programme d\u00e9finit des correspondances entre les sch\u00e9mas de la base de donn\u00e9es et les classes du programme applicatif. On pourrait le d\u00e9signer par l\u00e0 \u00ab comme une couche d'abstraction entre le monde objet et monde relationnel \u00bb. Du fait de sa fonction, on retrouve ce type de programme dans un grand nombre de frameworks sous la forme de composant ORM qui a \u00e9t\u00e9 soit d\u00e9velopp\u00e9, soit int\u00e9gr\u00e9 depuis une solution externe. <span>\r\n\r\n## Pourquoi utiliser une base de donn\u00e9es relationnelle ?\r\n\r\nLa base de donn\u00e9es de votre application est bien plus qu\u2019un simple registre de ce qu\u2019il faut conserver pour un usage ult\u00e9rieur. Si votre seul besoin \u00e9tait de sauvegarder et de r\u00e9cup\u00e9rer des donn\u00e9es, vous pourriez facilement utiliser des fichiers texte plats. Cependant, vous souhaitez pouvoir effectuer des requ\u00eates int\u00e9ressantes sur vos donn\u00e9es. Et vous souhaitez le faire de mani\u00e8re efficace, sans r\u00e9inventer la roue. Bien que les bases de donn\u00e9es non relationnelles (parfois appel\u00e9es bases NoSQL) soient tr\u00e8s populaires et aient leur place dans l\u2019univers du Web, les bases de donn\u00e9es relationnelles ont depuis longtemps r\u00e9solu les probl\u00e8mes courants de filtrage, de tri, d\u2019agr\u00e9gation et de jointure de donn\u00e9es tabulaires. Elles permettent de d\u00e9finir des ensembles de donn\u00e9es de mani\u00e8re structur\u00e9e tout en maintenant la coh\u00e9rence des informations. En utilisant des bases de donn\u00e9es relationnelles, vous vous donnez aussi, en tant que d\u00e9veloppeur, la libert\u00e9 de vous concentrer sur les parties de votre application qui comptent vraiment.\r\n\r\nEn plus de permettre l\u2019ex\u00e9cution efficace de requ\u00eates ponctuelles, un serveur de base de donn\u00e9es relationnelle vous offre \u00e9galement les avantages suivants :\r\n\r\n- Il garantit que vos donn\u00e9es respectent les r\u00e8gles d\u00e9finies dans le sch\u00e9ma ;\r\n- Il permet \u00e0 plusieurs personnes d\u2019acc\u00e9der \u00e0 la base de donn\u00e9es simultan\u00e9ment, tout en assurant la coh\u00e9rence des donn\u00e9es sous-jacentes ;\r\n- Il s\u2019assure que les donn\u00e9es, une fois enregistr\u00e9es, ne soient pas perdues m\u00eame en cas de plantage de l\u2019application.\r\n\r\nLes bases de donn\u00e9es relationnelles et SQL, le langage de programmation utilis\u00e9 avec ces bases, sont des sujets qui m\u00e9riteraient \u00e0 eux seuls un ouvrage complet. Cependant, comme ce tutoriel est consacr\u00e9 \u00e0 l\u2019apprentissage du d\u00e9veloppement d\u2019applications avec Flask, je vais vous montrer comment utiliser un outil largement adopt\u00e9 par la communaut\u00e9 Python pour travailler avec des bases de donn\u00e9es : <a href=\"https://www.sqlalchemy.org/\" target=\"_blank\">SQLAlchemy</a>.\r\n\r\n**Important** : <a href=\"https://www.sqlalchemy.org/\" target=\"_blank\">SQLAlchemy</a> masque de nombreuses complications li\u00e9es \u00e0 l\u2019\u00e9criture de requ\u00eates SQL, mais rien ne remplace une compr\u00e9hension approfondie de SQL et du mod\u00e8le relationnel. \u2019est pourquoi, si vous d\u00e9butez avec SQL, je vous recommande vivement d'apprendre d'abord le SQL. \r\n\r\n## Introduction \u00e0 SQLAlchemy\r\n\r\nSQLAlchemy est une biblioth\u00e8que extr\u00eamement puissante pour travailler avec des bases de donn\u00e9es relationnelles en Python. Plut\u00f4t que d\u2019\u00e9crire manuellement des requ\u00eates SQL, vous pouvez utiliser des objets Python classiques pour repr\u00e9senter les tables de la base de donn\u00e9es et ex\u00e9cuter des requ\u00eates. Cette approche pr\u00e9sente plusieurs avantages :\r\n\r\n- Votre application peut \u00eatre enti\u00e8rement d\u00e9velopp\u00e9e en Python.\r\n- Les diff\u00e9rences subtiles entre les moteurs de bases de donn\u00e9es sont masqu\u00e9es. Cela vous permet, par exemple, d\u2019utiliser une base l\u00e9g\u00e8re comme SQLite pour le d\u00e9veloppement et les tests locaux, puis de passer \u00e0 une base con\u00e7ue pour de fortes charges (comme PostgreSQL) en production.\r\n- Les erreurs li\u00e9es \u00e0 la base de donn\u00e9es sont moins fr\u00e9quentes, car deux couches s\u2019interposent entre votre application et le serveur de base : l\u2019interpr\u00e9teur Python lui-m\u00eame (qui intercepte les erreurs de syntaxe \u00e9videntes) et SQLAlchemy, qui dispose d\u2019API bien d\u00e9finies et de son propre syst\u00e8me de v\u00e9rification des erreurs.\r\n- Votre code de gestion des donn\u00e9es peut devenir plus efficace gr\u00e2ce au mod\u00e8le de \u00ab\u00a0unit of work\u00a0\u00bb de SQLAlchemy, qui r\u00e9duit les allers-retours inutiles avec la base. SQLAlchemy propose \u00e9galement des m\u00e9canismes de pr\u00e9chargement efficace des objets li\u00e9s, appel\u00e9s \u00ab eager loading \u00bb.\r\n- Le mappage objet-relationnel (ORM) rend votre code plus maintenable, conform\u00e9ment au principe \u00ab ne vous r\u00e9p\u00e9tez pas \u00bb (DRY). Par exemple, si vous ajoutez une colonne \u00e0 un mod\u00e8le, celle-ci sera disponible partout o\u00f9 vous utilisez ce mod\u00e8le. \u00c0 l\u2019inverse, si vous aviez diss\u00e9min\u00e9 des requ\u00eates SQL \u00e9crites \u00e0 la main dans toute votre application, vous devriez modifier chacune d\u2019elles individuellement pour y inclure la nouvelle colonne.\r\n- SQLAlchemy peut vous aider \u00e0 \u00e9viter les vuln\u00e9rabilit\u00e9s li\u00e9es aux injections SQL.\r\n- Excellente compatibilit\u00e9 avec d\u2019autres biblioth\u00e8ques : comme vous le verrez dans les chapitres suivants, de nombreuses biblioth\u00e8ques utiles peuvent interagir directement avec vos mod\u00e8les SQLAlchemy pour offrir des interfaces de maintenance ou des API RESTful, par exemple.\r\n\r\nJ\u2019esp\u00e8re que cette liste vous enthousiasme. Si certains points ne vous sont pas encore clairs, ne vous inqui\u00e9tez pas : au fil de ce chapitre et des suivants, ces avantages deviendront plus concrets et significatifs. Maintenant que nous avons abord\u00e9 les b\u00e9n\u00e9fices de SQLAlchemy, installons-le et commen\u00e7ons \u00e0 coder.\r\n\r\n### Installer SQLAlchmy\r\n\r\nNous utiliserons `pip` pour installer SQLAlchemy dans l'environnement virtuel de l'application blog. Comme vous l'avez vu dans le chapitre pr\u00e9c\u00e9dent, pour activer votre environnement virtuel, modifiez les r\u00e9pertoires source du script d'activation comme suit :\r\n\r\n```bash\r\n$ cd ~/projects\r\n$ source .venv/bin/activate\r\n(.venv) ... $ pip install sqlalchemy\r\n```\r\nVous pouvez v\u00e9rifier si votre installation a r\u00e9ussi en ouvrant un interpr\u00e9teur Python et en v\u00e9rifiant la version de SQLAlchemy ; notez que votre num\u00e9ro de version exact risque de diff\u00e9rer.\r\n\r\n```bash\r\n$ python\r\n>>> import sqlalchemy\r\n>>> sqlalchmy.__version__\r\n'2.0.41'\r\n```\r\n\r\n### Utiliser SQLAlchemy dans notre application Flask\r\n\r\nSQLAlchemy fonctionne tr\u00e8s bien avec Flask seul, mais l'auteur de Flask a publi\u00e9 une extension sp\u00e9ciale appel\u00e9e Flask-SQLAlchemy qui fournit des aides pour de nombreuses t\u00e2ches courantes et peut nous \u00e9viter de r\u00e9inventer la roue plus tard. Utilisons pip pour installer cette extension :\r\n\r\n```bash\r\n(.venv) $ pip install flask-sqlalchemy\r\n```\r\n\r\nFlask fournit une interface standard pour les d\u00e9veloppeurs souhaitant cr\u00e9er des extensions. Avec la popularit\u00e9 croissante du framework, le nombre d'extensions de haute qualit\u00e9 a augment\u00e9. Si vous souhaitez consulter certaines des extensions les plus populaires, une liste tri\u00e9e est disponible sur le site web du projet Flask \u00e0 l'adresse <a href=\"http://flask.pocoo.org/extensions/\" target=\"_blank\">http://flask.pocoo.org/extensions/</a>.\r\n\r\n### Choisir le moteur de base de donn\u00e9es\r\n\r\nSQLAlchemy prend en charge une multitude de dialectes de bases de donn\u00e9es populaires, notamment SQLite, MySQL et PostgreSQL. Selon la base de donn\u00e9es que vous souhaitez utiliser, vous devrez peut-\u00eatre installer un package Python suppl\u00e9mentaire contenant un pilote de base de donn\u00e9es. Voici plusieurs bases de donn\u00e9es populaires prises en charge par SQLAlchemy et leurs pilotes installables via `pip`. Certaines bases de donn\u00e9es proposent plusieurs options de pilotes, j'ai donc list\u00e9 les plus populaires en premier.\r\n\r\n<table id=\"table-1\">\r\n    <caption>Drivers SQLAlchemy par syst\u00e8me de gestion de base de donn\u00e9es (SGBD) \u2013 Packages Python recommand\u00e9s pour chaque dialecte</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Base de donn\u00e9es</th>\r\n            <th scope=\"col\">Driver</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>SQLite</td>\r\n            <td>Non n\u00e9cessaire, fait partie de la biblioth\u00e8que standard de Python depuis la version 2.5.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>MySQL</td>\r\n            <td>MySQL-python, PyMySQL (pure Python), OurSQL</td>\r\n        </tr>\r\n        <tr>\r\n            <td>PostgreSQL</td>\r\n            <td>psycopg2-binary</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Firebird</td>\r\n            <td>fdb</td>\r\n        </tr>\r\n        <tr>\r\n            <td>SQL Server</td>\r\n            <td>pymssql, PyODBC</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Oracle</td>\r\n            <td>cx-Oracle</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nSQLite est fourni par d\u00e9faut avec Python et ne n\u00e9cessite pas de processus serveur s\u00e9par\u00e9, ce qui le rend parfait pour d\u00e9marrer rapidement. Par souci de simplicit\u00e9 dans les exemples suivants, je montrerai comment configurer l'application de blog pour l'utiliser avec SQLite. Si vous pr\u00e9f\u00e9rez utiliser une autre base de donn\u00e9es pour votre projet de blog, n'h\u00e9sitez pas \u00e0 installer d\u00e8s maintenant le package du pilote n\u00e9cessaire via `pip`.\r\n\r\n### Se connecter \u00e0 une base de donn\u00e9es\r\n\r\nOuvrez le module `config.py` de notre projet blog (`~/projects/blog/app/config.py`) avec votre \u00e9diteur de texte pr\u00e9f\u00e9r\u00e9. Nous allons ajouter un param\u00e8tre sp\u00e9cifique \u00e0 SQLAlchemy pour indiquer \u00e0 Flask-SQLAlchemy comment se connecter \u00e0 notre base de donn\u00e9es. Les nouvelles lignes sont mises en \u00e9vidence ci-dessous :\r\n\r\n```python\r\nfrom pathlib import Path\r\n\r\nclass Configuration(object):\r\n    APPLICATION_DIR = Path(__file__).resolve().parent\r\n    DEBUG = True\r\n    SQLALCHEMY_DATABASE_URI = f'sqlite:///{APPLICATION_DIR}/blog.db'\r\n```\r\n\r\n`SQLALCHEMY_DATABASE_URI` se compose des \u00e9l\u00e9ments suivants :\r\n`protocole+driver://username:password@host:port/database`\r\n\r\nComme les bases de donn\u00e9es SQLite sont stock\u00e9es dans des fichiers locaux, la seule information \u00e0 fournir est le chemin vers le fichier de base de donn\u00e9es. En revanche, pour vous connecter \u00e0 une instance PostgreSQL locale, votre URI ressemblerait plut\u00f4t \u00e0 ceci :\r\n`postgresql://postgres:secretpassword@localhost:5432/blog_db`\r\n\r\n**Remarque** : Si vous rencontrez des difficult\u00e9s pour vous connecter \u00e0 votre base de donn\u00e9es, consultez la documentation SQLAlchemy sur les URI de base de donn\u00e9es : <a href=\"http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html.\" target=\"_blank\">http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html</a>.\r\n\r\nMaintenant que nous avons sp\u00e9cifi\u00e9 comment se connecter \u00e0 la base de donn\u00e9es, cr\u00e9ons l'objet responsable de la gestion des connexions \u00e0 notre base. Cet objet est fourni par l'extension `Flask-SQLAlchemy` et se nomme simplement `SQLAlchemy`. Ouvrez `app.py` et ajoutez les \u00e9l\u00e9ments suivants :\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom config import Configuration\r\n\r\n\r\napp = Flask(__name__)\r\napp.config.from_object(Configuration)\r\ndb = SQLAlchemy(app)\r\n```\r\n\r\nCes modifications configurent notre application Flask (et par extension SQLAlchemy) pour communiquer avec la base de donn\u00e9es. L'\u00e9tape suivante consiste \u00e0 cr\u00e9er une table pour stocker les articles du blog, ce qui n\u00e9cessitera la cr\u00e9ation de notre premier mod\u00e8le.\r\n\r\n## Cr\u00e9ation du mod\u00e8le Entry\r\n\r\nUn mod\u00e8le repr\u00e9sente une table de donn\u00e9es que nous souhaitons stocker dans la base de donn\u00e9es. Ces mod\u00e8les contiennent des attributs appel\u00e9s colonnes qui repr\u00e9sentent les \u00e9l\u00e9ments de donn\u00e9es. Par exemple, pour un mod\u00e8le `Person`, nous pourrions avoir des colonnes pour le pr\u00e9nom, le nom, la date de naissance, l'adresse, la couleur des cheveux, etc. Dans notre cas, comme nous cr\u00e9ons un mod\u00e8le pour des articles de blog, nous utiliserons des colonnes pour le titre, le contenu et autres champs pertinents.\r\n\r\n**Remarque**: on ne dit pas un mod\u00e8le 'People' ou 'Entries' - **les mod\u00e8les sont toujours au singulier** m\u00eame s'ils repr\u00e9sentent g\u00e9n\u00e9ralement plusieurs objets diff\u00e9rents.\r\n\r\nAvec SQLAlchemy, cr\u00e9er un mod\u00e8le est aussi simple que de d\u00e9finir une classe et de lui attribuer diff\u00e9rents champs. Commen\u00e7ons par un mod\u00e8le tr\u00e8s basique pour nos articles de blog. Cr\u00e9ez un nouveau fichier nomm\u00e9 `models.py` dans le r\u00e9pertoire `app/` du projet blog, puis ajoutez le code suivant :\r\n\r\n```python\r\nimport datetime\r\nimport re\r\nfrom app import db\r\n\r\n\r\ndef slugify(s):\r\n    return re.sub('[^\\w]+', '-', s).lower()\r\n\r\n\r\nclass Entry(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    title = db.Column(db.String(255))\r\n    slug = db.Column(db.String(255), unique=True)\r\n    body = db.Column(db.Text)\r\n    created_timestamp = db.Column(db.DateTime, default=datetime.datetime.now)\r\n    modified_timestamp = db.Column(db.DateTime, default=datetime.datetime.now, onupdate=datetime.datetime.now)\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(Entry, self).__init__(*args, **kwargs)\r\n        self.generate_slug()\r\n\r\n    def generate_slug(self):\r\n        self.slug = ''\r\n        if self.title:\r\n            self.slug = slugify(self.title)\r\n\r\n    def __repr__(self):\r\n        return '<Entry: %r>' % self.title\r\n```\r\nPlusieurs \u00e9l\u00e9ments sont \u00e0 commenter. Commen\u00e7ons donc par les imports et d\u00e9taillons progressivement. Nous importons d'abord les modules standards `datetime` et `re`. Le module `datetime` servira \u00e0 obtenir la date/heure actuelle, tandis que `re` permettra des manipulations de cha\u00eenes. L'import suivant concerne l'objet `db` cr\u00e9\u00e9 dans `app.py`. Comme vous vous en souvenez, `db` est une instance de la classe SQLAlchemy (fournie par Flask-SQLAlchemy) et donne acc\u00e8s aux classes n\u00e9cessaires pour construire notre mod\u00e8le `Entry`, que nous verrons sous peu. \r\n\r\nAvant le mod\u00e8le `Entry`, nous d\u00e9finissons une fonction utilitaire `slugify` pour g\u00e9n\u00e9rer des URLs conviviales (utilis\u00e9es au Chapitre 4). Cette fonction transforme une cha\u00eene comme `Un article sur Flask` en `un-article-sur-flask` via des expressions r\u00e9guli\u00e8res. \r\n\r\nLe mod\u00e8le `Entry` lui-m\u00eame est une classe h\u00e9ritant de `db.Model`, ce qui lui conf\u00e8re des helpers pour interroger la base de donn\u00e9es. Ses attributs repr\u00e9sentent la structure de la table : \r\n\r\n- `id` (cl\u00e9 primaire auto-g\u00e9n\u00e9r\u00e9e), \r\n- `title` (String(100) pour le titre), \r\n- `slug` (String(100) unique pour l'URL), \r\n- `body` (Text pour le contenu illimit\u00e9), \r\n- `created_timestamp` (DateTime rempli automatiquement \u00e0 la cr\u00e9ation), \r\n- `modified_timestamp` (DateTime mis \u00e0 jour \u00e0 chaque sauvegarde).\r\n\r\n**Remarque** : Pour les cha\u00eenes courtes comme les titres ou noms, la colonne `String` est appropri\u00e9e, mais pour les textes potentiellement longs, il est pr\u00e9f\u00e9rable d'utiliser une colonne `Text` comme nous l'avons fait pour le corps de l'article.\r\n\r\nNous avons surcharg\u00e9 le constructeur de la classe (`__init__`) pour qu'il g\u00e9n\u00e8re automatiquement le slug \u00e0 partir du titre lors de la cr\u00e9ation d'un nouveau mod\u00e8le. \r\n\r\nLa derni\u00e8re partie est la m\u00e9thode `__repr__` qui produit une repr\u00e9sentation lisible des instances de notre classe `Entry`. Bien que son fonctionnement exact ne soit pas crucial,  `__repr__` permet d'identifier facilement les objets lors du d\u00e9bogage. \r\n\r\nEnfin, ajoutez les modifications indiqu\u00e9es dans `main.py` (point d'entr\u00e9e de l'application) pour importer les mod\u00e8les, comme suit :\r\n\r\n```python\r\nfrom app import app, db\r\nimport models\r\nimport views\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```",
      "created": "2025-06-10T10:44:28.015044",
      "updated": "2025-06-10T23:22:26.320724",
      "meta_description": "bla",
      "status_id": 1
    },
    {
      "id": 17,
      "title": "Labelliser les points de rep\u00e8re",
      "slug": "labelliser-les-points-de-repere",
      "body": "Les rep\u00e8res ne sont utiles que si ce qu'ils repr\u00e9sentent est clair. Lorsqu'il existe plusieurs points de rep\u00e8re du m\u00eame type, les utilisateurs peuvent avoir du mal \u00e0 les diff\u00e9rencier, ce qui rend la navigation par points de rep\u00e8re difficile, voire inutile.\r\n\r\nLe moyen le plus fiable de diff\u00e9rencier les points de rep\u00e8re d'un m\u00eame type est de les \u00e9tiqueter \u00e0 l'aide des attributs `aria-labelledby` ([exemple 1](#exemple-1)) ou `aria-label` ([exemple 2](#exemple-2)).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Rep\u00e8re de navigation \u00e9tiquet\u00e9 via `aria-labelledby`**\r\n\r\n```html\r\n<nav aria-labelledby=\"pagination_heading\">\r\n  <h2 id=\"pagination_heading\">Pages</h2>\r\n  \u2026\r\n</nav>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Rep\u00e8res de navigation \u00e9tiquet\u00e9s via `aria-label`**\r\n\r\n```html\r\n<nav aria-label=\"Main\">\r\n  \u2026\r\n</nav>\r\n<nav aria-label=\"Page\">\r\n  \u2026\r\n</nav>\r\n```\r\n\r\nLorsque vous avez plusieurs navigations sur une page, comme une navigation \u00e0 l'\u00e9chelle du site, une navigation locale pour la page et une pagination, vous avez \u00e9galement trois \u00e9l\u00e9ments `<nav>`, comme le montre l'[exemple&nbsp;3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Trois rep\u00e8res de navigation non \u00e9tiquet\u00e9s**\r\n\r\n```html\r\n<nav>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/home\">Accueil</a>\r\n    </li>\r\n    ...\r\n  </ul>\r\n</nav>\r\n<nav>\r\n  <ul>\r\n    <li>\r\n       <a href=\"/category-1\">Categorie 1</a>\r\n    </li>\r\n  ...\r\n  </ul>\r\n</nav>\r\n<nav>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/page-1\">1</a>\r\n    </li>\r\n  ...\r\n  </ul>\r\n</nav>\r\n```\r\n\r\nLe fait d'avoir plusieurs \u00e9l\u00e9ments `<nav>` sur une page est valable, mais il y a maintenant trois points de rep\u00e8re navigation qui se ressemblent tous. Il est difficile de les distinguer, \u00e0 moins que vous ne connaissiez tr\u00e8s bien la structure de la page. Pour les distinguer, vous pouvez les \u00e9tiqueter en utilisant `aria-labelledby` ou `aria-label`. \r\n\r\n\r\n## Choisir une \u00e9tiquette\r\n\r\nAvant de choisir le label d'un rep\u00e8re, v\u00e9rifiez s'il n'existe pas d\u00e9j\u00e0 une label utile quelque part sur la page. Si c'est le cas, utilisez l'attribut `aria-labelledby` pour cr\u00e9er une r\u00e9f\u00e9rence entre le rep\u00e8re et un autre \u00e9l\u00e9ment qui le label. Les titres conviennent souvent pour \u00e9tiqueter les points de rep\u00e8re, comme le montre l'[exemple 1](#exemple-1).\r\n\r\nUne bonne \u00e9tiquette d\u00e9crit le but du rep\u00e8re en moins de trois mots. Pour les navigations, \u00e9vitez les termes comme \u00ab&nbsp;menu&nbsp;\u00bb ou \u00ab&nbsp;navigation&nbsp;\u00bb car le r\u00f4le de l'\u00e9l\u00e9ment le transmet d\u00e9j\u00e0. Par exemple, un lecteur d'\u00e9cran annonce un libell\u00e9 comme \u00ab&nbsp;Navigation principale&nbsp;\u00bb comme \u00ab&nbsp;Navigation principale navigation&nbsp;\u00bb  \u00c9vitez \u00e9galement les noms visuels comme \u00ab&nbsp;Burger&nbsp;\u00bb , \u00ab&nbsp;Mobile&nbsp;\u00bb ou \u00ab&nbsp;Barre sup\u00e9rieure&nbsp;\u00bb ; utilisez plut\u00f4t des \u00e9tiquettes contextuelles comme \u00ab&nbsp;Principal&nbsp;\u00bb ou \u00ab&nbsp;Contenu&nbsp;\u00bb.\r\n\r\nN'\u00e9tiquettez pas les points de rep\u00e8re `<header>`, `<main>`, et `<footer>` parce qu'ils sont cens\u00e9s \u00eatre uniques de toute fa\u00e7on et n'ont pas besoin d'\u00e9tiquette.\r\n\r\nEn g\u00e9n\u00e9ral, je recommande d'utiliser `aria-labelledby` plut\u00f4t que `aria-label`, si possible, parce qu'il fonctionne avec le contenu existant au lieu d'introduire un nouveau texte, et qu'il fonctionne mieux avec les outils d'auto-traduction comme Google Translate. S'il n'y a pas d'en-t\u00eate ou de contenu appropri\u00e9, utilisez l'attribut `aria-label`, comme dans l'[exemple 2](#exemple-2).\r\n",
      "created": "2025-06-10T13:42:19.551495",
      "updated": "2025-06-10T14:05:35.753328",
      "meta_description": "Apprenez \u00e0 labelliser les points de rep\u00e8re HTML (<nav>, <header>, etc.) avec aria-labelledby ou aria-label pour une accessibilit\u00e9 optimale. Exemples concrets et bonnes pratiques incluses.",
      "status_id": 3
    },
    {
      "id": 18,
      "title": "Structure du contenu principal",
      "slug": "structure-du-contenu-principal",
      "body": "Sur pages complexes avec beaucoup de contenu et d'\u00e9l\u00e9ments interactifs, il peut \u00eatre difficile et long pour les utilisateurs de s'orienter, de naviguer et de comprendre comment la page est structur\u00e9e. C'est particuli\u00e8rement vrai pour les utilisateurs qui ne peuvent pas balayer rapidement une page pour avoir une vue d'ensemble, comme les utilisateurs de claviers et de lecteurs d'\u00e9cran et les personnes qui ont besoin de zoomer.\r\n\r\nUtilisez des points de rep\u00e8re et d'autres \u00e9l\u00e9ments tels que des titres et des listes pour fournir une structure permettant de s'orienter et de naviguer plus facilement.\r\n\r\nLe r\u00e9sum\u00e9 au d\u00e9but d'un article de blog peut \u00eatre une r\u00e9gion pour donner aux utilisateurs de lecteurs d'\u00e9cran un acc\u00e8s direct, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un rapide rep\u00e8re r\u00e9capitulatif dans un article de blog**\r\n\r\n```html\r\n<h1>article vs section: Comment choisir le bon ?</h1>\r\n\r\n<div role=\"region\" aria-labelledby=\"sommaire\"> \r\n  <h2 id=\"summary\">R\u00e9sum\u00e9 rapide</h2>\r\n  <p>Dans cet article, Olushuyi explore un mod\u00e8le mental qui vous aide \u00e0 choisir entre les \u00e9l\u00e9ments &lt;article&gt; et &lt;section&gt; lors de la r\u00e9daction de documents. Vous d\u00e9couvrirez comment le regroupement de contenu affecte l'accessibilit\u00e9 et comment en tirer le meilleur parti pour les utilisateurs.</p>\r\n</div>\r\n```\r\n\r\n**Note** : Le r\u00f4le et l'\u00e9tiquette `aria-labelledby=\"summary\"` font de ce `div` un point de rep\u00e8re.\r\n\r\nLes conteneurs focalisables ont besoin d'un r\u00f4le et d'un nom accessible. L '[exemple 2](#exemple-2) combine les attributs `tabindex`, `role`, et `aria-label`.\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Une r\u00e9gion \u00e9tiquet\u00e9e et focalisable**\r\n\r\n```html\r\n<div role=\"region\" aria-label=\"Code Demo\" tabindex=\"0\"> \r\n  <article>\r\n    \u2026\r\n  </article>\r\n</div>\r\n\r\n<style>\r\n[role=\"region\"][tabindex=\"0\"] {\r\n  overflow: auto;\r\n}\r\n</style>\r\n```\r\n\r\n**Note** : \r\n\r\n- `tabindex` rend la r\u00e9gion focalisable.\r\n- Ce s\u00e9lecteur css (`[role=\"region\"][tabindex=\"0\"]`) rend les r\u00e9gions focalisables d\u00e9filables si n\u00e9cessaire.\r\n\r\nVous pouvez utiliser l'\u00e9l\u00e9ment `section` pour regrouper les grandes r\u00e9gions th\u00e9matiques d'une page, comme le montre l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;R\u00e9gions th\u00e9matiques sur une page d'accueil**\r\n\r\n```html\r\n<h1>L'agence</h1>\r\n\r\n<section>\r\n  <h2>Derni\u00e8re news</h2>\r\n</section>\r\n\r\n<section>\r\n  <h2>\u00c0 propos de nous</h2>\r\n</section>\r\n\r\n<section>\r\n  <h2>Projets s\u00e9lectionn\u00e9s</h2>\r\n</section>\r\n```\r\n\r\n**Note** : Les \u00e9l\u00e9ments `section` non \u00e9tiquet\u00e9es sans signification s\u00e9mantique, mais ils sont utiles pour la structuration et le style.\r\n\r\nLe label de l'\u00e9l\u00e9ment `section` en fait un point de rep\u00e8re([exemple 4](#exemple-4)).\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Une section \u00e9tiquet\u00e9e pour la r\u00e9gion de recherche sur une page.**\r\n\r\n```html\r\n<section aria-label=\"Produits recherch\u00e9s\">\r\n  <!-- formulaire de recherche ou de filtre -->\r\n  <!-- R\u00e9sultat de la recherche -->\r\n</section>\r\n```\r\n**Note**: `aria-label` transforme la section en rep\u00e8re.\r\n\r\nL'\u00e9l\u00e9ment `aside` marque le contenu li\u00e9 au contenu principal de la page, comme le montre l'[exemple 5](#exemple-5).\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;Un \u00e9l\u00e9ment de c\u00f4t\u00e9 dans un article de blog listant des articles connexes.**\r\n\r\n```html\r\n<article>\r\n  <h1>Les couches en cascade sont inutiles</h1>\r\n\r\n  <p>*si vous ne comprenez pas les probl\u00e8mes qu\u2019ils r\u00e9solvent et\u2026</p>\r\n\r\n  <!-- article du blog -->\r\n\r\n  <aside aria-labelledby=\"relatedheader\">\r\n    <h2 id=\"relatedheader\">Articles associ\u00e9s</h2>\r\n    <ul>\r\n      <li>\r\n        <a href=\"/blog/2025/un-article-42/\">\r\n          Un article \r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/blog/2025/un-autre-article-74\">\r\n          Un autre article\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/blog/2025/encore-un-article-100\">\r\n          Encore un article\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </aside>\r\n</article>\r\n```\r\nLa structuration du contenu \u00e0 l'aide d'\u00e9l\u00e9ments de liste, comme le montre l'[exemple ci-dessous](#exemple-6), peut am\u00e9liorer la compr\u00e9hension, la vue d'ensemble et la navigation.\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Une recette utilisant des listes ordonn\u00e9es et non ordonn\u00e9es**\r\n\r\n```html\r\n<h1>Lait glac\u00e9</h1>\r\n\r\n<p>Une recette de latte glac\u00e9 rafra\u00eechissante.</p>\r\n\r\n<h2>Ingr\u00e9dients</h2>\r\n\r\n<ul>\r\n  <li>2 expresso (60ml)</li>\r\n  <li>2 cuill\u00e8res \u00e0 caf\u00e9 de sucre ou de miel</li>\r\n  <li>glace</li>\r\n  <li>110ml lait</li>\r\n</ul>\r\n\r\n<h2>\u00c9tapes</h2>\r\n\r\n<ol>\r\n  <li>\r\n    M\u00e9langez l'espresso chaud avec le sucre.\r\n  </li>\r\n  <li>\r\n  Remplissez un verre de glace et ajoutez le caf\u00e9.\r\n  </li>\r\n  <li>\r\n   Versez le lait et remuez.\r\n  </li>\r\n</ol>\r\n```\r\n\r\nLe langage HTML offre de nombreux \u00e9l\u00e9ments pour structurer le contenu, mais tout l\u2019enjeu r\u00e9side dans la mani\u00e8re de les utiliser, en fonction de ce que vous souhaitez obtenir.\r\n\r\n## L'\u00e9l\u00e9ment `section`\r\n\r\nL'\u00e9l\u00e9ment `<section>` repr\u00e9sente une r\u00e9gion de page g\u00e9n\u00e9rique utilis\u00e9e pour regrouper le contenu par th\u00e8me. Il commence g\u00e9n\u00e9ralement par un titre. Les \u00e9l\u00e9ments `<section>` non \u00e9tiquet\u00e9s sont s\u00e9mantiquement \u00e9quivalents \u00e0 l'\u00e9l\u00e9ment `<div>`, mais cela ne signifie pas que vous pouvez toujours les utiliser de mani\u00e8re interchangeable. L'\u00e9l\u00e9ment `div` est surtout utilis\u00e9 \u00e0 des fins de style ou pour faciliter l'\u00e9criture de scripts. En revanche, l'\u00e9l\u00e9ment `<section>` marque les groupes th\u00e9matiques de votre page, comme les diff\u00e9rentes sections d'une page d'accueil, comme illustr\u00e9 dans l'[exemple 2](#exemple-2). Il est vrai que vous pourriez utiliser `div` ou aucun wrapper pour obtenir le m\u00eame r\u00e9sultat, mais l'\u00e9l\u00e9ment `<section>` pr\u00e9sente deux avantages majeurs :\r\n\r\n- Vous pouvez utiliser le s\u00e9lecteur d'\u00e9l\u00e9ments de section en CSS pour d\u00e9finir des r\u00e8gles de style g\u00e9n\u00e9rales pour ces \u00e9l\u00e9ments.\r\n- Vous pouvez transformer les \u00e9l\u00e9ments de la section en points de rep\u00e8re en les \u00e9tiquetant, comme le montre l'[exemple 4](#exemple-4).\r\n\r\nLes sections de l'[exemple 3](#exemple-3) n'ont pas de nom accessible fourni via `aria-labelledby` ou `aria-label` parce qu'elles ne sont pas assez importantes pour \u00eatre promues en points de rep\u00e8re. D\u00e8s que `<section>` a un nom accessible, son r\u00f4le passe de `generic` \u00e0 `region`. Le <a href=\"https://www.w3.org/TR/wai-aria/#region\" target=\"_blank\">r\u00f4le de r\u00e9gion</a> repr\u00e9sente un r\u00f4le de rep\u00e8re g\u00e9n\u00e9rique que vous pouvez utiliser pour promouvoir un \u00e9l\u00e9ment g\u00e9n\u00e9rique en rep\u00e8re. Utilisez ce r\u00f4le avec parcimonie ; limitez-le aux r\u00e9gions de votre page que tes utilisateurs jugent suffisamment importantes pour pouvoir y naviguer directement et les lister dans un r\u00e9sum\u00e9 de la page. Utilisez `aria-labelledby` ou `aria-label` pour d\u00e9crire l'objectif de la r\u00e9gion.\r\n\r\nVous ne devez utiliser un point de rep\u00e8re g\u00e9n\u00e9rique que lorsqu'aucun autre point de rep\u00e8re, tel que `navigation` ou `complementary`, ne peut \u00eatre utilis\u00e9. L'[exemple 1](#exemple-1) utilise region pour permettre aux utilisateurs d'acc\u00e9der rapidement au r\u00e9sum\u00e9 d'un article de blog avant d'en lire l'int\u00e9gralit\u00e9.\r\n\r\nVous pouvez aussi utiliser le r\u00f4le `region` pour identifier les zones de d\u00e9filement . Les utilisateurs de clavier ne peuvent pas interagir avec le contenu d\u00e9filant dans aucun navigateur \u00e0 l'exception de Firefox. Vous pouvez y rem\u00e9dier en ajoutant `tabindex=\"0\"` \u00e0 l'\u00e9l\u00e9ment parent qui contient le contenu. Cela le rend interactif, ce qui signifie qu'il a \u00e9galement besoin d'un r\u00f4le et d'un nom accessibles. Le r\u00f4le `region` peut \u00eatre une option, comme le montre l'[exemple 2](#exemple-2). Petite remarque : en g\u00e9n\u00e9ral, il n'est pas bon d'imbriquer dans des \u00e9l\u00e9ments interactifs (par exemple, un `<button>` \u00e0 l'int\u00e9rieur d'un `<a>`), mais il est possible de placer des \u00e9l\u00e9ments interactifs dans des zones de d\u00e9filement et de mise au point.\r\n\r\nUne r\u00e9gion (`<section>` ou `<div role=\"section\">`) commence g\u00e9n\u00e9ralement par un titre. En r\u00e8gle g\u00e9n\u00e9rale, l'\u00e9l\u00e9ment n'est appropri\u00e9 que si son contenu est explicitement list\u00e9 dans le plan du document. Lorsque vous ave besoin d'un \u00e9l\u00e9ment uniquement \u00e0 des fins de style ou pour faciliter l'\u00e9criture de scripts, utilise plut\u00f4t un simple `<div>`.\r\n\r\nIl est possible d'imbriquer les \u00e9l\u00e9ments `<section>`, surtout si la page comporte des chapitres et de nombreux sous-chapitres. Si vous dev continuer \u00e0 utiliser les `h1` comme titres de toutes les sections, comme le montre l'[exemple 7](#exemple-7), il se passe quelque chose de particulier qui ne se produit g\u00e9n\u00e9ralement pas dans la pratique mais qu'il est toujours bon de savoir : la taille de la police de chaque titre diminue au fur et \u00e0 mesure que vous les imbriquez plus profond\u00e9ment.\r\n\r\n**<span id=\"exemple-7\">Exemple&nbsp;7</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Plusieurs sections imbriqu\u00e9es, chacune commen\u00e7ant par un `<h1>`**\r\n\r\n```html\r\n<h1>Titre niveau 1</h1>\r\n\r\n<section>\r\n  <h1>Titre niveau 2</h1>\r\n\r\n  <section>\r\n    <h1>Titre niveau 3</h1>\r\n\r\n    <section>\r\n      <h1>Titre niveau 4</h1>\r\n\r\n      <section>\r\n        <h1>Titre niveau 5</h1>\r\n\r\n        <section>\r\n          <h1>Titre niveau 6</h1>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</section>\r\n```\r\n\r\nM\u00eame si les styles par d\u00e9faut des navigateurs peuvent donner une impression hi\u00e9rarchique, cela ne refl\u00e8te pas la structure s\u00e9mantique r\u00e9elle. \u00c9vite d\u2019imbriquer plusieurs titres de niveau `<h1>` : un seul `<h1>` par page suffit, suivi logiquement par des `<h2>`, `<h3>`, etc., en fonction de la profondeur de l'information.\r\n\r\n## L'\u00e9l\u00e9ment `aside`\r\n\r\nVous pouvez utilise l'\u00e9l\u00e9ment `aside` pour marquer le contenu tangentiellement li\u00e9 au contenu principal voisin qui pourrait \u00eatre consid\u00e9r\u00e9 comme s\u00e9par\u00e9, comme les citations (`cite`) tir\u00e9es, les barres lat\u00e9rales, la publicit\u00e9 ou les liens connexes, comme le montre l'[exemple 5](#exemple-5).\r\n\r\nSi vous effectuez des tests avec un lecteur d'\u00e9cran, il est bon de savoir que le r\u00f4le implicite de l'\u00e9l\u00e9ment `aside` est le suivant `complementary`.\r\n\r\n## L'\u00e9l\u00e9ment `article`\r\n\r\nVous pouvez utiliser l'\u00e9l\u00e9ment `article` pour n'importe quel groupe de contenu que vous pourriez en th\u00e9orie distribuer de fa\u00e7on ind\u00e9pendante ou r\u00e9utiliser ailleurs, et cela aurait toujours du sens. Un exemple classique est un article d'actualit\u00e9 ou un billet de blog que vous pouvez lire sur un site Web ou dans un lecteur de flux RSS.\r\n\r\nCependant, la d\u00e9finition de l'\u00e9l\u00e9ment `article` n'est pas un article de presse litt\u00e9ral mais un \u00e9l\u00e9ment particulier ou une chose s\u00e9par\u00e9e. Un article peut \u00eatre un article de forum, un commentaire sur un article de blog (article imbriqu\u00e9 dans un article), un widget interactif, un produit list\u00e9 sur un site de commerce \u00e9lectronique, ou toute autre composition compl\u00e8te ou autonome dans un document. L'\u00e9l\u00e9ment `article` peut \u00eatre utile pour plusieurs raisons :\r\n\r\n- Vous pouvez utiliser le s\u00e9lecteur d'\u00e9l\u00e9ment d'article en CSS pour d\u00e9finir des r\u00e8gles g\u00e9n\u00e9rales de style pour ces \u00e9l\u00e9ments.\r\n- Les logiciels tiers, par exemple les lecteurs de flux RSS ou le mode lecteur des navigateurs, peuve extraire le contenu envelopp\u00e9 dans la balise `article` et l'afficher diff\u00e9remment.\r\n- Les utilisateurs de lecteurs d'\u00e9cran peuvent utiliser des raccourcis pour acc\u00e9der aux articles, mais la prise en charge de l'\u00e9l\u00e9ment article par les lecteurs d'\u00e9cran est diverse car chaque logiciel applique des heuristiques diff\u00e9rentes, comme vous pouvez le voir dans le [tableau 1](#table-1).\r\n\r\n<table id=\"table-1\">\r\n  <caption>Test du lecteur d'\u00e9cran : L'\u00e9l\u00e9ment de l'article est-il expos\u00e9 ?</caption>\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Type</th>\r\n      <th scope=\"col\">NVDA</th>\r\n      <th scope=\"col\">VO (macOS)</th>\r\n      <th scope=\"col\">Narrateur</th>\r\n      <th scope=\"col\">VO (iOS)</th>\r\n      <th scope=\"col\">TalkBack</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>Curseur virtuel/balayage</td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Liste des points de rep\u00e8re </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> oui </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Liste d'articles personnalis\u00e9e </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Touche de navigation rapide par d\u00e9faut </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nNVDA n'annonce pas le r\u00f4le de l'article lorsque vous utilisez les touches fl\u00e9ch\u00e9e ou que vous le r\u00e9pertoried dans la liste des \u00e9l\u00e9ments, mais vous pouvez l'activer dans les param\u00e8tres de formatage du document et ajouter un raccourci de navigation rapide personnalis\u00e9 pour la navigation dans les articles.\r\n\r\nJAWS annonce les articles labellis\u00e9s et non labellis\u00e9s lorsque vous utilisez les touches fl\u00e9ch\u00e9es ou la touche `O` pour naviguer. Ils ne sont pas inclus dans la liste des points de rep\u00e8re, mais vous pouvez lister tous les articles en appuyant sur `Ctrl` + `Insert` + `O`.\r\n\r\nVoiceOver sur macOS annonce les articles \u00e9tiquet\u00e9s et non \u00e9tiquet\u00e9s lorsque vous utilisez le curseur virtuel. Il ajoute \u00e9galement une nouvelle liste d'articles au `rotor`. La liste des points de rep\u00e8re dans le `rotor` ne comprend pas d'articles.\r\n\r\nLe narrateur n'annonce pas le r\u00f4le de l'article et ne le mentionne pas dans la liste des \u00e9l\u00e9ments.\r\n\r\nVoiceOver sur iOS annonce les articles lorsque vous s\u00e9lectionnez des \u00e9l\u00e9ments contenus ou que vous effectuez un swipe. Il inclut les articles dans la liste des points de rep\u00e8re et ajoute une nouvelle liste d'articles au `rotor`.\r\n\r\nTalkBack n'annonce pas les articles lorsque vous s\u00e9lectionnez des \u00e9l\u00e9ments contenus ou que vous faites glisser le curseur, mais les articles \u00e9tiquet\u00e9s et non \u00e9tiquet\u00e9s sont accessibles par le biais de la navigation par points de rep\u00e8re.\r\n\r\n## Les \u00e9l\u00e9ments listes `ul` - `ol`\r\n\r\nVous pouvez utiliser des listes ordonn\u00e9es ou non ordonn\u00e9es pour regrouper des \u00e9l\u00e9ments visuellement et s\u00e9mantiquement. Outre l'unit\u00e9 visuelle qu'elles forment, les listes offrent aux utilisateurs de nombreuses fonctionnalit\u00e9s suppl\u00e9mentaires :\r\n\r\n- Un lecteur d'\u00e9cran peut annoncer le nombre total d'\u00e9l\u00e9ments lorsque l'utilisateur trouve la liste. \r\n- Un lecteur d'\u00e9cran peut annoncer l'indice de l'\u00e9l\u00e9ment en cours (par exemple, \"\u00e9l\u00e9ment de la liste, deux sur quatre\").\r\n- Lorsque vous acc\u00e8dez pour la premi\u00e8re fois \u00e0 un \u00e9l\u00e9ment de la liste, un lecteur d'\u00e9cran peut annoncer que cet \u00e9l\u00e9ment appartient \u00e0 une liste de n \u00e9l\u00e9ments au total.\r\n- Les utilisateurs peuvent utiliser des raccourcis pour passer d'une liste \u00e0 l'autre ou d'un \u00e9l\u00e9ment de liste \u00e0 l'autre.\r\n- Les utilisateurs peuvent utiliser des raccourcis pour r\u00e9pertorier toutes les listes d'une page et y acc\u00e9der directement.\r\n\r\nVous ppouvez aussi utiliser les listes de d\u00e9finitions (`dl`), mais sachez que ce que les lecteurs d'\u00e9cran annoncent et la quantit\u00e9 qu'ils annoncent varient d'un <a href=\"https://a11ysupport.io/tech/html/dl_element\" target=\"_blank\">lecteur d'\u00e9cran \u00e0 l'autre</a>.\r\n\r\nUtilisez la balise `<ol>` lorsque l'ordre de ta liste d'\u00e9l\u00e9ments est importan et `<ul>` lorsqu'il ne l'est pas. Dans l'[exemple 6](#exemple-6), vous voir la recette d'un caf\u00e9 au lait glac\u00e9. Dans ce cas, les ingr\u00e9dients sont \u00e9num\u00e9r\u00e9s dans une liste non ordonn\u00e9e parce qu'il importe peu que vous \u00e9num\u00e8rez d'abord la glace ou le lait. La recette est une liste ordonn\u00e9e parce que l'ordre correct des \u00e9tapes est important.\r\n\r\n\r\n\r\n\r\n",
      "created": "2025-06-11T12:34:14.887102",
      "updated": "2025-06-11T14:56:29.508840",
      "meta_description": "Bien structurer son HTML avec des rep\u00e8res et balises s\u00e9mantiques am\u00e9liore l'accessibilit\u00e9, la navigation et l\u2019exp\u00e9rience utilisateur.",
      "status_id": 3
    }
  ],
  "tag": [
    {
      "id": 1,
      "name": "html",
      "slug": "html"
    },
    {
      "id": 2,
      "name": "accessibilit\u00e9",
      "slug": "accessibilite"
    },
    {
      "id": 3,
      "name": "seo",
      "slug": "seo"
    },
    {
      "id": 4,
      "name": "ux",
      "slug": "ux"
    },
    {
      "id": 5,
      "name": "django",
      "slug": "django"
    },
    {
      "id": 6,
      "name": "python",
      "slug": "python"
    },
    {
      "id": 7,
      "name": "d\u00e9veloppement",
      "slug": "developpement"
    },
    {
      "id": 8,
      "name": "cybers\u00e9curit\u00e9",
      "slug": "cybersecurite"
    },
    {
      "id": 9,
      "name": "flask",
      "slug": "flask"
    },
    {
      "id": 10,
      "name": "SQLAlchemy",
      "slug": "sqlalchemy"
    }
  ],
  "posttag": [
    {
      "id": 65,
      "posts_id": 1,
      "tags_id": 1
    },
    {
      "id": 66,
      "posts_id": 1,
      "tags_id": 2
    },
    {
      "id": 67,
      "posts_id": 1,
      "tags_id": 3
    },
    {
      "id": 68,
      "posts_id": 1,
      "tags_id": 4
    },
    {
      "id": 69,
      "posts_id": 2,
      "tags_id": 5
    },
    {
      "id": 70,
      "posts_id": 2,
      "tags_id": 6
    },
    {
      "id": 71,
      "posts_id": 2,
      "tags_id": 7
    },
    {
      "id": 72,
      "posts_id": 2,
      "tags_id": 8
    },
    {
      "id": 73,
      "posts_id": 3,
      "tags_id": 7
    },
    {
      "id": 74,
      "posts_id": 4,
      "tags_id": 7
    },
    {
      "id": 76,
      "posts_id": 6,
      "tags_id": 7
    },
    {
      "id": 77,
      "posts_id": 5,
      "tags_id": 7
    },
    {
      "id": 130,
      "posts_id": 7,
      "tags_id": 1
    },
    {
      "id": 131,
      "posts_id": 7,
      "tags_id": 2
    },
    {
      "id": 132,
      "posts_id": 7,
      "tags_id": 3
    },
    {
      "id": 133,
      "posts_id": 7,
      "tags_id": 4
    },
    {
      "id": 153,
      "posts_id": 9,
      "tags_id": 1
    },
    {
      "id": 154,
      "posts_id": 9,
      "tags_id": 2
    },
    {
      "id": 155,
      "posts_id": 9,
      "tags_id": 4
    },
    {
      "id": 168,
      "posts_id": 10,
      "tags_id": 1
    },
    {
      "id": 169,
      "posts_id": 10,
      "tags_id": 2
    },
    {
      "id": 170,
      "posts_id": 10,
      "tags_id": 3
    },
    {
      "id": 171,
      "posts_id": 10,
      "tags_id": 4
    },
    {
      "id": 222,
      "posts_id": 11,
      "tags_id": 1
    },
    {
      "id": 223,
      "posts_id": 11,
      "tags_id": 2
    },
    {
      "id": 224,
      "posts_id": 11,
      "tags_id": 3
    },
    {
      "id": 225,
      "posts_id": 11,
      "tags_id": 4
    },
    {
      "id": 332,
      "posts_id": 13,
      "tags_id": 6
    },
    {
      "id": 333,
      "posts_id": 13,
      "tags_id": 7
    },
    {
      "id": 368,
      "posts_id": 14,
      "tags_id": 6
    },
    {
      "id": 369,
      "posts_id": 14,
      "tags_id": 7
    },
    {
      "id": 370,
      "posts_id": 14,
      "tags_id": 9
    },
    {
      "id": 371,
      "posts_id": 8,
      "tags_id": 6
    },
    {
      "id": 372,
      "posts_id": 8,
      "tags_id": 7
    },
    {
      "id": 373,
      "posts_id": 8,
      "tags_id": 9
    },
    {
      "id": 402,
      "posts_id": 15,
      "tags_id": 1
    },
    {
      "id": 403,
      "posts_id": 15,
      "tags_id": 2
    },
    {
      "id": 404,
      "posts_id": 15,
      "tags_id": 3
    },
    {
      "id": 405,
      "posts_id": 15,
      "tags_id": 4
    },
    {
      "id": 469,
      "posts_id": 17,
      "tags_id": 1
    },
    {
      "id": 470,
      "posts_id": 17,
      "tags_id": 2
    },
    {
      "id": 471,
      "posts_id": 17,
      "tags_id": 3
    },
    {
      "id": 472,
      "posts_id": 17,
      "tags_id": 4
    },
    {
      "id": 517,
      "posts_id": 16,
      "tags_id": 6
    },
    {
      "id": 518,
      "posts_id": 16,
      "tags_id": 7
    },
    {
      "id": 519,
      "posts_id": 16,
      "tags_id": 9
    },
    {
      "id": 520,
      "posts_id": 16,
      "tags_id": 10
    },
    {
      "id": 577,
      "posts_id": 18,
      "tags_id": 1
    },
    {
      "id": 578,
      "posts_id": 18,
      "tags_id": 2
    },
    {
      "id": 579,
      "posts_id": 18,
      "tags_id": 3
    },
    {
      "id": 580,
      "posts_id": 18,
      "tags_id": 4
    },
    {
      "id": 581,
      "posts_id": 12,
      "tags_id": 1
    },
    {
      "id": 582,
      "posts_id": 12,
      "tags_id": 2
    },
    {
      "id": 583,
      "posts_id": 12,
      "tags_id": 3
    },
    {
      "id": 584,
      "posts_id": 12,
      "tags_id": 4
    }
  ],
  "status": [
    {
      "id": 1,
      "name": "brouillon"
    },
    {
      "id": 2,
      "name": "offline"
    },
    {
      "id": 3,
      "name": "online"
    }
  ]
}