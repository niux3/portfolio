{
  "post": [
    {
      "id": 1,
      "title": "D\u00e9finir le langage naturel",
      "slug": "definir-le-langage-naturel",
      "body": "Si une page ne contient pas de d\u00e9finition explicite du langage naturel dans lequel elle est r\u00e9dig\u00e9e, les logiciels risquent de ne pas pouvoir traduire correctement le contenu. Le terme &laquo;&nbsp;langue naturelle&nbsp;&raquo; fait r\u00e9f\u00e9rence \u00e0 la langue utilis\u00e9e pour le contenu de la page, et non au langage de programmation. Ce manque d'information peut entra\u00eener des traductions erron\u00e9es, une mauvaise mise en forme et un contenu difficile \u00e0 comprendre pour les utilisateurs de lecteurs d'\u00e9cran.\r\n\r\nVous pouvez d\u00e9finir la langue naturelle d'une page en utilisant l'attribut `lang` sur l'\u00e9l\u00e9ment `<html>`.\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Le fran\u00e7ais d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n</html>\r\n```\r\n\r\nVous pouvez \u00e9galement d\u00e9finir un dialecte sp\u00e9cifique de la langue de base.\r\n<br>**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Le fran\u00e7ais de France d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr-FR\">\r\n</html>\r\n```\r\n\r\nL'attribut lang est global, ce qui signifie que vous pouvez l'utiliser sur n'importe quel \u00e9l\u00e9ment, bien qu'il puisse ne pas affecter certains d'entre eux. Il peut \u00eatre utile si une page est r\u00e9dig\u00e9e dans une langue mais contient des passages de texte ou m\u00eame des mots isol\u00e9s dans d'autres langues.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Japonais translitt\u00e9r\u00e9 en \u00e9criture latine utilis\u00e9 sur une page \u00e9crite en fran\u00e7ais.**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n    <head></head>\r\n    <body>\r\n        <p>The Wind-Up Bird Chronicle (<span lang=\"ja-Latn\">Nejimakidori Kuronikuru </span>) is a novel published in 1994 by Japanese author Haruki Murakami.</p>\r\n    </body>\r\n</html>\r\n```\r\n\r\nUtilisez la pseudoclasse `:lang()` pour ajuster la typographie et la mise en page pour des langues sp\u00e9cifiques.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;S\u00e9lection de tous les \u00e9l\u00e9ments en langue serbe**\r\n\r\n```css\r\n:lang(sr) {\r\n    font-family: 'Cyrillic font', sans-serif;\r\n}\r\n```\r\n\r\nLes technologies d'assistance et autres logiciels peuvent ne pas \u00eatre en mesure de d\u00e9terminer automatiquement la langue naturelle d'une page. Certaines fonctions du HTML et des feuilles de style en cascade (CSS) s'appuient sur ces informations pour aider \u00e0 localiser le contenu et offrir une excellente exp\u00e9rience utilisateur.\r\n\r\nVous devez d\u00e9finir la langue de chaque page de mani\u00e8re programmatique et explicite en utilisant l'attribut lang sur l'\u00e9l\u00e9ment `<html>`, comme le montre [l'exemple 1](#exemple-1). Pour les passages de texte \u00e9crits dans une langue diff\u00e9rente de la langue principale de la page, vous pouvez \u00e9galement utiliser l'attribut, comme le montre [l'exemple 3](#exemple-3). Cela permet aux lecteurs d'\u00e9cran d'am\u00e9liorer la prononciation en modifiant les profils vocaux en fonction de certains mots ou phrases.\r\n\r\nUtilisez cette fonctionnalit\u00e9 avec parcimonie car le changement de profil vocal peut \u00eatre g\u00eanant en interrompant le flux de lecture. Pour les mots \u00e9trangers bien \u00e9tablis, ce n'est pas forc\u00e9ment n\u00e9cessaire. Des exemples en allemand sont des mots anglais comme &laquo;&nbsp;Download&nbsp;&raquo;, &laquo;&nbsp;Workshop&nbsp;&raquo; ou &laquo;&nbsp;Link&nbsp;&raquo;.\r\n\r\nLa valeur de l'attribut `lang` doit \u00eatre une <a href=\"https://datatracker.ietf.org/doc/html/rfc5646\" target=\"_blank\">balise de langue BCP 47</a> valide, compos\u00e9e d'une ou plusieurs balises secondaires. Un *subtag* est une s\u00e9quence de caract\u00e8res alphanum\u00e9riques distingu\u00e9s et s\u00e9par\u00e9s des autres subtags par un trait d'union.\r\n\r\nLa *sous-\u00e9tiquette* de langue est un code de 2 ou 3 caract\u00e8res qui d\u00e9finit la langue principale : par exemple, `en` pour l'anglais, `de` pour l'allemand ou `fr` pour le fran\u00e7ais, comme le montre [l'exemple 5](#exemple-5).\r\n\r\n**<span id=\"exemple-5\">Exemple 5</span>&nbsp;&ndash;&nbsp;L'espagnol d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<html lang=\"es\"></html>\r\n```\r\n\r\n## Sous-\u00e9tiquettes d'\u00e9criture\r\nLa sous-\u00e9tiquette d'\u00e9criture facultative est un code de 4 caract\u00e8res qui d\u00e9finit le syst\u00e8me d'\u00e9criture utilis\u00e9 pour la langue, comme le montre [l'exemple 6](#exemple-6).\r\n\r\n**<span id=\"exemple-6\">Exemple 6</span>&nbsp;&ndash;&nbsp;Un nom en \u00e9criture cyrillique \u00e0 c\u00f4t\u00e9 du m\u00eame nom en \u00e9criture latine marqu\u00e9 comme tel**\r\n\r\n```html\r\n\u041d\u0438\u043a\u043e\u043b\u0430 \u0408\u043e\u043a\u0438\u045b (<span lang=\"sr-Latn\">Nikola Joki\u0107</span>).\r\n```\r\n\r\nLa *sous-\u00e9tiquette* facultative de r\u00e9gion est g\u00e9n\u00e9ralement un code de pays \u00e0 2 caract\u00e8res \u00e9crit en majuscules et d\u00e9finit un dialecte de la langue de base, comme le montre [l'exemple 7](#exemple-7).\r\n\r\n**<span id=\"exemple-7\">Exemple 7</span>&nbsp;&ndash;&nbsp;L'allemand autrichien d\u00e9fini comme la langue naturelle de la page**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"de-AT\">\r\n</html>\r\n```\r\nVous devez utiliser le code de langue primaire \u00e0 deux caract\u00e8res et n'ajouter des balises secondaires de r\u00e9gion que lorsqu'il est n\u00e9cessaire de diff\u00e9rencier le contenu dans diff\u00e9rents dialectes qui peuvent ne pas \u00eatre mutuellement compr\u00e9hensibles. Pour les utilisateurs de lecteurs d'\u00e9cran, le fait de ne pas ajouter de sous-tags de r\u00e9gion ne devrait pas faire de diff\u00e9rence car ils sont g\u00e9n\u00e9ralement ignor\u00e9s par le logiciel.\r\n\r\nVous pouvez trouver une liste de toutes les \u00e9tiquettes et sous-\u00e9tiquettes dans la <a href=\"https://r12a.github.io/app-subtags/\" target=\"_blank\">liste des sous-\u00e9tiquettes de la langue BCP 47</a>.\r\n\r\n## Les avantages\r\nL'attribut `lang` est puissant et affecte de nombreux aspects de l'accessibilit\u00e9 du web et de l'exp\u00e9rience utilisateur en g\u00e9n\u00e9ral. Voici ses principaux avantages :\r\n\r\n### La technologie d'assistance\r\nLes synth\u00e9tiseurs vocaux qui prennent en charge plusieurs langues adaptent leur prononciation et leur syntaxe \u00e0 la langue de la page, pronon\u00e7ant le texte avec l'accent et la prononciation appropri\u00e9s.\r\n\r\nPour une page au contenu allemand dont la langue est r\u00e9gl\u00e9e sur l'anglais (`lang=\"en\"`), le logiciel de lecture d'\u00e9cran peut choisir un profil de voix synth\u00e9tique anglais et lire le texte allemand avec une prononciation anglaise. Si vous ne d\u00e9finissez aucune langue, les lecteurs d'\u00e9cran risquent de se rabattre sur les param\u00e8tres par d\u00e9faut du syst\u00e8me de l'utilisateur, ce qui peut ne pas \u00eatre appropri\u00e9. Le r\u00e9sultat peut \u00eatre difficile \u00e0 comprendre, confus ou m\u00eame compl\u00e8tement erron\u00e9.\r\n\r\nTous les lecteurs d'\u00e9cran ne prennent pas en charge de nombreuses langues. Certains logiciels changent de langue automatiquement, tandis que pour d'autres, les utilisateurs doivent installer et configurer manuellement des voix ou des packs de langues.\r\n\r\nLa d\u00e9finition de l'attribut permet \u00e9galement au logiciel de traduction en braille d'optimiser la sortie et de l'emp\u00eacher de cr\u00e9er par erreur des <a href=\"https://www.rnib.org.uk/living-with-sight-loss/education-and-learning/braille-tactile-codes/contracted-grade-2-braille-explained/\" target=\"_blank\">contractions en braille de grade 2</a>.\r\n\r\n### La traduction\r\nLes outils de traduction comme Google Translate utilisent les informations de l'attribut `lang` pour traduire le contenu de la page. Bien que ce type de logiciel soit g\u00e9n\u00e9ralement bon pour d\u00e9tecter automatiquement la langue de la page, un d\u00e9calage entre la langue r\u00e9elle et la langue d\u00e9finie peut donner lieu \u00e0 des <a href=\"https://www.matuzo.at/blog/lang-attribute/\" target=\"_blank\">traductions inattendues et non souhait\u00e9es</a>.\r\n\r\n### Les citations\r\nLes guillemets peuvent changer en fonction de la langue naturelle de la page. Par exemple, l'anglais utilise des guillemets diff\u00e9rents de ceux de l'allemand ou du fran\u00e7ais, et la bonne d\u00e9finition de lang aide les navigateurs \u00e0 choisir les glyphes appropri\u00e9s, comme l'illustrent les exemples [8](#exemple-8), [9](#exemple-9) et [10](#exemple-10).\r\n\r\n**<span id=\"exemple-8\">Exemple&nbsp;8</span>&nbsp;&ndash;&nbsp;Guillemets automatiques \u00e0 l'aide de l'\u00e9l\u00e9ment `<q>` en anglais**\r\n\r\n```html\r\n<p lang=\"en\">\r\n    <q>A quote in English.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \"A quote in English.\" -->\r\n```\r\n**<span id=\"exemple-9\">Exemple&nbsp;9</span>&nbsp;&ndash;&nbsp;Guillemets automatiques \u00e0 l'aide de l'\u00e9l\u00e9ment `<q>` en allemand**\r\n\r\n```html\r\n<p lang=\"de\">\r\n<q>Ein Zitat auf Deutsch.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \u201eEin Zitat auf Deutsch.\" -->\r\n```\r\n**<span id=\"exemple-10\">Exemple&nbsp;10</span>&nbsp;&ndash;&nbsp;Guillemets automatiques utilisant l'\u00e9l\u00e9ment `<q>` en fran\u00e7ais**\r\n\r\n```html\r\n<p lang=\"fr\">\r\n<q>Une citation en fran\u00e7ais.</q>\r\n</p>\r\n<!-- R\u00e9sultat : \u00ab Une citation en fran\u00e7ais. \u00bb -->\r\n```\r\n### La c\u00e9sure\r\nL'attribut `lang` peut affecter <a href=\"https://developer.mozilla.org/fr/docs/Web/CSS/hyphens\" target=\"_blank\">la c\u00e9sure</a> dans les CSS. Voir l'[exemple&nbsp;11](#exemple-11).\r\n\r\n**<span id=\"exemple-11\">Exemple&nbsp;11</span>&nbsp;&ndash;&nbsp;Un paragraphe avec une largeur maximale de 28 caract\u00e8res et une c\u00e9sure activ\u00e9e**\r\n\r\n```css\r\np {\r\n    max-width: 28ch;\r\n    hyphens: auto;\r\n}\r\n```\r\nDans les exemples&nbsp;[12](#exemple-12), [13](#exemple-13) et [14](#exemple-14), vous pouvez voir comment le m\u00eame paragraphe \u00e9crit en allemand, avec une valeur d'attribut lang diff\u00e9rente, est rendu diff\u00e9remment dans Google Chrome. Les mots ne s'interrompent pas du tout ou s'interrompent \u00e0 des positions diff\u00e9rentes. Seuls le premier et le deuxi\u00e8me exemples sont corrects. Il convient de noter que les navigateurs se comportent diff\u00e9remment.\r\n\r\n**<span id=\"exemple-12\">Exemple&nbsp;12</span>&nbsp;&ndash;&nbsp;Texte allemand correctement coup\u00e9 par un trait d'union dans un paragraphe d\u00e9fini comme allemand**\r\n\r\n```html\r\n<p lang=\"de\">\r\nWeit hinten, hinter den Wortbergen, fern der L\u00e4nder Vokalien und Konsonantien\r\nleben die Blindtexte. Abgeschieden wohnen sie in Buchstabhausen an der K\u00fcste\r\ndes Semantik, eines gro\u00dfen Sprachozeans. Ein kleines B\u00e4chlein namens Duden\r\nflie\u00dft durch ihren Ort und versorgt sie mit den n\u00f6tigen Regelialien.\r\n</p>\r\n<!-- R\u00e9sultat :\r\nWeit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und Konso-\r\n     nantien leben die Blindtexte. Abge-\r\n     schieden wohnen sie in Buchstab-\r\n     hausen an der K\u00fcste des Semantik,\r\n     eines gro\u00dfen Sprachozeans.\r\n     -->\r\n```\r\n**<span id=\"exemple-13\">Exemple&nbsp;13</span>&nbsp;&ndash;&nbsp;Pas de c\u00e9sure du texte allemand dans un paragraphe d\u00e9fini comme anglais**\r\n\r\n```html\r\n     <p lang=\"en\">\r\n     Weit hinten,\u2026\r\n     </p>\r\n     <!-- R\u00e9sultat :\r\n     Weit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und\r\n     Konsonantien leben die Blindtexte.\r\n     Abgeschieden wohnen sie in\r\n     Buchstabhausen an der K\u00fcste des\r\n     Semantik, eines gro\u00dfen\r\n     Sprachozeans.\r\n     -->\r\n```\r\n**<span id=\"exemple-14\">Exemple&nbsp;14</span>&nbsp;&ndash;&nbsp;Trait d'union incorrect du texte allemand dans un paragraphe d\u00e9fini comme fran\u00e7ais**\r\n\r\n```html\r\n     <p lang=\"fr\">\r\n     Weit hinten,\u2026\r\n     </p>\r\n     <!-- R\u00e9sultat :\r\n     Weit hinten, hinter den Wortbergen,\r\n     fern der L\u00e4nder Vokalien und Konso-\r\n     nantien leben die Blindtexte. Abges-\r\n     chieden wohnen sie in Buchstabhau-\r\n     sen an der K\u00fcste des Semantik, eines\r\n     gro\u00dfen Sprachozeans.\r\n     -->\r\n```\r\n### S\u00e9lection des polices\r\n\r\nLes navigateurs peuvent s\u00e9lectionner <a href=\"https://www.w3.org/International/questions/qa-lang-why#fonts\" target=\"_blank\">des polices adapt\u00e9es</a> \u00e0 la langue pour afficher les d\u00e9tails des caract\u00e8res id\u00e9ographiques qui varient d'une langue \u00e0 l'autre, tels que le chinois, le japonais et le cor\u00e9en (connus sous le nom de \"langues CJK\").\r\n\r\n### Optimisation des moteurs de recherche (SEO)\r\n\r\nUne bonne d\u00e9finition du langage naturel peut am\u00e9liorer la qualit\u00e9 des r\u00e9sultats de recherche en aidant les moteurs de recherche \u00e0 la localisation.\r\n\r\n### Contr\u00f4les de formulaires\r\n\r\nDans certains navigateurs, l'attribut `lang` affecte \u00e9galement la mise en forme des contr\u00f4les de formulaire. Par exemple, <a href=\"https://www.mozilla.org/fr/firefox/new/\" target=\"_blank\">Firefox</a> affiche les bons caract\u00e8res d\u00e9cimaux dans les champs de saisie des nombres en fonction de la langue.\r\n",
      "created": "2025-05-29T12:47:21.648027",
      "updated": "2025-06-01T10:32:12.828365",
      "meta_description": "Am\u00e9liorez l'exp\u00e9rience utilisateur et le SEO en d\u00e9finissant la langue de votre page web. Exemples HTML/CSS inclus pour tout comprendre !",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 2,
      "title": "Comment Django contribue \u00e0 s\u00e9curiser vos applications web ?",
      "slug": "comment-django-contribue-a-securiser-vos-applications-web",
      "body": "L\u2019**OWASP** (*Open Web Application Security Project*) est une organisation \u00e0 but non lucratif qui \u0153uvre pour am\u00e9liorer la s\u00e9curit\u00e9 des applications web. Son c\u00e9l\u00e8bre classement **OWASP Top 10**, mis \u00e0 jour en 2021, identifie les vuln\u00e9rabilit\u00e9s les plus critiques affectant les applications modernes, sur la base d\u2019analyses portant sur plus de 500 000 applications web.\r\n\r\nDans cet article, nous nous int\u00e9resserons \u00e0 la mani\u00e8re dont **Django**, le framework web Python, permet de mitiger ces menaces par ses m\u00e9canismes int\u00e9gr\u00e9s et sa philosophie de d\u00e9veloppement s\u00e9curis\u00e9.\r\n\r\n## D\u00e9faillances du contr\u00f4le d\u2019acc\u00e8s\r\nLes d\u00e9faillances du contr\u00f4le d\u2019acc\u00e8s repr\u00e9sentent l'une des vuln\u00e9rabilit\u00e9s les plus critiques identifi\u00e9es par l\u2019OWASP. Elles se produisent lorsque des utilisateurs peuvent acc\u00e9der \u00e0 des ressources ou effectuer des actions qui devraient leur \u00eatre interdites \u2014 qu\u2019il s\u2019agisse de consulter des donn\u00e9es sensibles, de modifier le profil d\u2019un autre utilisateur, ou d\u2019acc\u00e9der \u00e0 des fonctionnalit\u00e9s r\u00e9serv\u00e9es aux administrateurs.\r\n\r\n### Comment Django se positionne-t-il face \u00e0 cette menace ?\r\n**Django propose plusieurs m\u00e9canismes robustes pour mettre en \u0153uvre un contr\u00f4le d\u2019acc\u00e8s efficace :**\r\n\r\n- **Les mixins `LoginRequiredMixin` et `PermissionRequiredMixin`** permettent de restreindre facilement l\u2019acc\u00e8s aux vues bas\u00e9es sur les classes, en imposant l\u2019authentification ou des permissions sp\u00e9cifiques.\r\n- **Le syst\u00e8me de permissions int\u00e9gr\u00e9** offre une granularit\u00e9 fine : chaque mod\u00e8le peut \u00eatre associ\u00e9 \u00e0 des permissions de lecture, d\u2019\u00e9criture ou de suppression. Il est \u00e9galement possible de d\u00e9finir des permissions personnalis\u00e9es selon les besoins m\u00e9tier.\r\n- **Les d\u00e9corateurs `@login_required` et `@permission_required`** peuvent \u00eatre utilis\u00e9s sur les vues fonctionnelles pour un contr\u00f4le simple et explicite.\r\n- **Les objets `request.user` et `request.user.has_perm()`** permettent de v\u00e9rifier dynamiquement, c\u00f4t\u00e9 serveur, si l\u2019utilisateur dispose bien des autorisations n\u00e9cessaires pour une action donn\u00e9e.\r\n- **La gestion des groupes (`Group`)** permet de centraliser les permissions pour plusieurs utilisateurs, ce qui est particuli\u00e8rement utile dans des applications complexes.\r\n\r\nDjango ne se contente pas de proposer des outils techniques : il incite \u00e0 adopter une discipline de conception respectant le principe de moindre privil\u00e8ge. En combinant ses outils natifs avec une r\u00e9flexion rigoureuse sur les droits des utilisateurs, le framework permet de pr\u00e9venir efficacement la plupart des d\u00e9faillances de contr\u00f4le d\u2019acc\u00e8s.\r\n\r\n## D\u00e9faillances cryptographiques\r\nLes d\u00e9faillances cryptographiques surviennent lorsqu\u2019un syst\u00e8me repose sur des m\u00e9canismes de chiffrement ou de hachage obsol\u00e8tes, mal configur\u00e9s ou insuffisamment robustes. Ces erreurs exposent les donn\u00e9es sensibles \u2013 telles que les mots de passe, les jetons d\u2019authentification ou les informations personnelles \u2013 \u00e0 des risques de compromission, de falsification ou d\u2019interception.\r\n\r\n### Comment Django prot\u00e8ge-t-il les donn\u00e9es sensibles ?\r\n**Django int\u00e8gre par d\u00e9faut des pratiques cryptographiques solides, notamment :**\r\n\r\n- **Un m\u00e9canisme de hachage robuste pour les mots de passe**, utilisant des algorithmes \u00e9prouv\u00e9s comme **PBKDF2, Bcrypt, et Argon2**. Ces m\u00e9thodes sont con\u00e7ues pour r\u00e9sister aux attaques par force brute et rendent extr\u00eamement co\u00fbteuse la r\u00e9cup\u00e9ration d\u2019un mot de passe en clair \u00e0 partir d\u2019un hash.\r\n- **Une gestion centralis\u00e9e et s\u00e9curis\u00e9e des secrets via le param\u00e8tre** `SECRET_KEY`, utilis\u00e9 notamment pour signer les cookies, les jetons CSRF, ou encore les sessions utilisateur. Il est essentiel pour assurer l\u2019int\u00e9grit\u00e9 et la confidentialit\u00e9 des \u00e9changes entre le client et le serveur.\r\n\r\n**Attention** : il est imp\u00e9ratif de **ne jamais exposer** la variable `SECRET_KEY` dans votre code source ou dans un d\u00e9p\u00f4t public. Pour renforcer la s\u00e9curit\u00e9, stockez-la dans des variables d\u2019environnement ou un coffre-fort num\u00e9rique adapt\u00e9 (comme HashiCorp Vault, AWS Secrets Manager, etc.).\r\n\r\nEn fournissant une base cryptographique fiable et des recommandations claires, Django permet de r\u00e9duire consid\u00e9rablement les risques li\u00e9s \u00e0 une mauvaise impl\u00e9mentation de la s\u00e9curit\u00e9 des donn\u00e9es. Toutefois, la vigilance du d\u00e9veloppeur reste de mise : le choix des bons algorithmes et la gestion rigoureuse des secrets sont des responsabilit\u00e9s \u00e0 ne pas n\u00e9gliger.\r\n\r\n## Injections\r\nLes failles d\u2019injection comptent parmi les vuln\u00e9rabilit\u00e9s les plus critiques et les plus courantes dans les applications web. Elles permettent \u00e0 un attaquant d\u2019introduire des donn\u00e9es malveillantes dans une requ\u00eate \u2014 souvent SQL ou HTML \u2014 afin d\u2019alt\u00e9rer le comportement attendu de l\u2019application. Ces attaques peuvent entra\u00eener des acc\u00e8s non autoris\u00e9s \u00e0 la base de donn\u00e9es, des fuites de donn\u00e9es sensibles, voire une compromission totale du syst\u00e8me.\r\n\r\n### Comment Django pr\u00e9vient-il les risques d\u2019injection ?\r\n**Django fournit des m\u00e9canismes robustes pour pr\u00e9venir les attaques d\u2019injection, notamment :**\r\n\r\n- **Un ORM (Object-Relational Mapper) s\u00e9curis\u00e9**, qui repose sur des **requ\u00eates param\u00e9tr\u00e9es.** En encapsulant automatiquement les valeurs des param\u00e8tres, Django emp\u00eache l\u2019ex\u00e9cution de code arbitraire via les champs utilisateur. Cela prot\u00e8ge efficacement contre les attaques par injection SQL.\r\n- **Un syst\u00e8me de templates s\u00e9curis\u00e9** qui applique **l\u2019\u00e9chappement automatique** des variables inject\u00e9es dans le HTML. Par d\u00e9faut, toute donn\u00e9e affich\u00e9e dans une vue Django est consid\u00e9r\u00e9e comme potentiellement dangereuse et est donc \u00e9chapp\u00e9e pour \u00e9viter les attaques XSS (Cross-Site Scripting).\r\n\r\n**Attention** : lorsque vous utilisez des requ\u00eates brutes comme `raw()` ou `extra()`, vous contournez les protections de l\u2019ORM. Dans ce cas, **vous \u00eates responsable** de la s\u00e9curisation des donn\u00e9es inject\u00e9es. Une vigilance accrue s\u2019impose.\r\n\r\nGr\u00e2ce \u00e0 ces m\u00e9canismes, Django limite fortement les vecteurs d\u2019injection. Toutefois, la s\u00e9curit\u00e9 repose aussi sur les bonnes pratiques du d\u00e9veloppeur : valider et nettoyer les entr\u00e9es utilisateur, \u00e9viter l\u2019ex\u00e9cution de code dynamique, et restreindre les permissions en base de donn\u00e9es restent des mesures essentielles.\r\n\r\n## Conception non s\u00e9curis\u00e9e\r\n\r\nLa conception non s\u00e9curis\u00e9e d\u00e9signe l\u2019absence de m\u00e9canismes de s\u00e9curit\u00e9 d\u00e8s les premi\u00e8res phases de d\u00e9veloppement d\u2019une application. Elle ne rel\u00e8ve pas d\u2019un simple oubli de configuration, mais d\u2019un manque de r\u00e9flexion globale sur la s\u00e9curit\u00e9 : mod\u00e8les de menace inexistants, absence de mesures d\u00e9fensives durables, ou encore m\u00e9connaissance des vecteurs d\u2019attaque.\r\n\r\nIl ne s\u2019agit pas ici d\u2019un d\u00e9faut d\u2019impl\u00e9mentation, mais bien d\u2019un d\u00e9faut de conception. Une telle lacune rend l\u2019application vuln\u00e9rable \u00e0 un large \u00e9ventail d\u2019attaques, souvent impossibles \u00e0 corriger sans une refonte partielle du syst\u00e8me.\r\n\r\n### Django encourage une approche s\u00e9curis\u00e9e par d\u00e9faut :\r\n**Le framework Django int\u00e8gre nativement des pratiques de s\u00e9curit\u00e9 qui incitent \u00e0 une architecture r\u00e9siliente :**\r\n\r\n- **La philosophie \"secure by default\"** : de nombreux composants sont con\u00e7us pour restreindre les comportements dangereux. Par exemple, les protections CSRF (Cross-Site Request Forgery), l\u2019\u00e9chappement automatique dans les templates, ou la gestion rigoureuse des sessions sont activ\u00e9s par d\u00e9faut.\r\n- **Une documentation abondante et claire** d\u00e9di\u00e9e aux probl\u00e9matiques de s\u00e9curit\u00e9, permettant aux d\u00e9veloppeurs d\u2019int\u00e9grer de bonnes pratiques d\u00e8s la phase de conception.\r\n- **Des options de configuration explicites** pour les param\u00e8tres critiques comme les en-t\u00eates HTTP de s\u00e9curit\u00e9 (`SECURE_*`), les politiques de cookies, ou les m\u00e9canismes de hachage des mots de passe.\r\n\r\nEn r\u00e9sum\u00e9, si Django offre une base s\u00e9curis\u00e9e, c\u2019est au d\u00e9veloppeur d\u2019adopter une posture proactive : int\u00e9grer la s\u00e9curit\u00e9 d\u00e8s la phase de conception, penser en termes de sc\u00e9narios d\u2019attaque, et effectuer des revues r\u00e9guli\u00e8res d\u2019architecture sont des habitudes indispensables \u00e0 la cr\u00e9ation de syst\u00e8mes robustes.\r\n\r\n## Mauvaise configuration de s\u00e9curit\u00e9\r\n\r\nUne mauvaise configuration de s\u00e9curit\u00e9 survient lorsque des param\u00e8tres critiques ne sont pas correctement d\u00e9finis, que des composants par d\u00e9faut sont laiss\u00e9s activ\u00e9s en production, ou encore lorsque des services inutiles restent accessibles. Ces n\u00e9gligences exposent l\u2019application \u00e0 des vecteurs d\u2019attaque souvent \u00e9vitables.\r\n\r\nCe type de vuln\u00e9rabilit\u00e9 est particuli\u00e8rement courant : il peut d\u00e9couler de l\u2019usage de configurations inad\u00e9quates en environnement de production, de l\u2019oubli de d\u00e9sactiver les d\u00e9bogueurs, ou d\u2019une m\u00e9connaissance des options de s\u00e9curit\u00e9 offertes par le framework.\r\n\r\n**Django fournit plusieurs garde-fous contre les erreurs de configuration :**\r\n\r\n- **Le param\u00e8tre `DEBUG`**, qui doit imp\u00e9rativement \u00eatre d\u00e9sactiv\u00e9 en production. En effet, activ\u00e9, il r\u00e9v\u00e8le des informations sensibles sur l\u2019\u00e9tat interne de l\u2019application, les erreurs et les variables de contexte.\r\n- **Les param\u00e8tres de s\u00e9curit\u00e9 HTTP** (`SECURE_*`), tels que :\r\n\r\n\t- `SECURE_SSL_REDIRECT` : redirige automatiquement tout le trafic HTTP vers HTTPS.\r\n\t- `SECURE_HSTS_SECONDS` : active la politique HSTS pour inciter les navigateurs \u00e0 n\u2019utiliser que des connexions s\u00e9curis\u00e9es.\r\n\t- `SECURE_BROWSER_XSS_FILTER`, `SECURE_CONTENT_TYPE_NOSNIFF`, etc.\r\n\r\n- **Le contr\u00f4le des h\u00f4tes autoris\u00e9s** (`ALLOWED_HOSTS`) : ce param\u00e8tre restreint les domaines autoris\u00e9s \u00e0 interagir avec l\u2019application, \u00e9vitant les attaques de type Host Header Injection.\r\n- **La gestion des erreurs** : en production, les pages d\u2019erreur doivent \u00eatre personnalis\u00e9es afin de ne divulguer aucun d\u00e9tail technique.\r\n\r\n**Attention**: Une configuration n\u00e9glig\u00e9e transforme une application bien con\u00e7ue en cible facile. Il est vivement conseill\u00e9 de revoir r\u00e9guli\u00e8rement les param\u00e8tres de d\u00e9ploiement, d\u2019automatiser les v\u00e9rifications via des tests d\u2019int\u00e9gration et de se r\u00e9f\u00e9rer aux recommandations officielles.\r\n\r\n\r\n## Composants vuln\u00e9rables et obsol\u00e8tes\r\n\r\nCette vuln\u00e9rabilit\u00e9 r\u00e9sulte de l\u2019utilisation de biblioth\u00e8ques, d\u00e9pendances ou modules dont des failles de s\u00e9curit\u00e9 ont \u00e9t\u00e9 identifi\u00e9es mais non corrig\u00e9es. Elle est d\u2019autant plus critique que ces composants sont souvent int\u00e9gr\u00e9s au c\u0153ur du fonctionnement de l\u2019application.\r\n\r\nLes menaces peuvent provenir de :\r\n\r\n- biblioth\u00e8ques open-source non maintenues,\r\n- d\u00e9pendances non mises \u00e0 jour,\r\n- composants tiers activ\u00e9s sans v\u00e9rification de leur int\u00e9grit\u00e9 ni de leur provenance.\r\n\r\n**Django et l\u2019\u00e9cosyst\u00e8me Python offrent plusieurs leviers de pr\u00e9vention :**\r\n- **Le fichier** `requirements.txt` ou `pyproject.toml`, qui permet de verrouiller les versions des d\u00e9pendances et d\u2019en suivre l\u2019\u00e9volution de mani\u00e8re contr\u00f4l\u00e9e.\r\n- **Les outils d\u2019audit automatique**, tels que :\r\n\t- `pip-audit` ou `safety`, pour analyser les d\u00e9pendances \u00e0 la recherche de vuln\u00e9rabilit\u00e9s connues.\r\n\t- `dependabot` ou `renovate` (si vous utilisez GitHub ou GitLab), qui sugg\u00e8rent des mises \u00e0 jour d\u00e8s qu\u2019une faille est identifi\u00e9e.\r\n- **La documentation Django** elle-m\u00eame, r\u00e9guli\u00e8rement mise \u00e0 jour pour corriger ou contourner des failles affectant ses versions ant\u00e9rieures. Il est donc crucial de suivre les notes de version et les bulletins de s\u00e9curit\u00e9 publi\u00e9s par l\u2019\u00e9quipe Django.\r\n\r\nUn composant vuln\u00e9rable est une porte d\u2019entr\u00e9e potentielle pour les attaquants. Adopter une d\u00e9marche de veille proactive et maintenir un registre clair des d\u00e9pendances est indispensable \u00e0 la s\u00e9curisation de votre application.\r\n\r\n## Identification et authentification d\u00e9faillantes\r\n\r\nCette cat\u00e9gorie recouvre les failles li\u00e9es \u00e0 une mauvaise gestion de l'identit\u00e9 des utilisateurs et des m\u00e9canismes d\u2019authentification. Elle inclut, entre autres, les mots de passe faibles, l\u2019absence de protection contre les attaques par force brute, ou encore des m\u00e9canismes d\u2019authentification non s\u00e9curis\u00e9s.\r\n\r\nUne authentification d\u00e9faillante peut permettre \u00e0 un attaquant d\u2019usurper l\u2019identit\u00e9 d\u2019un utilisateur l\u00e9gitime, y compris un administrateur.\r\n**Django int\u00e8gre plusieurs protections robustes :**\r\n\r\n- **Un syst\u00e8me d\u2019authentification **int\u00e9gr\u00e9, avec prise en charge des sessions, des mots de passe hach\u00e9s (via `PBKDF2` par d\u00e9faut), et des permissions par utilisateur ou groupe.\r\n- **Des outils** pour renforcer la s\u00e9curit\u00e9, comme :\r\n\t- la prise en charge de politiques de mot de passe via des biblioth\u00e8ques tierces (`django-password-validator`, `django-axes`, etc.),\r\n\t- le blocage temporaire ou d\u00e9finitif apr\u00e8s plusieurs tentatives \u00e9chou\u00e9es de connexion,\r\n\t- l\u2019authentification multi-facteur (2FA), facilement int\u00e9grable via des packages comme `django-otp` ou `django-two-factor-auth`.\r\n- **Des signaux** (`signals`) **Django** tels que `user_logged_in`, `user_login_failed` ou `user_logged_out`, permettant de d\u00e9clencher des alertes ou des actions sp\u00e9cifiques en cas d'\u00e9v\u00e9nements li\u00e9s \u00e0 la connexion.\r\n\r\nUn syst\u00e8me d\u2019authentification mal con\u00e7u est souvent le maillon faible de la cha\u00eene de s\u00e9curit\u00e9. Une politique rigoureuse, alli\u00e9e \u00e0 un audit r\u00e9gulier de vos points d\u2019acc\u00e8s, est essentielle.\r\n\r\n\r\n## \u00c9checs en mati\u00e8re d\u2019int\u00e9grit\u00e9 logicielle\r\n\r\nCette cat\u00e9gorie regroupe les vuln\u00e9rabilit\u00e9s li\u00e9es \u00e0 l\u2019absence de v\u00e9rification de l\u2019int\u00e9grit\u00e9 du code ou des d\u00e9pendances utilis\u00e9es dans une application. Elle inclut notamment l\u2019usage de biblioth\u00e8ques compromises, la modification non contr\u00f4l\u00e9e du code en production, ou encore l\u2019absence de signature lors des mises \u00e0 jour logicielles.\r\n\r\nUn attaquant peut ainsi injecter du code malveillant via une d\u00e9pendance tierce, une mise \u00e0 jour falsifi\u00e9e, ou une cha\u00eene CI/CD non s\u00e9curis\u00e9e.\r\n\r\n**Django, bien que robuste, n\u00e9cessite des bonnes pratiques compl\u00e9mentaires :**\r\n\r\n- **Gestion des d\u00e9pendances** avec `pip freeze` ou `pip-tools`, pour figer les versions utilis\u00e9es et \u00e9viter les changements non d\u00e9sir\u00e9s.\r\n- **Utilisation d\u2019un fichier** `requirements.txt` versionn\u00e9 dans un d\u00e9p\u00f4t contr\u00f4l\u00e9, avec des v\u00e9rifications d\u2019int\u00e9grit\u00e9 (ex. : `hashin`, `pip-audit`).\r\n- **Surveillance continue des paquets** gr\u00e2ce \u00e0 des outils comme `Safety`, `Dependabot` (GitHub) ou `Bandit` pour l\u2019analyse statique du code Python.\r\n- **Signature et contr\u00f4le des d\u00e9ploiements** dans les environnements CI/CD (GitLab CI, GitHub Actions, Jenkins\u2026), afin de garantir que seuls les binaires ou les scripts valid\u00e9s sont d\u00e9ploy\u00e9s.\r\n\r\nLa compromission d\u2019une seule biblioth\u00e8que ou \u00e9tape de d\u00e9ploiement peut suffire \u00e0 compromettre tout votre syst\u00e8me. Privil\u00e9giez la transparence, l\u2019auditabilit\u00e9, et l\u2019automatisation s\u00e9curis\u00e9e dans vos processus de livraison.\r\n\r\n## D\u00e9fauts de journalisation et de surveillance\r\n\r\nCette vuln\u00e9rabilit\u00e9 survient lorsque les applications n\u2019enregistrent pas correctement les \u00e9v\u00e9nements de s\u00e9curit\u00e9, ou ne permettent pas une d\u00e9tection et une r\u00e9ponse rapides aux incidents. Sans journalisation ad\u00e9quate, les attaques passent inaper\u00e7ues, rendant toute investigation post\u00e9rieure difficile, voire impossible.\r\n\r\nUne absence de surveillance ou une mauvaise configuration des alertes peut retarder la d\u00e9tection d\u2019intrusions, d\u2019escalades de privil\u00e8ges, ou d\u2019activit\u00e9s suspectes.\r\n**Avec Django, il est possible de mettre en \u0153uvre une strat\u00e9gie de journalisation efficace :**\r\n\r\n- **Le module `logging` de Python**, pleinement pris en charge par Django, permet de centraliser les logs applicatifs avec diff\u00e9rents niveaux de criticit\u00e9 (`DEBUG`, `INFO`, `WARNING`, `ERROR`, `CRITICAL`).\r\n- **La configuration** dans `settings.py` permet de d\u00e9finir :\r\n\t- des formats d\u2019affichage,\r\n\t- des handlers (fichiers, consoles, services externes),\r\n\t- et des r\u00e8gles de filtrage pr\u00e9cises par module.\r\n-** L\u2019utilisation de middlewares personnalis\u00e9s** permet de tracer les requ\u00eates entrantes, les erreurs HTTP, ou les \u00e9v\u00e9nements utilisateur critiques (connexion, \u00e9chec d\u2019authentification, etc.).\r\n- **L\u2019int\u00e9gration avec des solutions de supervision** comme Sentry, ELK (Elasticsearch, Logstash, Kibana) ou Grafana Loki offre une visibilit\u00e9 en temps r\u00e9el sur le comportement de l\u2019application et facilite la corr\u00e9lation d\u2019\u00e9v\u00e9nements.\r\n\r\nUne journalisation efficace ne doit pas compromettre la confidentialit\u00e9 des donn\u00e9es : \u00e9vitez de logguer des mots de passe, des tokens ou des informations sensibles.\r\n\r\n\r\n## Falsification des requ\u00eates c\u00f4t\u00e9 serveur (SSRF)\r\n\r\nLa falsification des requ\u00eates c\u00f4t\u00e9 serveur (Server-Side Request Forgery, SSRF) est une vuln\u00e9rabilit\u00e9 qui permet \u00e0 un attaquant de contraindre le serveur \u00e0 effectuer des requ\u00eates vers des adresses internes ou externes. Cela peut conduire \u00e0 la divulgation d\u2019informations sensibles, \u00e0 la d\u00e9couverte de services internes, ou \u00e0 l\u2019exploitation de failles dans des services non expos\u00e9s au public.\r\n\r\nUn exemple courant est l'acc\u00e8s non autoris\u00e9 \u00e0 des m\u00e9tadonn\u00e9es de services cloud (comme AWS ou Google Cloud), via une requ\u00eate mal filtr\u00e9e.\r\n**Comment se prot\u00e9ger avec Django :**\r\n\r\n- **Validation stricte des entr\u00e9es utilisateur** : ne jamais faire aveugl\u00e9ment confiance aux URL ou adresses fournies par l'utilisateur. Utilisez des expressions r\u00e9guli\u00e8res ou des biblioth\u00e8ques sp\u00e9cialis\u00e9es pour valider et restreindre les domaines autoris\u00e9s.\r\n- **Filtrage des h\u00f4tes **: Django permet de d\u00e9finir une liste blanche via le param\u00e8tre ALLOWED_HOSTS. Bien que ce param\u00e8tre prot\u00e8ge principalement contre les attaques Host header, il doit \u00eatre correctement configur\u00e9 pour \u00e9viter certains d\u00e9tournements.\r\n- **Utilisation prudente de biblioth\u00e8ques tierces **: si votre application interagit avec des ressources distantes (API, fichiers, etc.), privil\u00e9giez des biblioth\u00e8ques r\u00e9put\u00e9es et v\u00e9rifiez les redirections ou les r\u00e9ponses inattendues.\r\n- **Restrictions r\u00e9seau** : limitez, au niveau de l\u2019infrastructure, les capacit\u00e9s de votre serveur \u00e0 effectuer des requ\u00eates sortantes, notamment vers les IP internes ou les m\u00e9tadonn\u00e9es cloud.\r\n\r\nEn cas de doute, isolez les composants sensibles dans des r\u00e9seaux distincts et appliquez le principe du moindre privil\u00e8ge.\r\n\r\n## En mati\u00e8re de s\u00e9curit\u00e9, l\u2019anticipation vaut toujours mieux que la r\u00e9action.\r\n\r\nLa s\u00e9curit\u00e9 des applications web ne rel\u00e8ve pas uniquement d\u2019un ensemble de bonnes pratiques : elle constitue un enjeu majeur pour la p\u00e9rennit\u00e9, la r\u00e9putation et la fiabilit\u00e9 d\u2019un projet. Le Top 10 OWASP 2021 nous rappelle que les vuln\u00e9rabilit\u00e9s les plus r\u00e9pandues restent souvent les plus n\u00e9glig\u00e9es.\r\n\r\nDjango, par sa conception, offre une architecture robuste int\u00e9grant des m\u00e9canismes de s\u00e9curit\u00e9 d\u00e8s la base : protection contre les injections, gestion fine des droits, hachage s\u00e9curis\u00e9 des mots de passe, ou encore pr\u00e9vention des attaques CSRF.\r\n\r\nCependant, aucun framework ne saurait garantir \u00e0 lui seul une s\u00e9curit\u00e9 parfaite. Il appartient aux d\u00e9veloppeurs de ma\u00eetriser les risques, de rester vigilants et de renforcer ces protections par une connaissance approfondie des menaces.\r\n\r\nAdopter une d\u00e9marche proactive, auditer r\u00e9guli\u00e8rement son code et suivre les recommandations de l\u2019OWASP sont autant de leviers pour construire des applications r\u00e9silientes, dignes de confiance.\r\n",
      "created": "2025-05-29T13:05:21.427899",
      "updated": "2025-06-01T10:40:10.701424",
      "meta_description": "OWASP Top 10 2021 : Comment Django prot\u00e8ge votre app contre les vuln\u00e9rabilit\u00e9s critiques (injections, SSRF, contr\u00f4le d'acc\u00e8s). D\u00e9couvrez ses m\u00e9canismes int\u00e9gr\u00e9s et bonnes pratiques pour s\u00e9curiser votre projet.",
      "status_id": 3,
      "categories_id": 1
    },
    {
      "id": 3,
      "title": "Trop de types primitifs",
      "slug": "trop-de-types-primitifs",
      "body": "**Usage de types primitifs au lieu de petits objets pour des t\u00e2ches simples**\r\n\r\nDans un code bien structur\u00e9, il est pr\u00e9f\u00e9rable de cr\u00e9er de petits objets pour repr\u00e9senter des informations sp\u00e9cifiques telles que les devises, les intervalles de valeurs ou les num\u00e9ros de t\u00e9l\u00e9phone. Cependant, une obsession des types primitifs se manifeste lorsque des entiers, des cha\u00eenes de caract\u00e8res ou d'autres types primitifs sont employ\u00e9s \u00e0 la place d'objets d\u00e9di\u00e9s. Par exemple, au lieu de concevoir une classe \u00ab Devise \u00bb pour manipuler des valeurs mon\u00e9taires, le code utilise un simple float ou int. Ce choix, bien qu'initialement pratique, finit par complexifier la maintenance et la lisibilit\u00e9 du code.\r\n\r\n**Utilisation de constantes pour encoder des informations**\r\n\r\nUne pratique courante dans ce contexte est de d\u00e9finir des constantes pour signifier des informations sp\u00e9cifiques, comme `ROLE_UTILISATEUR_ADMIN = 1`, pour d\u00e9signer les utilisateurs administrateurs. Ce type de codage par des valeurs num\u00e9riques ou textuelles devient probl\u00e9matique d\u00e8s lors que le nombre de r\u00f4les ou de cat\u00e9gories augmente, ou si ces valeurs n\u00e9cessitent des modifications. Cette approche de codage rigide limite l\u2019\u00e9volutivit\u00e9 du code et peut facilement introduire des erreurs subtiles.\r\n\r\n**Emploi de cha\u00eenes de caract\u00e8res constantes comme noms de champs dans des tableaux de donn\u00e9es**\r\n\r\nTrop de primitifs se manifeste \u00e9galement lorsque des cha\u00eenes de caract\u00e8res sont utilis\u00e9es comme cl\u00e9s dans des tableaux ou dictionnaires pour repr\u00e9senter des noms de champs. Par exemple, dans une classe contenant un tableau de donn\u00e9es h\u00e9t\u00e9rog\u00e8nes, des constantes sous forme de cha\u00eenes de caract\u00e8res sont d\u00e9finies pour acc\u00e9der aux diff\u00e9rents champs (par exemple, `array[\"NOM_UTILISATEUR\"]`). Cette approche rend le code moins explicite, plus fragile et susceptible de g\u00e9n\u00e9rer des erreurs lorsque des modifications sont apport\u00e9es aux champs.\r\n\r\n## Les causes\r\n\r\n**Une solution de facilit\u00e9 dans des moments de rapidit\u00e9**\r\n\r\nComme pour de nombreuses pratiques de codage mal avis\u00e9es, l\u2019obsession des types primitifs provient souvent d\u2019une solution de facilit\u00e9 ou d'une approche temporaire qui devient permanente. Le d\u00e9veloppeur pourrait se dire : \u00ab Il me suffit d'un champ pour stocker cette donn\u00e9e ! \u00bb Utiliser un type primitif est alors plus rapide que de cr\u00e9er une classe d\u00e9di\u00e9e, ce qui est per\u00e7u comme un effort injustifi\u00e9. Cependant, au fur et \u00e0 mesure que de nouvelles donn\u00e9es sont ajout\u00e9es de la m\u00eame mani\u00e8re, la classe gonfle et devient difficile \u00e0 manipuler et \u00e0 maintenir.\r\n\r\n**Simulation de types par des primitives**\r\n\r\nPour \u00e9viter de concevoir de nouveaux types, il est fr\u00e9quent de recourir \u00e0 des types primitifs qui \u00ab simulent \u00bb les types n\u00e9cessaires. Cela conduit \u00e0 des listes de valeurs autoris\u00e9es sous forme de nombres ou de cha\u00eenes, qui servent de type de substitution. Les noms de ces valeurs sp\u00e9cifiques sont ensuite attribu\u00e9s via des constantes pour faciliter la lecture, mais cela entra\u00eene une diffusion de ces constantes dans le code et rend difficile l\u2019identification de leur signification et de leur logique.\r\n\r\n**Simulation de champs \u00e0 l\u2019aide de types primitifs** \r\n\r\nUn autre sympt\u00f4me courant est l\u2019utilisation de tableaux de donn\u00e9es contenant des types primitifs pour simuler des champs. Ainsi, la classe inclut un tableau avec des donn\u00e9es vari\u00e9es, et des constantes sous forme de cha\u00eenes de caract\u00e8res servent d\u2019index pour acc\u00e9der \u00e0 chaque type de donn\u00e9e dans le tableau. Cette approche limite la clart\u00e9 du code et augmente le risque d\u2019erreurs, car ces cha\u00eenes d\u2019index peuvent \u00eatre facilement modifi\u00e9es ou mal utilis\u00e9es.\r\n\r\n## G\u00e9rer ce genre de cas\r\n\r\n**Cr\u00e9er des classes d\u00e9di\u00e9es pour les groupes logiques de primitives**\r\n\r\nLorsqu'une classe contient de nombreux champs primitifs, il peut \u00eatre pertinent de les regrouper logiquement au sein d'une nouvelle classe qui porte un nom explicite, facilitant ainsi la compr\u00e9hension de leur r\u00f4le. Par ailleurs, le comportement associ\u00e9 \u00e0 ces donn\u00e9es peut \u00eatre d\u00e9plac\u00e9 dans cette classe, offrant une meilleure encapsulation et rendant le code plus maintenable. La technique Remplacer une valeur de donn\u00e9e par un objet est recommand\u00e9e.\r\n\r\n**Encapsuler les param\u00e8tres primitifs dans un objet**\r\n\r\nLorsque des valeurs primitives sont fr\u00e9quemment pass\u00e9es en param\u00e8tres dans les m\u00e9thodes, il est judicieux de cr\u00e9er un objet param\u00e8tre pour les regrouper. Cela am\u00e9liore la lisibilit\u00e9 et permet de conserver la coh\u00e9rence des donn\u00e9es transmises. Les techniques Introduire un objet param\u00e8tre et Pr\u00e9server l\u2019objet entier sont adapt\u00e9es pour atteindre cet objectif.\r\n\r\n**Remplacer les codes de type par des classes ou des sous-classes**\r\n\r\nLorsque des variables de type primitif servent \u00e0 encoder des informations complexes, comme des codes de type, il est pr\u00e9f\u00e9rable de les remplacer par une classe ou des sous-classes d\u00e9di\u00e9es. Par exemple, au lieu d'utiliser un int pour repr\u00e9senter des cat\u00e9gories d'utilisateurs, une classe TypeUtilisateur ou des sous-classes Admin, Client, etc., permettent de structurer le code de mani\u00e8re claire. Les techniques Remplacer un code de type par une classe, Remplacer un code de type par des sous-classes  et Remplacer un code de type par un \u00e9tat/strat\u00e9gie permettent d\u2019adapter le code aux besoins sp\u00e9cifiques de chaque type.\r\n\r\n**Remplacer les tableaux par des objets**\r\n\r\nDans les cas o\u00f9 des tableaux de donn\u00e9es h\u00e9t\u00e9rog\u00e8nes sont utilis\u00e9s, remplacer ces tableaux par des objets permet d\u2019assurer une meilleure structuration du code. Chaque champ de l'objet remplace un \u00e9l\u00e9ment du tableau, rendant l\u2019intention du code plus claire. Pour cette t\u00e2che, la technique Remplacer un tableau par un objet est recommand\u00e9e.\r\n\r\n## Conclusion\r\n\r\nL\u2019utilisation d\u2019objets en lieu et place des types primitifs permet d\u2019augmenter la flexibilit\u00e9 du code. Les objets apportent une structure et peuvent \u00e9voluer avec les besoins, contrairement aux primitives qui imposent souvent des contraintes rigides.\r\n\r\nLe regroupement des op\u00e9rations sur des donn\u00e9es sp\u00e9cifiques au sein de classes permet d'\u00e9viter la dispersion du code. Les op\u00e9rations deviennent centralis\u00e9es et le code devient plus simple \u00e0 comprendre, avec des donn\u00e9es explicites et des comportements associ\u00e9s. Cela \u00e9limine les suppositions sur la signification de certaines constantes ou sur les raisons de leur pr\u00e9sence dans des tableaux.\r\n\r\nLa structuration par objets facilite l'identification de code dupliqu\u00e9. Les doublons sont g\u00e9n\u00e9ralement plus difficiles \u00e0 rep\u00e9rer lorsque des types primitifs sont diss\u00e9min\u00e9s dans le code, alors que les objets permettent de centraliser les donn\u00e9es et les op\u00e9rations, rendant plus \u00e9videntes les r\u00e9p\u00e9titions ou les similitudes dans les op\u00e9rations.\r\n",
      "created": "2025-06-02T13:48:05.969214",
      "updated": "2025-07-01T17:11:28.058063",
      "meta_description": "D\u00e9couvrez pourquoi l\u2019abus de types primitifs (int, string, float) nuit \u00e0 la qualit\u00e9 du code. Apprenez \u00e0 les remplacer par des objets pour am\u00e9liorer la maintenabilit\u00e9, la lisibilit\u00e9 et l\u2019\u00e9volutivit\u00e9 de vos applications.",
      "status_id": 3,
      "categories_id": 1
    },
    {
      "id": 4,
      "title": "Les signatures de m\u00e9thodes trop grandes",
      "slug": "les-signatures-de-methodes-trop-grandes",
      "body": "Une m\u00e9thode qui prend plus de trois ou quatre param\u00e8tres peut rapidement devenir probl\u00e9matique. Ce ph\u00e9nom\u00e8ne se produit souvent lorsqu'on essaie de combiner plusieurs algorithmes ou logiques au sein d'une m\u00eame m\u00e9thode. Dans ces cas, une longue liste de param\u00e8tres est utilis\u00e9e pour indiquer quel algorithme ou quelle logique doit \u00eatre ex\u00e9cut\u00e9 et comment cela doit se d\u00e9rouler.\r\n\r\nUn autre facteur pouvant conduire \u00e0 des listes de param\u00e8tres excessives est l'effort de rendre les classes plus ind\u00e9pendantes entre elles. Par exemple, pour r\u00e9duire les d\u00e9pendances entre classes, le code qui s'occupait de cr\u00e9er des objets dans une m\u00e9thode est d\u00e9plac\u00e9 en dehors de celle-ci. D\u00e9sormais, c\u2019est la m\u00e9thode appelante qui cr\u00e9e ces objets et les passe en param\u00e8tres. Cela permet \u00e0 la classe d'origine de ne plus \u00eatre au courant des relations entre ces objets, ce qui r\u00e9duit sa d\u00e9pendance. Cependant, si plusieurs objets doivent \u00eatre cr\u00e9\u00e9s de cette mani\u00e8re, chacun d'entre eux devra \u00eatre transmis sous forme de param\u00e8tre, allongeant ainsi la liste des param\u00e8tres de la m\u00e9thode.\r\n\r\nLes longues listes de param\u00e8tres pr\u00e9sentent plusieurs inconv\u00e9nients. Elles rendent la m\u00e9thode plus difficile \u00e0 comprendre, car il devient de plus en plus complexe de savoir ce que chaque param\u00e8tre repr\u00e9sente et comment ils interagissent. De plus, ces listes de param\u00e8tres peuvent devenir contradictoires et compliqu\u00e9es \u00e0 utiliser \u00e0 mesure qu'elles grandissent.\r\n\r\n## V\u00e9rification des valeurs pass\u00e9es en param\u00e8tres\r\n\r\nV\u00e9rifiez quelles valeurs sont pass\u00e9es en tant que param\u00e8tres dans une m\u00e9thode. Si certains des arguments ne sont en r\u00e9alit\u00e9 que le r\u00e9sultat d'appels de m\u00e9thode sur un autre objet, vous pouvez appliquer la technique **Remplacer un param\u00e8tre par un appel de m\u00e9thode**. Cela consiste \u00e0 \u00e9viter de passer le r\u00e9sultat de cet appel en param\u00e8tre et \u00e0 plut\u00f4t effectuer cet appel directement \u00e0 l'int\u00e9rieur de la m\u00e9thode concern\u00e9e. L'objet sur lequel l'appel est fait peut \u00eatre stock\u00e9 dans un champ de la classe elle-m\u00eame ou bien transmis \u00e0 la m\u00e9thode sous forme de param\u00e8tre.\r\n\r\nAu lieu de passer un ensemble de donn\u00e9es issues d'un autre objet sous forme de plusieurs param\u00e8tres, il est souvent plus judicieux de passer directement l'objet entier \u00e0 la m\u00e9thode. Cette approche est connue sous le nom de **Pr\u00e9server l'objet entier**. Cela permet de simplifier le nombre de param\u00e8tres et d'acc\u00e9der plus facilement aux donn\u00e9es n\u00e9cessaires sans devoir les d\u00e9composer \u00e0 l'avance.\r\n\r\nCependant, si les param\u00e8tres proviennent de diff\u00e9rentes sources (c'est-\u00e0-dire de diff\u00e9rents objets ou structures de donn\u00e9es), il est recommand\u00e9 de les regrouper dans un objet unique. Ce regroupement de param\u00e8tres peut \u00eatre effectu\u00e9 \u00e0 l'aide de la technique **Introduire un objet param\u00e8tre**. Cela consiste \u00e0 cr\u00e9er un objet sp\u00e9cifique qui contiendra tous les param\u00e8tres n\u00e9cessaires, ce qui permet de ne passer qu'un seul param\u00e8tre \u00e0 la m\u00e9thode au lieu de plusieurs.",
      "created": "2025-06-02T13:52:58.039787",
      "updated": "2025-06-02T13:52:58.039793",
      "meta_description": "Des m\u00e9thodes avec trop de param\u00e8tres nuisent \u00e0 la lisibilit\u00e9 et \u00e0 la maintenance du code. D\u00e9couvrez comment simplifier vos signatures gr\u00e2ce aux techniques : introduire un objet param\u00e8tre, pr\u00e9server l\u2019objet entier et remplacer un param\u00e8tre par un appel de m\u00e9thode.",
      "status_id": 3,
      "categories_id": 1
    },
    {
      "id": 5,
      "title": "Les m\u00e9thodes trop volumineuses",
      "slug": "les-methodes-trop-volumineuses",
      "body": "Dans le monde du d\u00e9veloppement logiciel, un code peut sembler parfait \u00e0 premi\u00e8re vue, mais il peut cacher des probl\u00e8mes sous-jacents qui peuvent se manifester au fil du temps. L'une des r\u00e8gles d'or en mati\u00e8re de d\u00e9veloppement est qu'une m\u00e9thode ou fonction d\u00e9passant dix/quinze lignes devrait vous alerter. Pourquoi ? Parce que cela pourrait \u00eatre le signe d'une mauvaise pratique de d\u00e9veloppement.\r\n\r\n## Raisons du Probl\u00e8me\r\n\r\nAu fil du temps, les d\u00e9veloppeurs ont tendance \u00e0 ajouter des fonctionnalit\u00e9s \u00e0 une m\u00e9thode sans jamais en supprimer. Ce ph\u00e9nom\u00e8ne est probl\u00e9matique, car il est g\u00e9n\u00e9ralement plus facile d'\u00e9crire du nouveau code que de relire et de r\u00e9viser le code existant. Ainsi, cette accumulation peut passer inaper\u00e7ue jusqu'\u00e0 ce que la m\u00e9thode devienne un v\u00e9ritable fouillis.\r\n\r\nLa pens\u00e9e selon laquelle \"ce ne sont que deux lignes\" incite souvent \u00e0 \u00e9viter la cr\u00e9ation de nouvelles m\u00e9thodes pour de petits ajouts. Cela entra\u00eene l\u2019ajout de lignes de code une \u00e0 une, ce qui peut aboutir \u00e0 un enchev\u00eatrement de code spaghetti. Ce type de code devient alors difficile \u00e0 comprendre, \u00e0 maintenir et \u00e0 faire \u00e9voluer.\r\n\r\n### Am\u00e9lioration\r\n\r\nHeureusement, il existe plusieurs strat\u00e9gies pour am\u00e9liorer la qualit\u00e9 de votre code :\r\n\r\n### Extraire la M\u00e9thode\r\n\r\nSi vous vous trouvez dans l'obligation de commenter une partie de votre code \u00e0 l'int\u00e9rieur d'une m\u00e9thode, cela peut \u00eatre un signe qu'il est temps de cr\u00e9er une nouvelle m\u00e9thode. En effet, si une portion de code n\u00e9cessite une explication, il est souvent pr\u00e9f\u00e9rable de la s\u00e9parer dans une m\u00e9thode distincte. Cela non seulement am\u00e9liore la lisibilit\u00e9 du code, mais permet \u00e9galement de rendre son fonctionnement plus clair. M\u00eame si vous n\u2019avez qu'une seule ligne de code \u00e0 isoler, le fait de l'extraire dans une m\u00e9thode d\u00e9di\u00e9e peut aider \u00e0 rendre votre code plus compr\u00e9hensible et maintenable.\r\n\r\n### G\u00e9rer les Variables\r\n\r\nLorsque les variables ou les param\u00e8tres locaux rendent difficile l'extraction d'une m\u00e9thode, plusieurs techniques peuvent \u00eatre utilis\u00e9es pour simplifier le processus :\r\n\r\n- Remplacer la m\u00e9thode temporaire par une requ\u00eate : Au lieu de laisser des variables temporaires encombrer la m\u00e9thode, envisagez de les remplacer par une requ\u00eate qui renvoie directement la valeur souhait\u00e9e. Cela peut aider \u00e0 r\u00e9duire la complexit\u00e9 et \u00e0 am\u00e9liorer la lisibilit\u00e9.\r\n- Introduire un objet de param\u00e8tre : Si une m\u00e9thode n\u00e9cessite plusieurs param\u00e8tres, pensez \u00e0 cr\u00e9er un objet qui regroupe ces param\u00e8tres. Cela permet de passer un seul objet \u00e0 la m\u00e9thode au lieu de plusieurs variables, rendant l'appel de la m\u00e9thode plus clair. \r\n- Pr\u00e9server l'objet entier : Dans certains cas, il peut \u00eatre judicieux de passer l'objet entier \u00e0 la m\u00e9thode plut\u00f4t que de passer uniquement certaines de ses propri\u00e9t\u00e9s. Cela peut simplifier la gestion des donn\u00e9es et \u00e9viter des erreurs li\u00e9es \u00e0 des variables manquantes.\r\n\r\n### D\u00e9placer des M\u00e9thodes\r\n\r\nSi aucune des solutions pr\u00e9c\u00e9dentes ne permet de simplifier votre code, pensez \u00e0 d\u00e9placer la m\u00e9thode enti\u00e8re dans un objet distinct. Cette approche peut contribuer \u00e0 rendre votre code plus clair et plus modulaire, car elle permet de regrouper des fonctionnalit\u00e9s similaires dans une seule entit\u00e9. Cela facilite \u00e9galement la maintenance et les tests, car chaque objet peut \u00eatre g\u00e9r\u00e9 ind\u00e9pendamment des autres.\r\n\r\n### D\u00e9composer les Conditions et Boucles\r\n\r\nLes op\u00e9rateurs conditionnels (comme if, else, etc.) et les boucles (comme for ou while) peuvent souvent indiquer que votre code contient des \u00e9l\u00e9ments qui pourraient \u00eatre mieux organis\u00e9s dans une m\u00e9thode distincte. Lorsque vous remarquez de telles structures, envisagez d'utiliser des techniques comme :\r\n\r\n- D\u00e9composer la condition : Si une condition devient trop complexe, il peut \u00eatre utile de la simplifier en la s\u00e9parant dans une m\u00e9thode distincte. Cela rendra le code plus lisible et facilitera la compr\u00e9hension de la logique.\r\n- Extraire la m\u00e9thode pour les boucles : Si une boucle contient un code substantiel, envisagez de cr\u00e9er une m\u00e9thode distincte pour g\u00e9rer ce code. Cela permet de clarifier ce que fait la boucle et de r\u00e9duire la longueur de la m\u00e9thode d'origine.\r\n\r\n## B\u00e9n\u00e9fices\r\n\r\nLes classes qui contiennent des m\u00e9thodes courtes ont tendance \u00e0 \u00eatre plus durables et plus faciles \u00e0 maintenir. En effet, plus une m\u00e9thode est longue, plus elle devient difficile \u00e0 comprendre. De plus, les m\u00e9thodes longues peuvent dissimuler du code dupliqu\u00e9, ce qui complique davantage la maintenance du code. En ayant des m\u00e9thodes plus courtes et mieux d\u00e9finies, vous facilitez la compr\u00e9hension et la gestion de votre code.\r\nPerformances\r\n\r\nUn argument fr\u00e9quemment avanc\u00e9 contre la r\u00e9duction de la taille des m\u00e9thodes est qu'elle pourrait nuire aux performances. Cependant, dans la plupart des cas, cet impact est si minime qu'il ne m\u00e9rite pas d'inqui\u00e9tude. En \u00e9crivant un code clair et lisible, vous serez mieux plac\u00e9 pour rep\u00e9rer des opportunit\u00e9s d'optimisation et ainsi r\u00e9aliser de r\u00e9els gains de performance si cela s'av\u00e8re n\u00e9cessaire.",
      "created": "2025-06-02T14:00:00.904416",
      "updated": "2025-06-02T14:12:43.859562",
      "meta_description": "M\u00e9thodes trop longues ? Apprenez \u00e0 les simplifier pour un code plus clair, maintenable et performant.",
      "status_id": 3,
      "categories_id": 1
    },
    {
      "id": 6,
      "title": "Code propre : Lutter contre la Dette Technique",
      "slug": "code-propre-lutter-contre-la-dette-technique",
      "body": "**Un code propre est \u00e9vident pour les autres d\u00e9veloppeurs.**\r\n\r\nIl ne s'agit pas de cr\u00e9er des algorithmes complexes et sophistiqu\u00e9s. Des noms de variables mal choisis, des classes et m\u00e9thodes surcharg\u00e9es, des \"nombres magiques\" \u2014 tous ces \u00e9l\u00e9ments rendent le code confus et difficile \u00e0 comprendre. Un bon code est lisible, compr\u00e9hensible et auto-explicatif, m\u00eame pour quelqu'un qui ne l\u2019a pas \u00e9crit.\r\n\r\n**Un code propre ne contient pas de doublons.**\r\n\r\nLa duplication complique les changements futurs. Chaque fois que vous devez modifier un morceau de code dupliqu\u00e9, vous devez vous souvenir de r\u00e9pliquer ce changement \u00e0 chaque instance. Cela augmente inutilement la charge cognitive et ralentit le travail.\r\n\r\n**Un code propre est minimaliste.**\r\n\r\nIl doit contenir le strict n\u00e9cessaire en termes de classes et d'\u00e9l\u00e9ments. Moins de code signifie moins de choses \u00e0 comprendre et \u00e0 maintenir, donc moins de bugs potentiels. Le code est une responsabilit\u00e9 \u2014 gardez-le concis et simple.\r\n\r\n**Les commentaires dans un code propre**\r\n\r\nLes commentaires jouent un r\u00f4le important dans la lisibilit\u00e9 et la compr\u00e9hension d'un code, mais leur utilisation doit \u00eatre judicieuse. Voici comment aborder les commentaires dans un code propre :\r\n\r\n- **Clart\u00e9 et Contexte **: Les commentaires doivent expliquer le pourquoi d'un choix plut\u00f4t que le quoi. Un bon code devrait \u00eatre suffisamment clair pour que les d\u00e9veloppeurs comprennent la logique sans avoir \u00e0 lire des commentaires d\u00e9taill\u00e9s. Les commentaires peuvent fournir un contexte pr\u00e9cieux, comme la raison d'un algorithme particulier ou des d\u00e9tails sur une d\u00e9cision de conception.\r\n- **\u00c9viter les Redondances** : \u00c9vitez de commenter des \u00e9l\u00e9ments \u00e9vidents ou de d\u00e9crire ce que fait le code ligne par ligne. Par exemple, au lieu de commenter un code comme ci-dessous, il vaut mieux choisir des noms de variables explicites et rendre le code lisible.\r\n\r\n```python\r\nx = x + 1  # Ajoute 1 \u00e0 x\r\n```\r\n\r\n- **Documentation des Fonctions** : Utilisez des docstrings (commentaires en d\u00e9but de fonction) pour expliquer le but de la fonction, ses param\u00e8tres et ce qu\u2019elle retourne. Cela aide \u00e0 comprendre comment utiliser une fonction sans avoir \u00e0 lire son code.\r\n```python\r\ndef add(a, b):\r\n    \"\"\"\r\n    Additionne deux nombres.\r\n\r\n    :param a: Premier nombre\r\n    :param b: Deuxi\u00e8me nombre\r\n    :return: Somme de a et b\r\n    \"\"\"\r\n    return a + b\r\n```\r\n\r\n- **Mettre \u00e0 Jour les Commentaires** : Les commentaires doivent \u00eatre mis \u00e0 jour en m\u00eame temps que le code. Des commentaires obsol\u00e8tes peuvent induire en erreur et causer plus de confusion qu\u2019ils n\u2019en r\u00e9solvent. Une bonne pratique est de revoir les commentaires lors de chaque refactoring.\r\n- **Sections et TODOs** : Les commentaires peuvent \u00eatre utilis\u00e9s pour marquer des sections de code ou des t\u00e2ches \u00e0 accomplir (TODOs). Cependant, veillez \u00e0 ce que ces commentaires soient \u00e9galement suivis et maintenus. Par exemple :\r\n```python\r\n# TODO: Optimiser cette fonction pour de meilleures performances\r\n```\r\n- **Exceptions et Cas Particuliers** : Si vous g\u00e9rez des cas particuliers ou des exceptions qui ne sont pas \u00e9vidents, des commentaires peuvent aider \u00e0 clarifier pourquoi une solution a \u00e9t\u00e9 choisie. Cela permet de mieux comprendre les d\u00e9cisions qui ont \u00e9t\u00e9 prises.\r\n\r\nDans un code propre, les commentaires sont un compl\u00e9ment, pas un substitut \u00e0 la clart\u00e9 du code. Ils doivent \u00eatre utilis\u00e9s pour am\u00e9liorer la compr\u00e9hension et fournir des informations essentielles sans surcharger le code de d\u00e9tails inutiles. Un bon \u00e9quilibre entre un code lisible et des commentaires pertinents est la cl\u00e9 d'un code maintenable et efficace.\r\n\r\n### Un code propre r\u00e9ussit tous les tests.\r\n\r\nSi seulement 95 % de vos tests passent, c\u2019est un signal d\u2019alerte. Pire encore, une couverture de tests \u00e0 0 % signifie que vous travaillez sans filet. Un code propre est pleinement test\u00e9, assurant ainsi sa robustesse.\r\n\r\n### Un code propre est \u00e9conomique \u00e0 long terme.\r\n\r\nUn code bien \u00e9crit est moins co\u00fbteux \u00e0 maintenir. Il r\u00e9duit la complexit\u00e9, les erreurs, et donc le temps pass\u00e9 \u00e0 corriger ou \u00e0 faire \u00e9voluer le projet. En fin de compte, cela diminue les frais techniques.",
      "created": "2025-06-02T14:10:16.255067",
      "updated": "2025-06-02T14:10:16.255074",
      "meta_description": "Un code propre, c\u2019est un code qui parle de lui-m\u00eame. Moins de bugs, plus de clart\u00e9, z\u00e9ro dette technique. La propret\u00e9, c\u2019est la puissance.",
      "status_id": 3,
      "categories_id": 1
    },
    {
      "id": 7,
      "title": "D\u00e9crire le document",
      "slug": "decrire-le-document",
      "body": "Les utilisateurs de lecteurs d\u2019\u00e9cran ne savent pas toujours sur quelle page ils se trouvent lorsqu\u2019ils naviguent sur un site web. Ils peuvent ne pas comprendre le sujet d\u2019une page ou ne pas remarquer que le contenu a chang\u00e9 si le titre de la page n\u2019est pas correctement d\u00e9fini.\r\n\r\nVous pouvez nommer les pages \u00e0 l\u2019aide de l\u2019\u00e9l\u00e9ment HTML `<title>`. Le titre doit \u00eatre unique et d\u00e9crire de mani\u00e8re concise le sujet ou l\u2019objectif de chaque page. [Voir l\u2019exemple 1](#exemple-1)\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span>**\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n  <head>\r\n    <title>Produits \u2013 Magasin de v\u00eatements Renaud</title>\r\n  </head>\r\n</html>\r\n```\r\n\r\nPour les aper\u00e7us de m\u00e9dias sociaux, vous pouvez \u00e9ventuellement utiliser an <a href=\"https://ogp.me/\" target=\"_blank\">open graph meta tag</a> pour inclure plus d'informations ou des informations diff\u00e9rentes, comme le montre  [l\u2019exemple 2](#exemple-2) :\r\n\r\n**<span id=\"exemple-2\">Exemple 2</span>**\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n  <head>\r\n    <title>Produits \u2013 Magasin de v\u00eatements Renaud</title>\r\n\t\t<meta property=\"og:title\"  content=\"Trouvez des robes, jeans et plus encore chez Renaud\">\r\n  </head>\r\n</html>\r\n```\r\nAjouter un contexte selon l\u2019\u00e9tat de la page peut aussi \u00eatre utile (voir [exemple 3 - 6](#exemple-3-6)) :\r\n\r\n**<span id=\"exemple-3-6\">Exemple 3 \u00e0 6</span>**\r\n```html\r\n<!-- Exemple 3 -->\r\n<title>Commande (\u00e9tape 3 sur 4) \u2013 Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- Exemple 4 -->\r\n<title>2 erreurs \u2013 Inscription \u2013 Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- Exemple 5 -->\r\n<title>21 r\u00e9sultats pour \u201crobes\u201d \u2013 Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- Exemple 6 -->\r\n<title>Page 2 \u2013 R\u00e9sultats de recherche \u2013 Magasin de v\u00eatements Renaud</title>\r\n```\r\n\r\nParfois, il faut travailler pour s'orienter sur un site Web, par exemple lorsque les utilisateurs atterrissent sur une page provenant d'une ressource externe comme un moteur de recherche ou si des changements de page se produisent de fa\u00e7on inattendue ou inopin\u00e9e. C'est particuli\u00e8rement vrai pour les applications \u00e0 page unique (SPA), o\u00f9 la navigation sur les pages fonctionne diff\u00e9remment de la plupart des sites.\r\n\r\nLe titre de la page est l'un des \u00e9l\u00e9ments essentiels d'un document HTML, et les utilisateurs b\u00e9n\u00e9ficient d'un titre de page bien form\u00e9 et descriptif.\r\n\r\nLes utilisateurs du lecteur d'\u00e9cran peuvent utiliser des raccourcis pour annoncer le titre de la page. Par exemple, s'ils cliquent sur un lien dans une SPA et que le contenu change, mais qu'il n'y a pas d'annonce de changement, ils peuvent utiliser un raccourci pour s'orienter et v\u00e9rifier s'ils ont atterri sur une autre page. Vous pouvez essayer vous-m\u00eame en utilisant l'un des raccourcis du [tableau 1](#tableau-1).\r\n\r\n<table id=\"tableau-1\">\r\n    <caption>Diff\u00e9rentes fa\u00e7ons d'annoncer le titre de la page avec les lecteurs d'\u00e9cran.</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Commande</th>\r\n            <th scope=\"col\">Annonce</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>JAWS</td>\r\n            <td><code>Ins</code> + <code>T</code></td>\r\n            <td>Titre de la page</td>\r\n        </tr>\r\n        <tr>\r\n            <td>NVDA</td>\r\n            <td><code>Ins</code> + <code>T</code></td>\r\n            <td>Titre de la page</td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver macOS</td>\r\n            <td><code>VO</code> + <code>Shift</code> + <code>I</code></td>\r\n            <td>R\u00e9sum\u00e9 de la page, y compris le titre de la page</td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver macOS</td>\r\n            <td><code>VO</code> + <code>F</code></td>\r\n            <td>Titre de la page</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n**Note** : Par d\u00e9faut , VO correspond \u00e0 la combinaison des pressions simultan\u00e9es sur `Control` et `Option` dans VoiceOver sur macOS. Tu peux aussi faire correspondre `VO` \u00e0 `Caps Lock` dans les <a href=\"https://support.apple.com/en-gb/guide/voiceover/unac048/10/mac/14.0\" target=\"_blank\">param\u00e8tres de VoiceOver Utility</a>.\r\n\r\nIl y a d'autres raisons d'\u00e9crire de bons titres de page : ils servent d'\u00e9tiquettes pour les pages de signets/favoris, et les moteurs de recherche utilisent le titre dans leurs pages de r\u00e9sultats. Les sites de m\u00e9dias sociaux, les applications de chat et de messagerie et les logiciels similaires utilisent le titre dans les aper\u00e7us de liens lorsqu'aucun autre titre n'est sp\u00e9cifi\u00e9. Il convient de noter que la m\u00e9tabalise open graph pr\u00e9sent\u00e9e dans l'[exemple 2](#exemple-2) n'est pas une alternative \u00e0 l'\u00e9l\u00e9ment `<title>`. C'est au site ou \u00e0 l'application d'interpr\u00e9ter ou non le titre open graph. Id\u00e9alement, le contenu du titre natif devrait \u00eatre suffisamment bon pour r\u00e9pondre \u00e0 tous les besoins.\r\n\r\nIl existe plusieurs bonnes pratiques que vous devez suivre lorsque vous r\u00e9digez des titres de pages.\r\n\r\n## Le titre doit \u00eatre unique\r\n\r\nLe `<title>` sert d'\u00e9tiquette dans les onglets ou les fen\u00eatres du navigateur. Les titres uniques permettent de distinguer une page d'une autre si plusieurs onglets du m\u00eame site sont ouverts. Un probl\u00e8me fr\u00e9quent est que le titre est le m\u00eame sur toutes les pages (voir [exemple 7](#exemple-7)).\r\n\r\n**<span id=\"exemple-7\">Exemple 7</span>&nbsp;&ndash;&nbsp;Mauvaise pratique - Trois pages diff\u00e9rentes avec le m\u00eame titre.**\r\n```html\r\n<!-- produits.html -->\r\n<title> Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- a-propos-de-nous.html -->\r\n<title> Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- contact.html -->\r\n<title> Magasin de v\u00eatements Renaud</title>\r\n```\r\nUtilisez des titres uniques pour communiquer le but de la page et am\u00e9liorer l'orientation (voir l'[exemple 8](#exemple-8)).\r\n\r\n**<span id=\"exemple-8\">Exemple 8</span>&nbsp;&ndash;&nbsp;Trois pages diff\u00e9rentes, chacune avec un titre unique**\r\n\r\n```html\r\n<!-- produits.html -->\r\n<title> Les produits - Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- a-propos-de-nous.html -->\r\n<title> Notre \u00e9quipe - Magasin de v\u00eatements Renaud</title>\r\n\r\n<!-- contact.html -->\r\n<title> Nous contacter - Magasin de v\u00eatements Renaud</title>\r\n```\r\n\r\nCela s'applique aux sites Web comportant plusieurs pages, mais aussi aux SPA. Il se peut que vous deviez prendre des mesures suppl\u00e9mentaires dans une SPA , mais si l'utilisateur navigue vers un itin\u00e9raire diff\u00e9rent, le titre de la page doit \u00e9galement changer. Hidde De Vries explique comment faire cela dans \u00ab&nbsp;<a href=\"https://hidde.blog/accessible-page-titles-in-a-single-page-app/\" target=\"_blank\">Accessible page titles in a Single Page App</a>&nbsp;\u00bb.\r\n\r\n### Le titre doit \u00eatre concis\r\n\r\nLe titre de doit \u00eatre concis et d\u00e9crire avec pr\u00e9cision l'objectif de la page. C'est la premi\u00e8re information que re\u00e7oit un utilisateur de lecteur d'\u00e9cran lorsqu'il acc\u00e8de \u00e0 une page. Ils n'ont pas besoin d'un r\u00e9sum\u00e9 d\u00e9taill\u00e9 du contenu de la page, mais d'une description succincte.\r\n\r\nUne autre raison de limiter la longueur du titre est qu'il est g\u00e9n\u00e9ralement coup\u00e9 dans les pages de r\u00e9sultats de recherche \u00e0 partir d'une certaine longueur de caract\u00e8res (environ 50 \u00e0 60 caract\u00e8res).\r\n\r\n### Le titre doit \u00eatre descriptif\r\n\r\nLorsque vous donnez un titre \u00e0 une page, faites-le en pensant \u00e0 l'utilisateur. Bien que le r\u00e9f\u00e9rencement soit important, l'exp\u00e9rience de l'utilisateur est bien plus importante. Le titre doit d\u00e9crire l'objectif de la page et ne doit pas inclure de termes de marketing ou de r\u00e9f\u00e9rencement dans le seul but d'am\u00e9liorer le classement de la page.\r\n\r\n### Les informations pertinentes viennent en premier\r\n\r\nLe titre doit commencer par le nom de la page, suivi du nom du site, de l'entreprise ou de l'organisation, comme le montre l'[exemple 2](#exemple-2). Le fait de placer les informations pertinentes en premier r\u00e9duit les r\u00e9p\u00e9titions pour les utilisateurs de lecteurs d'\u00e9cran qui visitent plusieurs pages d'un site, car ils obtiennent d'abord les d\u00e9tails sp\u00e9cifiques \u00e0 la page. Cette fa\u00e7on d'organiser le contenu facilite le balayage et l'identification des pages lorsque de nombreux onglets sont ouverts.\r\n\r\nNe mettez pas le nom de l'organisation en premier (comme dans l'[exemple 9](#exemple-9)) car les informations pertinentes risquent d'\u00eatre coup\u00e9es\r\n\r\n**<span id=\"exemple-9\">Exemple 9</span> : Mauvaise pratique - Nom du site suivi du nom de la page.**\r\n\r\n```html\r\n<title>Magasin Renaud - Produits</title>\r\n```\r\n### Informations d\u00e9pendantes du contexte\r\n\r\nParfois, il est utile d'ajouter un contexte ou des informations suppl\u00e9mentaires. Par exemple, si vous divisez une page en plusieurs \u00e9tapes, le titre doit inclure l'\u00e9tape en cours. L'[exemple 4](#exemple-3-6) montre le titre de la troisi\u00e8me des quatre \u00e9tapes d'un processus de paiement. S'il y a des erreurs de validation dans un formulaire, vous pouvez indiquer le nombre d'erreurs. Pour les pages de r\u00e9sultats de recherche, vous pouvez ajouter le nombre de r\u00e9sultats ou la page actuelle.\r\n",
      "created": "2025-06-02T14:41:36.666000",
      "updated": "2025-06-02T16:49:32.014030",
      "meta_description": "Comment r\u00e9diger des titres de pages HTML accessibles et utiles pour les lecteurs d\u2019\u00e9cran.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 8,
      "title": "Flask - chapitre 1 : Hello world !",
      "slug": "flask-chapitre-1-hello-world",
      "body": "\u00ab Flask, c\u2019est amusant. \u00bb Cette d\u00e9claration audacieuse est l'une des premi\u00e8res choses que vous verrez en consultant la documentation officielle de Flask et, au fil de ce tuto, vous comprendrez pourquoi tant de d\u00e9veloppeurs Python sont du m\u00eame avis.\r\n\r\n## Qu\u2019est-ce que Flask ?\r\nFlask est un framework Web l\u00e9ger \u00e9crit en Python. Il a commenc\u00e9 comme une blague du 1er avril, avant de devenir un outsider tr\u00e8s populaire dans le monde des frameworks web en Python.\r\nAujourd\u2019hui, c\u2019est l\u2019un des frameworks Python les plus utilis\u00e9s par les start-ups, et il est de plus en plus reconnu comme l\u2019outil id\u00e9al pour d\u00e9velopper des solutions simples et rapides dans la plupart des entreprises.\r\nAu c\u0153ur de Flask, on trouve un ensemble de biblioth\u00e8ques puissantes permettant de g\u00e9rer les t\u00e2ches les plus courantes du d\u00e9veloppement web, telles que :\r\n\r\n- Le routage d\u2019URL, qui permet de lier facilement des URLs \u00e0 votre code\r\n- Le rendu de templates avec Jinja2, l\u2019un des moteurs de templates Python les plus puissants\r\n- La gestion des sessions et la s\u00e9curisation des cookies\r\n- L\u2019analyse des requ\u00eates HTTP et une gestion flexible des r\u00e9ponses\r\n- Un d\u00e9bogueur interactif accessible via le navigateur\r\n- Une gestion de configuration d\u2019application simple, souple et facile \u00e0 utiliser\r\n\r\nCe tuto vous apprendra \u00e0 utiliser ces outils \u00e0 travers des exemples pratiques et concrets. Nous aborderons \u00e9galement des biblioth\u00e8ques tierces couramment utilis\u00e9es pour les fonctionnalit\u00e9s que Flask ne propose pas en natif, comme l\u2019acc\u00e8s aux bases de donn\u00e9es ou la validation de formulaires. \u00c0 la fin de ce tuto, vous serez pr\u00eat \u00e0 vous lancer dans votre prochain grand projet avec Flask.\r\n\r\n### Une grande libert\u00e9 implique une grande responsabilit\u00e9\r\n\r\nComme le dit la documentation, Flask, c\u2019est amusant, mais cela peut aussi \u00eatre un d\u00e9fi, en particulier lorsque vous d\u00e9veloppez une application de grande envergure. Contrairement \u00e0 d\u2019autres frameworks web populaires en Python, comme Django, Flask n\u2019impose pas de structure particuli\u00e8re pour organiser vos modules ou votre code. Si vous avez d\u00e9j\u00e0 utilis\u00e9 d\u2019autres frameworks web, vous pourriez \u00eatre surpris de constater que d\u00e9velopper avec Flask ressemble davantage \u00e0 \u00e9crire du Python pur qu\u2019\u00e0 remplir un canevas impos\u00e9 par le framework.\r\n\r\nCe tuto vous apprendra \u00e0 utiliser Flask pour \u00e9crire des applications claires et expressives.\r\nAu fil de votre progression, non seulement vous deviendrez un d\u00e9veloppeur Flask exp\u00e9riment\u00e9, mais vous renforcerez aussi vos comp\u00e9tences en d\u00e9veloppement Python\r\n\r\n## Mise en place d\u2019un environnement de d\u00e9veloppement\r\n\r\nFlask est \u00e9crit en Python, donc avant de commencer \u00e0 cr\u00e9er des applications Flask, nous devons nous assurer que Python est install\u00e9. La plupart des distributions Linux et les versions r\u00e9centes de macOS sont livr\u00e9es avec Python pr\u00e9install\u00e9.\r\nLes exemples de ce tuto n\u00e9cessitent Python 3.x. Des instructions pour installer Python sont disponibles \u00e0 l\u2019adresse suivante : <a href=\"http://www.python.org\" target=\"_blank\">http://www.python.org</a>.\r\n\r\nSi c\u2019est la premi\u00e8re fois que vous utilisez Python, de nombreuses ressources gratuites et de qualit\u00e9 sont disponibles sur le web.\r\nJe vous recommande <a href=\"https://inforef.be/swi/download/apprendre_python3_5.pdf\" target=\"_blank\">Apprendre \u00e0 programmer avec Python 3</a>, de G\u00e9rard Swinnen, accessible gratuitement.\r\n\r\nVous pouvez v\u00e9rifier que Python est install\u00e9 et que vous disposez de la bonne version en lan\u00e7ant l\u2019interpr\u00e9teur interactif Python depuis un terminal :\r\n\r\n```bash\r\n$python3\r\nPython 3.9.2 (default, Mar 20 2025, 02:07:39) \r\n[GCC 10.2.1 20210110] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> \r\n```\r\n\r\n\u00c0 l\u2019invite de commande (`>>>`), tapez `exit()` puis appuyez sur Entr\u00e9e pour quitter l\u2019interpr\u00e9teur.\r\n\r\n### Installation de packages Python\r\n\r\nMaintenant que vous vous \u00eates assur\u00e9 que Python est correctement install\u00e9, nous allons installer quelques packages Python populaires qui seront utilis\u00e9s tout au long de ce tuto.\r\n\r\nNous allons d\u2019abord installer ces packages \u00e0 l\u2019\u00e9chelle du syst\u00e8me, mais une fois cela fait, nous travaillerons exclusivement dans des environnements virtuels.\r\n\r\n### Installation de pip\r\n\r\nL\u2019installateur de packages Python de r\u00e9f\u00e9rence est `pip`. Nous l\u2019utiliserons tout au long de ce tuto pour installer Flask et d\u2019autres biblioth\u00e8ques tierces.\r\n\r\nSi vous avez d\u00e9j\u00e0 `setuptools` install\u00e9, vous pouvez installer `pip` en lan\u00e7ant simplement la commande suivante :\r\n\r\n```bash\r\n$sudo easy_install pip\r\n```\r\nApr\u00e8s avoir termin\u00e9 l\u2019installation, v\u00e9rifiez que pip est correctement install\u00e9 :\r\n\r\n```bash\r\n$pip --version\r\npip 22.1 from /home/$user/.local/lib/python3.9/site-packages/pip (python 3.9)\r\n```\r\n\r\nLes num\u00e9ros de version sont susceptibles d\u2019\u00e9voluer, donc pour un guide d\u00e9finitif, veuillez consulter les instructions officielles disponibles \u00e0 l\u2019adresse suivante : <a href=\"http://www.pip-installer.org/en/latest/installing.html\" target=\"_blank\">http://www.pip-installer.org/en/latest/installing.html</a>.\r\n\r\n### Installation de virtualenv\r\n\r\nUne fois `pip` install\u00e9, nous pouvons passer \u00e0 l\u2019installation de l\u2019outil le plus important dans la bo\u00eete \u00e0 outils de tout d\u00e9veloppeur Python : `virtualenv`. `Virtualenv` facilite la cr\u00e9ation d\u2019environnements Python isol\u00e9s, chacun avec ses propres copies des packages syst\u00e8me et tiers.\r\n\r\n### Pourquoi utiliser virtualenv ?\r\n\r\n`Virtualenv` r\u00e9sout plusieurs probl\u00e8mes li\u00e9s \u00e0 la gestion des packages. Imaginez que vous ayez une vieille application construite avec une toute premi\u00e8re version de Flask, et que vous souhaitiez cr\u00e9er un nouveau projet avec la version la plus r\u00e9cente de Flask.\r\nSi Flask est install\u00e9 \u00e0 l\u2019\u00e9chelle du syst\u00e8me, vous seriez oblig\u00e9 soit de mettre \u00e0 jour votre ancien projet, soit d\u2019\u00e9crire votre nouveau projet en utilisant l\u2019ancienne version de Flask. Si les deux projets utilisaient `virtualenv`, chacun pourrait fonctionner avec sa propre version de Flask, sans conflits ni probl\u00e8mes. `Virtualenv` facilite le contr\u00f4le des versions des packages tiers utilis\u00e9s par votre projet.\r\n\r\nAutre point important : installer des packages \u00e0 l\u2019\u00e9chelle du syst\u00e8me n\u00e9cessite g\u00e9n\u00e9ralement des privil\u00e8ges \u00e9lev\u00e9s (par exemple, `sudo pip install foo`). En utilisant `virtualenv`, vous pouvez cr\u00e9er des environnements Python et installer des packages en tant qu\u2019utilisateur normal. Cela est particuli\u00e8rement utile si vous d\u00e9ployez sur un h\u00e9bergement mutualis\u00e9 ou si vous n\u2019avez pas les droits d\u2019administrateur.\r\n\r\n### Installation de virtualenv avec pip\r\n\r\nNous allons utiliser pip pour installer `virtualenv` ; comme il s\u2019agit d\u2019un package Python standard, il peut \u00eatre install\u00e9 comme n\u2019importe quel autre package Python. Pour vous assurer que virtualenv est install\u00e9 \u00e0 l\u2019\u00e9chelle du syst\u00e8me, ex\u00e9cutez la commande suivante (qui n\u00e9cessite des privil\u00e8ges \u00e9lev\u00e9s) :\r\n\r\n```bash\r\n$sudo pip install virtualenv\r\n$virtualenv --version\r\nvirtualenv 20.14.1 from /home/$user/.local/lib/python3.9/site-packages/virtualenv/__init__.py\r\n```\r\n\r\nLes num\u00e9ros de version sont susceptibles d\u2019\u00e9voluer, donc pour un guide d\u00e9finitif, veuillez consulter les instructions officielles sur : <a href=\"http://virtualenv.org\" target=\"_blank\">http://virtualenv.org</a>.\r\n\r\n## Cr\u00e9er votre premi\u00e8re application Flask\r\n\r\nMaintenant que nous avons install\u00e9 les outils n\u00e9cessaires, nous sommes pr\u00eats \u00e0 cr\u00e9er notre premi\u00e8re application Flask.\r\nPour commencer, cr\u00e9ez un r\u00e9pertoire \u00e0 un emplacement pratique qui contiendra tous vos projets Python.\r\nDans le terminal ou l\u2019invite de commande, placez-vous dans ce r\u00e9pertoire ; pour ma part, c\u2019est /home/$user/projects, ou simplement ~/projects sur les syst\u00e8mes Unix.\r\n\r\n```bash\r\n$mkdir projects\r\n$cd projects\r\n```\r\nNous allons maintenant cr\u00e9er un environnement virtuel (`virtualenv`). Les commandes ci-dessous vont cr\u00e9er un nouveau r\u00e9pertoire nomm\u00e9 hello_flask \u00e0 l\u2019int\u00e9rieur de votre dossier de projets, contenant un environnement Python complet et isol\u00e9.\r\n\r\n```bash\r\n$virtualenv venv\r\n```\r\nVous devriez avoir un nouveau dossier du nom de `venv` \u00e0 la racine de `~ /projects`. Maintenant, il va falloir activer cet environnement virtuel. \r\n\r\n```bash\r\n$source venv/bin/activate\r\n```\r\nVous devriez constater que votre prompt dans votre terminal a chang\u00e9. En effet, avant les droits, le nom du dossier `venv` est entre parenth\u00e8ses. \r\n\r\n**note**: Dans un environnement Microsoft, \u00e7a n'est pas le cas ! \r\n```bash\r\n(venv) user@host:~/projects$ \r\n```\r\nLorsque vous activez un virtualenv, votre variable d\u2019environnement `PATH` est temporairement modifi\u00e9e afin de garantir que les packages que vous installez ou utilisez restent confin\u00e9s \u00e0 cet environnement virtuel.\r\n\r\n### Installer Flask dans votre virtualenv\r\n\r\nMaintenant que nous avons v\u00e9rifi\u00e9 que notre environnement virtuel est correctement configur\u00e9, nous pouvons installer Flask.\r\nLorsque vous \u00eates dans un virtualenv, **vous ne devez jamais installer de packages avec des privil\u00e8ges administrateur.**\r\nSi vous obtenez une erreur de permission lors de l\u2019installation de Flask, v\u00e9rifiez bien que votre virtualenv est activ\u00e9 correctement.\r\n\r\n```bash\r\n(venv)$ pip install Flask\r\n```\r\n\r\nVous verrez d\u00e9filer du texte pendant que pip t\u00e9l\u00e9charge le package Flask ainsi que ses d\u00e9pendances avant de les installer dans votre environnement virtuel. Flask d\u00e9pend de quelques biblioth\u00e8ques tierces suppl\u00e9mentaires, que pip t\u00e9l\u00e9chargera et installera automatiquement pour vous. V\u00e9rifions maintenant que tout a bien \u00e9t\u00e9 install\u00e9 :\r\n\r\n```bash\r\n(venv) user@host:~/projects$ python\r\nPython 3.9.2 (default, Mar 20 2025, 02:07:39) \r\n[GCC 10.2.1 20210110] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import flask\r\n>>> flask.__version__\r\n<stdin>:1: DeprecationWarning: The '__version__' attribute is deprecated and will be removed in Flask 3.2. Use feature detection or 'importlib.metadata.version(\"flask\")' instead.\r\n'3.1.1'\r\n>>> flask\r\n<module 'flask' from '/home/user/Bureau/temp_projects/venv/lib/python3.9/site-packages/flask/__init__.py'>\r\n>>> \r\n```\r\n\r\nF\u00e9licitations\u202f! Vous avez install\u00e9 Flask, et nous sommes maintenant pr\u00eats \u00e0 commencer \u00e0 coder.\r\n\r\n## Hello, Flask!\r\n\r\nCr\u00e9ez un nouveau fichier nomm\u00e9 `app.py` dans le r\u00e9pertoire de votre virtualenv `venv`. \u00c0 l\u2019aide de votre \u00e9diteur de texte ou IDE pr\u00e9f\u00e9r\u00e9, saisissez le code suivant :\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello, Flask!\"\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\nEnregistrez le fichier, puis ex\u00e9cutez app.py en le lan\u00e7ant depuis la ligne de commande. Vous devez vous assurer que votre environnement virtuel `venv` est bien activ\u00e9 :\r\n\r\n```bash\r\n(venv) user@host:~/projects$ python app.py \r\n * Serving Flask app 'app'\r\n * Debug mode: on\r\nWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.\r\n * Running on http://127.0.0.1:5000\r\nPress CTRL+C to quit\r\n * Restarting with stat\r\n * Debugger is active!\r\n * Debugger PIN: 110-019-933\r\n```\r\n\r\nLorsque vous ouvrez votre navigateur pr\u00e9f\u00e9r\u00e9 et que vous acc\u00e9dez \u00e0 l\u2019adresse `http://127.0.0.1:5000`, vous verrez s\u2019afficher une page blanche tr\u00e8s simple, sans mise en forme ni image, avec uniquement le message suivant au centre (ou en haut \u00e0 gauche selon le navigateur) :\r\n\r\n```\r\nHello, Flask!\r\n```\r\n\r\nCe rendu minimal est tout \u00e0 fait normal : Flask renvoie simplement une cha\u00eene de caract\u00e8res brute sans HTML ni CSS. C\u2019est le comportement de base d\u2019une route Flask renvoyant du texte simple.\r\n\r\n### Comprendre le code\r\n\r\nNous venons de cr\u00e9er une application Flask tr\u00e8s basique. Pour bien comprendre ce qui se passe, analysons ce code ligne par ligne :\r\n```python\r\nfrom flask import Flask\r\n```\r\nNotre application commence par importer la classe Flask. Cette classe repr\u00e9sente une application WSGI (Web Server Gateway Interface) unique, et c\u2019est l\u2019objet central de tout projet Flask.\r\n\r\n**Qu\u2019est-ce que WSGI ?**\r\n\r\nWSGI est le standard officiel pour les serveurs web Python, d\u00e9fini dans la **PEP 333**.\r\nOn peut le voir comme un ensemble de r\u00e8gles et de comportements que doivent respecter une application et un serveur pour qu\u2019ils puissent communiquer correctement.\r\n\r\nEn d\u2019autres termes, WSGI agit comme un interm\u00e9diaire :\r\n\r\n- entre ton code Python (ton app Flask),\r\n- et un serveur web (comme Gunicorn, uWSGI, ou m\u00eame le serveur de d\u00e9veloppement de Flask).\r\n\r\n**Bonne nouvelle** : Flask s\u2019occupe de toute cette complexit\u00e9 pour vous. Vous n\u2019avez pas besoin d\u2019impl\u00e9menter WSGI manuellement. Vous vous concentrez uniquement sur le d\u00e9veloppement de votre application, et Flask g\u00e8re l\u2019interface avec les serveurs.\r\n\r\n```python\r\napp = Flask(__name__)\r\n```\r\n\r\nDans cette ligne, nous cr\u00e9ons une instance de l'application Flask dans la variable app, en lui passant le nom de notre module (g\u00e9n\u00e9ralement via `__name__`).\r\n\r\n- `app` : c\u2019est le nom de la variable dans laquelle on stocke notre application Flask. Ce nom est une convention courante, mais on pourrait l\u2019appeler autrement si on le souhaite.\r\n- `Flask(__name__)` : on instancie Flask en lui passant `__name__`, qui est une variable sp\u00e9ciale contenant le nom du module actuel (par exemple `__main__` si vous ex\u00e9cutez le fichier directement).\r\n\r\n```python\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello, Flask!\"\r\n```\r\n\r\nDans les lignes pr\u00e9c\u00e9dentes, nous indiquons \u00e0 notre application Flask de diriger toutes les requ\u00eates vers / (l\u2019URL racine) vers cette fonction de vue (index). Une vue est simplement une fonction ou une m\u00e9thode qui retourne une r\u00e9ponse quelconque. Chaque fois que vous ouvrez un navigateur et acc\u00e9dez \u00e0 l\u2019URL racine de notre application, Flask appellera cette fonction de vue et enverra la valeur retourn\u00e9e au navigateur. Il y a quelques points \u00e0 noter concernant ces lignes de code :\r\n\r\n- `@app.route` est un d\u00e9corateur Python li\u00e9 \u00e0 la variable `app` d\u00e9finie pr\u00e9c\u00e9demment. Ce d\u00e9corateur (`app.route`) enveloppe la fonction suivante, ici `index`, afin de diriger les requ\u00eates pour une URL particuli\u00e8re vers une vue sp\u00e9cifique. Le nom `index` est choisi pour cette fonction car c\u2019est le nom courant pour la premi\u00e8re page qu\u2019un serveur web utilise. D\u2019autres noms possibles pourraient \u00eatre `homepage` ou `main`. Les d\u00e9corateurs sont un sujet riche et int\u00e9ressant pour les d\u00e9veloppeurs Python, donc si vous ne les connaissez pas encore, je vous recommande d\u2019utiliser votre moteur de recherche pr\u00e9f\u00e9r\u00e9 pour trouver un bon tutoriel.\r\n- La fonction `index` ne prend aucun argument. Cela peut sembler \u00e9trange si vous venez d\u2019autres frameworks web o\u00f9 l\u2019on attend souvent un objet requ\u00eate (`request`) ou quelque chose de similaire. Nous verrons dans les exemples suivants comment acc\u00e9der aux valeurs de la requ\u00eate.\r\n- Les lignes suivantes ex\u00e9cutent notre application en utilisant le serveur de d\u00e9veloppement int\u00e9gr\u00e9 en mode debug. L\u2019instruction `if` est une convention Python courante qui garantit que l\u2019application ne sera lanc\u00e9e que lorsque nous ex\u00e9cutons le script via `python app.py`, et ne sera pas lanc\u00e9e si nous essayons d\u2019importer cette application depuis un autre fichier Python.\r\n\r\n```python\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\n\r\n### Routes et requ\u00eates\r\n\r\nPour l\u2019instant, notre application Flask n\u2019est pas tr\u00e8s amusante, alors voyons les diff\u00e9rentes fa\u00e7ons d\u2019ajouter un comportement plus int\u00e9ressant \u00e0 notre application web. Une m\u00e9thode courante consiste \u00e0 ajouter un comportement r\u00e9actif, de sorte que notre application puisse examiner les valeurs pr\u00e9sentes dans l\u2019URL et les traiter.\r\n\r\nAjoutons une nouvelle route \u00e0 notre application Hello Flask appel\u00e9e hello. Cette nouvelle route affichera un message de bienvenue \u00e0 la personne dont le nom appara\u00eet dans l\u2019URL :\r\n\r\n```python\r\nfrom flask import Flask\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route(\"/\")\r\ndef hello():\r\n    return \"Hello, Flask!\"\r\n\r\n@app.route('/hello/<name>')\r\ndef hello(name):\r\n    return 'Hello, %s' % name\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True)\r\n```\r\nVoici une description possible du rendu dans le navigateur pour l\u2019URL http://127.0.0.1:5000/hello/Charlie. Lorsque vous ouvrez cette URL dans votre navigateur, vous voyez une page blanche avec un message simple et personnalis\u00e9 affich\u00e9 en texte noir, centr\u00e9 en haut de la page. Le message dit :\r\n\r\n```\r\nHello, Charlie\r\n```\r\n\r\nCe message est g\u00e9n\u00e9r\u00e9 dynamiquement par votre application Flask en utilisant la partie \u00ab Charlie \u00bb de l\u2019URL pour personnaliser le contenu affich\u00e9 \u00e0 l\u2019\u00e9cran. C\u2019est un exemple de contenu r\u00e9actif en fonction des param\u00e8tres d\u2019URL.\r\nDans l\u2019exemple pr\u00e9c\u00e9dent, la route que nous avons ajout\u00e9e sp\u00e9cifie un seul param\u00e8tre : `name`. Ce param\u00e8tre appara\u00eet \u00e9galement dans la d\u00e9claration de la fonction en tant que seul argument. Flask associe automatiquement l\u2019URL `/hello/Charlie` \u00e0 la vue `hello` ; cela s\u2019appelle le mapping. Il passe ensuite la cha\u00eene de caract\u00e8res \u00ab Charlie \u00bb \u00e0 notre fonction de vue en tant qu\u2019argument.\r\n\r\nQue se passe-t-il si nous naviguons vers `http://127.0.0.1:5000/hello/` sans sp\u00e9cifier de nom ? Comme vous pouvez le voir, le serveur de d\u00e9veloppement Flask renverra une r\u00e9ponse 404, indiquant que l\u2019URL ne correspond \u00e0 aucune route connue.\r\n\r\n### Lecture des valeurs de la requ\u00eate\r\n\r\nEn plus de l'URL, des valeurs peuvent \u00eatre transmises \u00e0 votre application via la cha\u00eene de requ\u00eate (query string). Celle-ci est compos\u00e9e de paires cl\u00e9-valeur arbitraires ajout\u00e9es \u00e0 la fin de l'URL, apr\u00e8s un point d'interrogation&nbsp;(`?`).\r\n<table>\r\n    <caption>Tableau : liste d'urls avec des querystrings</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">URL</th>\r\n            <th scope=\"col\">Valeurs des arguments</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>/hello/?name=Charlie</td>\r\n            <td>name: Charlie</td>\r\n        </tr>\r\n        <tr>\r\n            <td>/hello/?name=Charlie&favorite_color=green</td>\r\n            <td>\r\n                name: Charlie <br>\r\n                favorite_color: green\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\nPour acc\u00e9der \u00e0 ces valeurs dans vos fonctions de vue, Flask fournit un objet request qui encapsule toutes les informations sur la requ\u00eate `HTTP` en cours.\r\n\r\nDans l'exemple suivant, nous allons modifier notre vue `hello` pour qu'elle r\u00e9agisse \u00e9galement aux noms pass\u00e9s via la cha\u00eene de requ\u00eate. Si aucun nom n'est sp\u00e9cifi\u00e9 (ni dans l'URL ni dans les param\u00e8tres), nous renverrons une erreur 404.\r\n\r\n```python\r\nfrom flask import Flask, abort, request\r\n\r\n\r\napp = Flask(__name__)\r\n\r\n@app.route('/')\r\ndef index():\r\n    return 'Hello, Flask!'\r\n\r\n@app.route('/hello/<name>')\r\n@app.route('/hello/')\r\ndef hello(name=None):\r\n    if name is None:\r\n        # Si aucun nom n\u2019est sp\u00e9cifi\u00e9 dans l\u2019URL, tenter de le r\u00e9cup\u00e9rer depuis la cha\u00eene de requ\u00eate.\r\n        name = request.args.get('name')\r\n        if name:\r\n            return 'Hello, %s' % name\r\n    else:\r\n        # Aucun nom n\u2019a \u00e9t\u00e9 sp\u00e9cifi\u00e9 dans l\u2019URL ni dans la cha\u00eene de requ\u00eate.\r\n        abort(404)\r\n\r\nif __name__ == '__main__':\r\n    app.run(debug=True, port=8000)\r\n```\r\n\r\nComme vous pouvez le voir, nous avons ajout\u00e9 un second d\u00e9corateur de route \u00e0 la vue `hello`. Flask permet d\u2019associer plusieurs routes URL \u00e0 une m\u00eame fonction de vue.\r\nPuisque notre nouvelle route (`/hello/`) ne contient pas de param\u00e8tre name, nous devons adapter la signature de la fonction `hello` pour rendre ce param\u00e8tre optionnel. Cela se fait en lui assignant une valeur par d\u00e9faut (`None`).\r\n\r\nLe corps de la fonction a \u00e9galement \u00e9t\u00e9 modifi\u00e9 pour v\u00e9rifier si un nom est pr\u00e9sent. Si aucun nom n\u2019est fourni via l\u2019URL dynamique, la fonction tente alors de le r\u00e9cup\u00e9rer dans les param\u00e8tres de la cha\u00eene de requ\u00eate (`request.args.get('name')`).\r\nSi le nom est trouv\u00e9, un message de bienvenue est retourn\u00e9. Dans le cas contraire, la fonction interrompt le traitement en retournant une erreur 404 \u2013 Page non trouv\u00e9e.\r\n\r\n## D\u00e9bogage d'applications Flask\r\n\r\nl est in\u00e9vitable que, t\u00f4t ou tard, nous introduisions un bug dans notre code.\r\nPuisque les bugs sont in\u00e9vitables, le mieux que nous puissions esp\u00e9rer en tant que d\u00e9veloppeurs est d'avoir de bons outils pour les diagnostiquer et les corriger rapidement. Heureusement, Flask int\u00e8gre un d\u00e9bogueur web extr\u00eamement puissant.\r\n\r\nLe d\u00e9bogueur de Flask permet d\u2019inspecter l\u2019\u00e9tat de votre application au moment m\u00eame o\u00f9 une erreur se produit, \u00e9liminant ainsi le besoin d\u2019ajouter des `print` ou des points d\u2019arr\u00eat manuellement.\r\n\r\nPour l\u2019activer, il suffit de lancer l\u2019application Flask en mode debug.\r\nCela peut se faire de plusieurs mani\u00e8res, mais nous l\u2019avons d\u00e9j\u00e0 mis en place via le code suivant :\r\n\r\n```python\r\nif __name__ == '__main__':\r\n\tapp.run(debug=True)\r\n```\r\n\r\nPour tester cela, introduisons un bug dans l'application `hello_flask` en cr\u00e9ant une faute de frappe. Ici, j'ai simplement supprim\u00e9 le \"e\" final du nom de la variable :\r\n\r\n```python\r\n @app.route('/hello/<name>')\r\n@app.route('/hello/')\r\ndef hello(name=None):\r\n    if nam is None:\r\n        # Si aucun nom n\u2019est sp\u00e9cifi\u00e9 dans l\u2019URL, tenter de le r\u00e9cup\u00e9rer depuis la cha\u00eene de requ\u00eate.\r\n        name = request.args.get('name')\r\n        if name:\r\n            return 'Hello, %s' % name\r\n    else:\r\n        # Aucun nom n\u2019a \u00e9t\u00e9 sp\u00e9cifi\u00e9 dans l\u2019URL ni dans la cha\u00eene de requ\u00eate.\r\n        abort(404)\r\n```\r\nLorsque nous lan\u00e7ons le serveur de d\u00e9veloppement et tentons d\u2019acc\u00e9der \u00e0 notre vue, la page de d\u00e9bogage s\u2019affiche d\u00e9sormais. Cette liste de code s\u2019appelle une traceback (ou pile d\u2019appels) et elle est constitu\u00e9e de la pile des appels de fonctions imbriqu\u00e9s qui ont pr\u00e9c\u00e9d\u00e9 l\u2019erreur proprement dite. La traceback fournit en g\u00e9n\u00e9ral un indice pr\u00e9cieux sur ce qui a pu se passer.\r\nTout en bas, on voit la ligne de code que nous avons intentionnellement mal \u00e9crite, accompagn\u00e9e de l\u2019erreur Python g\u00e9n\u00e9r\u00e9e : une exception de type `NameError`, qui nous indique que `nam` n\u2019est pas d\u00e9fini.\r\n\r\nLa v\u00e9ritable magie op\u00e8re lorsque vous placez votre souris sur la ligne surlign\u00e9e. \u00c0 droite s\u2019affichent deux petites ic\u00f4nes repr\u00e9sentant un terminal et un fichier source. En cliquant sur l\u2019ic\u00f4ne `Source Code`, vous d\u00e9veloppez le code source autour de la ligne qui a g\u00e9n\u00e9r\u00e9 l\u2019erreur. C\u2019est tr\u00e8s utile pour replacer l\u2019erreur dans son contexte.\r\n\r\nL\u2019ic\u00f4ne Terminal est encore plus int\u00e9ressante. En cliquant dessus, une console interactive appara\u00eet avec l\u2019invite Python standard.\r\nCette console vous permet d\u2019inspecter en temps r\u00e9el la valeur des variables locales au moment o\u00f9 l\u2019exception s\u2019est produite.\r\nEssayez par exemple de taper `name` puis d\u2019appuyer sur Entr\u00e9e : si une valeur a \u00e9t\u00e9 sp\u00e9cifi\u00e9e dans l\u2019URL, elle devrait s\u2019afficher.\r\nOn peut \u00e9galement consulter les arguments de la requ\u00eate courante. Au fil des chapitres et de vos propres exp\u00e9rimentations, savoir diagnostiquer et corriger rapidement des bugs sera une comp\u00e9tence pr\u00e9cieuse.",
      "created": "2025-06-02T17:26:10.889073",
      "updated": "2025-06-23T00:35:09.256205",
      "meta_description": "D\u00e9couvrez Flask avec un Hello World simple et rapide : premiers pas pour cr\u00e9er une appli web en Python. Id\u00e9al d\u00e9butants. 1er chapitre d\u2019un tuto complet.",
      "status_id": 2,
      "categories_id": 3
    },
    {
      "id": 9,
      "title": "D\u00e9finir la largeur de la fen\u00eatre",
      "slug": "definir-la-largeur-de-la-fenetre",
      "body": "Parfois, les utilisateurs de veulent zoomer sur une page parce qu'ils ne peuvent pas lire le texte ou parce qu'ils veulent voir quelque chose de plus pr\u00e8s. Ils ne peuvent pas le faire si les param\u00e8tres de la fen\u00eatre de visualisation interdisent le zoom. C'est particuli\u00e8rement probl\u00e9matique pour les personnes malvoyantes.\r\n\r\nConfigurez la balise m\u00e9ta viewport de mani\u00e8re \u00e0 ce qu'elle soit la plus flexible possible. \u00c9vitez les param\u00e8tres restrictifs.\r\n\r\nLa balise meta de l'[exemple 1](#exemple-1) fonctionne pour la plupart des sites Web et des applications Web. C'est tout ce dont vous avez besoin pour configurer les param\u00e8tres de viewport afin de construire un site web flexible, adaptatif et r\u00e9actif.\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span> La page utilise la largeur disponible de l'appareil comme largeur de la fen\u00eatre de visualisation**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n```\r\n\r\nIl existe des propri\u00e9t\u00e9s ou des valeurs sp\u00e9cifiques que vous devez \u00e9viter.\r\n\r\nD\u00e9finir la valeur de la propri\u00e9t\u00e9 `width` \u00e0 une valeur autre que `device-width` peut causer des probl\u00e8mes. Si la largeur d\u00e9finie de la fen\u00eatre de visualisation est sup\u00e9rieure \u00e0 la largeur disponible sur l'\u00e9cran, le contenu peut d\u00e9border, ce qui entra\u00eene l'apparition de barres de d\u00e9filement horizontales. L '[exemple 2](#exemple-2) applique une largeur de fen\u00eatre explicite.\r\n\r\n**<span id=\"exemple-2\">Exemple 2</span>  Mauvaise pratique : Largeur de la fen\u00eatre de visualisation fix\u00e9e \u00e0 une valeur absolue.**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=500, initial-scale=1\">\r\n```\r\n\r\n`maximum-scale` vous permet de limiter le niveau de zoom maximum, qui est 10 par d\u00e9faut dans la plupart des navigateurs. Si vous le d\u00e9finissez sur 1, vous d\u00e9sactiverez le zoom dans certains navigateurs (voir [exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple 3</span>  Mauvaise pratique : Zoom d\u00e9sactiv\u00e9 en r\u00e9glant l'\u00e9chelle maximale sur 1**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width, maximum-scale=1, initial-scale=1\">\r\n```\r\nLe param\u00e8tre user-scalable d\u00e9finit si le zoom est autoris\u00e9. La valeur no ou 0 d\u00e9sactive le zoom, comme le montre l'[exemple 4](#exemple-4).\r\n\r\n**<span id=\"exemple-4\">Exemple 4</span>  Mauvaise pratique : D\u00e9sactiver le zoom en r\u00e9glant `user-scalable` sur \"no\"**\r\n\r\n```html\r\n<meta name=\"viewport\" content=\"width=device-width, user-scalable=no, initial-scale=1\">\r\n```\r\n\r\nLes utilisateurs doivent pouvoir personnaliser leur exp\u00e9rience de navigation en fonction de leurs pr\u00e9f\u00e9rences et de leurs besoins. Les navigateurs offrent diff\u00e9rents param\u00e8tres et fonctionnalit\u00e9s pour y parvenir. La possibilit\u00e9 de d\u00e9finir des tailles de police plus grandes ou de zoomer sur la page est essentielle, mais de nombreux sites Web interdisent le zoom sur les appareils portables.\r\n\r\nAvant que le responsive web design ne devienne une r\u00e9alit\u00e9, les sites web \u00e9taient con\u00e7us pour des \u00e9crans de grande taille, utilisant souvent des valeurs de largeur fixes comme `960px` ou `1024px` pour le corps ou le contenu principal de la page. Avec l'essor des smartphones et autres appareils portables, cela est devenu un probl\u00e8me car les largeurs de pixels des \u00e9crans de ces appareils \u00e9taient g\u00e9n\u00e9ralement beaucoup plus petites que `960px`. Le <a href=\"https://www.w3.org/TR/CSS2/visudet.html#containing-block-details\" target=\"_blank\">bloc contenant initial</a>, le rectangle dans lequel vit l'\u00e9l\u00e9ment racine (`<html>`), a les dimensions de la fen\u00eatre d'affichage. Si la page est plus grande que la fen\u00eatre de visualisation, il peut en r\u00e9sulter <a href=\"https://drafts.csswg.org/css-viewport/#intro\" target=\"_blank\">une mise en page involontaire, un contenu tronqu\u00e9 et des limites de d\u00e9filement d\u00e9sagr\u00e9ables</a>. C'est pourquoi les navigateurs mobiles utilisent g\u00e9n\u00e9ralement une largeur fixe (g\u00e9n\u00e9ralement `980px` \u00e0 `1024px`) pour le bloc initial. La pr\u00e9sentation r\u00e9sultante est ensuite r\u00e9duite pour s'adapter \u00e0 l'espace disponible sur l'\u00e9cran. Cela att\u00e9nue les probl\u00e8mes, mais cela signifie aussi que la taille des pixels CSS sur ces pages sera beaucoup plus petite, ce qui obligera les utilisateurs \u00e0 zoomer.\r\n\r\nSur les sites Web r\u00e9actifs, ce n'est pas un probl\u00e8me, car ils ont \u00e9t\u00e9 con\u00e7us pour fonctionner correctement sur des interfaces d'affichage vari\u00e9es. Cependant, tu dois changer la largeur fixe du bloc contenant sur les appareils mobiles en une largeur relative aux dimensions de la fen\u00eatre de visualisation pour qu'elle fonctionne bien avec les conceptions r\u00e9actives. Tu peux le faire en utilisant la balise viewport `meta`, comme illustr\u00e9 dans l['exemple 1](#exemple-1).\r\n\r\n`width=device-width` d\u00e9finit la largeur de la fen\u00eatre de visualisation en fonction de la largeur disponible de l'appareil.\r\n\r\n`initial-scale=1` garantit que le niveau de zoom par d\u00e9faut est de 100 %. Il se peut que ce ne soit pas toujours la valeur par d\u00e9faut dans tous les navigateurs. C'est pourquoi je recommande de le d\u00e9finir explicitement.\r\n\r\nLe fait qu'une page soit responsive et optimis\u00e9e pour les petits viewports ne signifie pas que les utilisateurs ne voudront pas zoomer. Adrian Roselli \u00e9num\u00e8re plusieurs raisons pour lesquelles la possibilit\u00e9 de zoomer est essentielle dans son article \u00ab&nbsp;<a href=\"https://adrianroselli.com/2015/10/dont-disable-zoom.html\" target=\"_blank\">Don't Disable Zoom</a>&nbsp;\u00bb :\r\n\r\n- Le texte peut \u00eatre trop petit pour que l'utilisateur puisse le lire.\r\n- L'utilisateur peut vouloir voir plus de d\u00e9tails dans une image.\r\n- La s\u00e9lection des mots \u00e0 copier/coller peut \u00eatre plus facile pour les utilisateurs lorsque le texte est plus grand.\r\n- L'utilisateur veut recadrer les \u00e9l\u00e9ments anim\u00e9s hors de la vue pour r\u00e9duire les distractions.\r\n- Le d\u00e9veloppeur a fait un mauvais travail de conception responsive, et l'utilisateur doit zoomer juste pour utiliser la page.\r\n- Il y a un bug dans le navigateur qui fait que le niveau de zoom par d\u00e9faut est bizarre.\r\n- Cela peut \u00eatre d\u00e9routant pour les utilisateurs lorsque le navigateur interpr\u00e8te un geste de pincement/\u00e9cartement comme quelque chose d'autre.\r\n\r\nLes sites web qui d\u00e9sactivent le zoom sont un probl\u00e8me r\u00e9pandu. Selon le chapitre sur l'accessibilit\u00e9 de <a href=\"https://almanac.httparchive.org/en/2022/accessibility#zooming-and-scaling\" target=\"_blank\">l'Almanach du Web 2022</a>, 23 % des pages d'accueil de bureau et 28 % des pages d'accueil mobiles tentent de d\u00e9sactiver le zoom. L'auteur du rapport utilise le terme tentative, car certains navigateurs, comme Safari sur iOS ou Samsung Internet sur Android, ignorent les propri\u00e9t\u00e9s `maximum-scale=1` et `user-scalable=no`. Chrome et Firefox ne le font pas, mais les utilisateurs peuvent <a href=\"https://www.matuzo.at/blog/2022/please-stop-disabling-zoom/\" target=\"_blank\">forcer le zoom dans les param\u00e8tres de leur navigateur</a>. Dans Firefox, trouve les param\u00e8tres du navigateur, s\u00e9lectionne \"Accessibilit\u00e9\" et active \u00ab&nbsp;Zoom sur tous les sites web&nbsp;\u00bb. Dans Chrome, trouve les param\u00e8tres du navigateur, s\u00e9lectionne \"Accessibilit\u00e9\" et coche \u00ab&nbsp;Forcer l'activation du zoom&nbsp;\u00bb.\r\n\r\n**Raisons justifi\u00e9es de d\u00e9sactiver le zoom**\r\n\r\nSur le site web moyen, il n'y a pas de bonne raison de d\u00e9sactiver le zoom. Il en va de m\u00eame pour les sites web de type app qui ressemblent \u00e0 des apps natives. Il existe de rares exceptions o\u00f9 les gestes pour zoomer interf\u00e9reraient avec les fonctionnalit\u00e9s du site web. Un exemple serait un site qui ne contient qu'une carte interactive. Si c'est le cas, il peut \u00eatre acceptable de d\u00e9sactiver la fonction de zoom native, mais vous devez fournir une solution alternative personnalis\u00e9e .\r\n",
      "created": "2025-06-02T21:14:57.989721",
      "updated": "2025-06-02T21:39:51.082662",
      "meta_description": "Configurez la balise viewport pour un site responsive accessible, sans bloquer le zoom. Bonnes et mauvaises pratiques illustr\u00e9es.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 10,
      "title": "Optimiser l'ordre de rendu",
      "slug": "optimiser-l-ordre-de-rendu",
      "body": "L'en-t\u00eate d'un document peut contenir divers \u00e9l\u00e9ments qui servent \u00e0 des fins diff\u00e9rentes : balises m\u00e9ta, scripts, liens vers d'autres ressources, et plus encore. Ils peuvent \u00eatre plac\u00e9s dans n'importe quel ordre, mais certains \u00e9l\u00e9ments doivent passer avant d'autres pour garantir de bonnes performances de chargement. Un chargement inefficace des ressources emp\u00eache les utilisateurs d'obtenir des informations rapidement, voire de les obtenir tout court.\r\n\r\nL'expert en performances Web Harry Roberts <a href=\"https://csswizardry.com/ct/\" target=\"_blank\">sugg\u00e8re un ordre sp\u00e9cifique</a> des \u00e9l\u00e9ments dans le site `<head>` pour garantir la meilleure strat\u00e9gie de chargement possible, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span> L'ordre id\u00e9al des \u00e9l\u00e9ments dans le `<head>`**\r\n```html\r\n<head>\r\n  <!-- Character encoding -->\r\n  <meta charset=\"UTF-8\">\r\n\r\n  <!-- Viewport meta tag -->\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n\r\n  <!-- CSP headers -->\r\n  <meta http-equiv=\"Content-Security-Policy\" content=\"upgrade-insecure-requests\">\r\n\r\n  <!-- Page title -->\r\n  <title>Magasin v\u00eatement Renaud</title>\r\n\r\n  <!-- preconnect -->\r\n  <link rel=\"preconnect\" href=\"#\" />\r\n\r\n  <!-- Asynchronous JavaScript -->\r\n  <script src=\"\" async></script>\r\n\r\n  <!-- CSS that includes @import -->\r\n  <style>\r\n    @import \"file.css\";\r\n  </style>\r\n\r\n  <!-- Synchronous JavaScript -->\r\n  <script src=\"\"></script>\r\n\r\n  <!-- Synchronous CSS -->\r\n  <link rel=\"stylesheet\" href=\"#\">\r\n\r\n  <!-- preload -->\r\n  <link rel=\"preload\" href=\"#\" />\r\n\r\n  <!-- Deferred JavaScript -->\r\n  <script src=\"\" defer></script>\r\n  <script src=\"\" type=\"module\"></script>\r\n\r\n  <!-- prefetch / prerender -->\r\n  <link rel=\"prefetch\" href=\"#\" />\r\n  <link rel=\"prerender\" href=\"#\" />\r\n\r\n  <!-- divers -->\r\n  <meta name=\"description\" content=\"\">\r\n</head>\r\n```\r\n\r\nIl existe diff\u00e9rents domaines au sein de la conception et du d\u00e9veloppement web, comme l'accessibilit\u00e9, la convivialit\u00e9, l'exp\u00e9rience utilisateur, la performance et la s\u00e9curit\u00e9. Ils se concentrent tous sur des choses diff\u00e9rentes, mais ils ne s'excluent pas mutuellement. L'accessibilit\u00e9, par exemple, recoupe tous ces domaines. Am\u00e9liorer l'accessibilit\u00e9 des champs de formulaire peut se traduire par une meilleure exp\u00e9rience utilisateur pour tout le monde. Si un site web se charge lentement, cela affecte l'exp\u00e9rience des utilisateurs et l'accessibilit\u00e9. Un site Web qui se charge trop longtemps ou pas du tout sur une connexion lente <a href=\"https://bell.bz/this-is-why-performance-matters/\" target=\"_blank\">n'est pas accessible</a>. Concevoir et construire des sites Web accessibles signifie cr\u00e9er des exp\u00e9riences inclusives sans barri\u00e8res qui emp\u00eachent les gens d'interagir avec le Web. Ces obstacles comprennent les handicaps physiques, temporaires et situationnels, ainsi que les restrictions socio-\u00e9conomiques concernant le mat\u00e9riel, la bande passante et la vitesse.\r\n\r\nLe fait de respecter l'ordre des \u00e9l\u00e9ments dans le site `<head>` a une incidence sur les performances en g\u00e9n\u00e9ral, mais aussi sur le rendu d'\u00e9l\u00e9ments sp\u00e9cifiques qui peuvent contenir des informations essentielles pour les utilisateurs de technologies d'assistance. Le HTML est analys\u00e9 ligne par ligne, ce qui signifie qu'un navigateur ne sait pas que la ligne 4 existe alors que la ligne 3 n'a pas fini d'\u00eatre analys\u00e9e. Si quelque chose bloque le rendu au d\u00e9but d'un document, les lignes suivantes doivent attendre que le navigateur ait fini d'analyser les lignes pr\u00e9c\u00e9dentes. L'ordre correct des \u00e9l\u00e9ments dans le site `<head>` est donc crucial pour les performances et l'accessibilit\u00e9 du Web.\r\n\r\nLes experts en performance sugg\u00e8rent plusieurs r\u00e8gles et optimisations, notamment :\r\n\r\n- Si quelque chose n'a pas besoin d'\u00eatre dans le site `<head>`, supprimez-le ou mettez-le dans le site `<body>`. Cela inclut les scripts de faible priorit\u00e9, les redirections ou toute charge utile inutile.\r\n- Auto-h\u00e9bergez autant que possible et ne comptez pas sur des r\u00e9seaux de diffusion de contenu (CDN) tiers. Harry Roberts explique pourquoi dans son article \u00ab&nbsp;<a href=\"https://csswizardry.com/2019/05/self-host-your-static-assets/\" target=\"_blank\">Self-Host Your Static Assets</a>&nbsp;\u00bb. \r\n- <a href=\"https://validator.w3.org/\" target=\"_blank\">Validez votre code HTML</a>, car les \u00e9l\u00e9ments non valides dans le `<head>` peuvent causer des probl\u00e8mes de performance.\r\n- Les m\u00e9tadonn\u00e9es sur la page, comme le codage des caract\u00e8res et les informations sur le viewport, passent en premier.\r\n- Rien de ce qui bloque le rendu ne doit venir avant le `<title>`.\r\n- Le JavaScript synchrone vient avant le CSS, parce que le CSS bloque l'ex\u00e9cution du JavaScript suivant.\r\n- \u00c9vitez @import dans les CSS.\r\n- Les balises m\u00e9ta de r\u00e9f\u00e9rencement et sociales passent en dernier.\r\n\r\nHarry Roberts a cr\u00e9\u00e9 un fichier CSS appel\u00e9 <a href=\"https://csswizardry.com/ct/\" target=\"_blank\">ct.css</a>, \u00e9galement disponible sous forme de bookmarklet, que tu peux utiliser pour effectuer des tests sur tes \u00e9l\u00e9ments `<head>`.",
      "created": "2025-06-02T22:03:08.850799",
      "updated": "2025-06-02T22:16:02.089880",
      "meta_description": "Optimisez l\u2019ordre des balises <head> pour un chargement web plus rapide, accessible et performant",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 11,
      "title": "Structure du document",
      "slug": "structure-du-document",
      "body": "Si une page ne contient pas suffisamment de r\u00e9gions s\u00e9mantiques, les utilisateurs risquent de ne pas comprendre comment elle est structur\u00e9e. Ce manque de balisage s\u00e9mantique les emp\u00eache d'utiliser des raccourcis pour naviguer plus efficacement.\r\n\r\nUtilisez *des points de rep\u00e8re*: des r\u00e9gions qui repr\u00e9sentent l'organisation et la structure d'une page web. Elles identifient g\u00e9n\u00e9ralement les zones auxquelles l'utilisateur peut vouloir acc\u00e9der rapidement.\r\n\r\nIl existe \u00e9galement des rep\u00e8res communs que vous utiliserez sur votre site, comme `<header>`, `<main>`, et `<footer>`. Chaque \u00e9l\u00e9ment de la page doit se trouver \u00e0 l'int\u00e9rieur de l'un de ces rep\u00e8res, comme le montre l['exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Structure exemplaire d'une page web**\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html lang=\"fr\">\r\n    <head>\r\n        <meta charset=\"UTF-8\">\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n        <title>Produits - Magasins de v\u00eatements Renaud</title>\r\n    </head>\r\n    <body>\r\n        <header>\r\n            <a href=\"/\">Magasins de v\u00eatements Renaud</a>\r\n            <nav aria-label=\"Main\">\r\n                <ul>\r\n                    <li><a href=\"/\">Accueil</a></li>\r\n                    <li><a href=\"/produits\" aria-current=\"page\">Nos produits</a></li>\r\n                    <li><a href=\"/notre-equipe\">Notre \u00e9quipe</a></li>\r\n                    <li><a href=\"/contacter\">Nous contacter</a></li>\r\n                </ul>\r\n            </nav>\r\n            <form role=\"search\">\r\n                <label for=\"search\">Chercher</label>\r\n                <input type=\"text\" id=\"search\">\r\n            </form>\r\n        </header>\r\n        <main id=\"content\">\r\n            <h1>Nos produits</h1>\r\n            <!-- etc. -->\r\n        </main>\r\n        <footer>&copy; 2025</footer>\r\n    </body>\r\n</html>\r\n```\r\n- `<header>` : L'en-t\u00eate du site (banni\u00e8re rep\u00e8re)\r\n- `<nav>` : La navigation principale (rep\u00e8re de navigation)\r\n- `<form>` : La recherche du site (rep\u00e8re de recherche)\r\n- `<main>` : Le contenu principal (rep\u00e8re principal)\r\n- `<footer>` : Le pied de page du site (rep\u00e8re contentinfo)\r\n\r\nL'utilisation d'\u00e9l\u00e9ments s\u00e9mantiques dans les composants et les r\u00e9gions d'une page est la base de tout site Web accessible, mais les utilisateurs peuvent \u00e9galement b\u00e9n\u00e9ficier de groupes s\u00e9mantiques plus importants. La page doit communiquer la fa\u00e7on dont elle est structur\u00e9e et regrouper les \u00e9l\u00e9ments communs \u00e0 l'ensemble du site et sp\u00e9cifiques \u00e0 la page. Les points de rep\u00e8re en HTML sont utiles \u00e0 cet \u00e9gard.\r\n\r\nVous pouvez d\u00e9finir des points de rep\u00e8re avec les \u00e9l\u00e9ments HTML appropri\u00e9s ou utiliser l'attribut `role` lorsqu'il n'existe pas d'\u00e9l\u00e9ment. Les \u00e9l\u00e9ments de l'[exemple 2](#exemple-2) sont s\u00e9mantiquement identiques.\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Deux rep\u00e8res de banni\u00e8re**\r\n\r\n```html\r\n<!-- <header> avec un r\u00f4le de banni\u00e8re implicite -->\r\n<header></header>\r\n\r\n<!-- <div> avec un r\u00f4le de banni\u00e8re explicite -->\r\n<div role=\"banner\"></div>\r\n```\r\n\r\n**Astuce** : La plupart des \u00e9l\u00e9ments s\u00e9mantiques en HTML v\u00e9hiculent deux informations : leur r\u00f4le accessible et un nom accessible. Le r\u00f4le d\u00e9finit de quel type d'\u00e9l\u00e9ment il s'agit : un bouton, un lien, une image, etc. Le nom accessible est un texte par lequel un logiciel peut identifier un composant, provenant du contenu textuel de l'\u00e9l\u00e9ment, d'un autre \u00e9l\u00e9ment associ\u00e9 comme `<label>`, ou d'un attribut comme `aria-label`, `aria-labelledby`, `alt`, ou `title`.\r\n\r\nSuivre <a href=\"https://www.w3.org/TR/using-aria/#firstrule\" target=\"_blank\">la premi\u00e8re r\u00e8gle d'utilisation des applications Internet riches accessibles (ARIA)</a> et pr\u00e9f\u00e9rer les \u00e9l\u00e9ments avec des r\u00f4les implicites \u00e0 l'utilisation de l'attribut role si la prise en charge du navigateur le permet. Les anciens navigateurs et lecteurs d'\u00e9cran qui ne prennent pas en charge les \u00e9l\u00e9ments avec des r\u00f4les implicites avaient besoin du r\u00f4le explicite suppl\u00e9mentaire, comme le montre l'[exemple 3](#exemple-3), mais il n'est plus n\u00e9cessaire de sp\u00e9cifier les deux.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;`<header>` avec un r\u00f4le de banni\u00e8re explicite suppl\u00e9mentaire**\r\n\r\n```html\r\n<header role=\"banner\"></header>\r\n```\r\n\r\nIl existe diff\u00e9rents types de r\u00e9gions qui servent d'autres objectifs dans des contextes diff\u00e9rents. Le [tableau 1](#table-1) dresse la liste des \u00e9l\u00e9ments HTML, des r\u00f4les ARIA correspondants et du contexte dans lequel ils sont expos\u00e9s en tant que points de rep\u00e8re.\r\n\r\n<table id=\"table-1\">\r\n    <caption>Tabelau 1 : Rep\u00e8res HTML et leurs r\u00f4les ARIA</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">\u00c9l\u00e9ment</th>\r\n            <th scope=\"col\">R\u00f4le d'ARIA</th>\r\n            <th scope=\"col\">Conditions</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td><code>header</code></td>\r\n            <td>banni\u00e8re</td>\r\n            <td>Uniquement dans le contexte de l'\u00e9l\u00e9ment body ; pas lorsqu'il s'agit d'un descendant de <code>article</code>, <code>aside</code>, <code>main</code>, <code>nav</code>, ou <code>section</code> (ou de tout autre \u00e9l\u00e9ment avec les r\u00f4les explicites correspondants).</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>nav</code></td>\r\n            <td>navigation</td>\r\n            <td> - </td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>main</code></td>\r\n            <td>principal</td>\r\n            <td> - </td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>section</code></td>\r\n            <td>r\u00e9gion</td>\r\n            <td>Lorsqu'il a un nom accessible.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>form</code></td>\r\n            <td>formulaire</td>\r\n            <td>Lorsqu'il a un nom accessible.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>search</code></td>\r\n            <td>recherche</td>\r\n            <td>Ou forme avec <code>role=\"search\"</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>aside</code></td>\r\n            <td>compl\u00e9mentaires</td>\r\n            <td> - </td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>footer</code></td>\r\n            <td>contentinfo</td>\r\n            <td>Uniquement dans le contexte de l'\u00e9l\u00e9ment body ; pas lorsqu'il s'agit d'un descendant de <code>article</code>, <code>aside</code>, <code>main</code>, <code>nav</code>, ou <code>section</code> (ou de tout autre \u00e9l\u00e9ment avec les r\u00f4les explicites correspondants).</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nIl y a de nombreuses raisons d'utiliser des points de rep\u00e8re. Les rep\u00e8res aident les utilisateurs de lecteurs d'\u00e9cran \u00e0 s'orienter sur la page. Le logiciel peut annoncer des points de rep\u00e8re lorsque les utilisateurs entrent ou sortent du contenu. Ils contiennent chaque \u00e9l\u00e9ment de la page pour aider les utilisateurs \u00e0 les d\u00e9couvrir.\r\n\r\nLes utilisateurs de lecteurs peuvent sauter d'un point de rep\u00e8re \u00e0 l'autre \u00e0 l'aide de raccourcis clavier ou de gestes, ce qui constitue un moyen pratique de passer \u00e0 des zones sp\u00e9cifiques sans interagir avec le reste de la page (voir [tableau 2](#table-2)).\r\n\r\nDans VoiceOver sur iOS, vous pouvez s\u00e9lectionner l'option \"rep\u00e8re\" dans le <a href=\"https://support.apple.com/en-gb/guide/voiceover/mchlp2719/mac\" target=\"_blank\">rotor</a>, qui vous donne un acc\u00e8s direct \u00e0 certains \u00e9l\u00e9ments de la page, et utiliser les gestes de balayage vers le haut et vers le bas pour naviguer entre les rep\u00e8res. Dans TalkBack sur Android, vous pouvez r\u00e9gler les commandes de lecture sur \"points de rep\u00e8re\" et balayer vers le haut et le bas pour naviguer. Dans NVDA sur Windows, vous pouvez appuyer sur `D` ou `Shift` + `D`, et dans JAWS sur `Windows`, `R` et `Shift` + `R` pour faire la m\u00eame chose (voir [Tableau 2](#table-2)).\r\n\r\n<table id=\"table-2\">\r\n    <caption>Tableau 2 : Raccourcis de navigation des points de rep\u00e8re</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Commande</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>NVDA</td>\r\n            <td><code>D</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>JAWS</td>\r\n            <td><code>R</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Narrateur</td>\r\n            <td><code>D</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver sur iOS</td>\r\n            <td>Rotor</td>\r\n        </tr>\r\n        <tr>\r\n            <td>TalkBack sur Android</td>\r\n            <td>Contr\u00f4les de lecture</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nCe sont surtout les utilisateurs de lecteurs d'\u00e9cran qui b\u00e9n\u00e9ficient de ces points de rep\u00e8re, mais des extensions de navigateur comme \u00ab&nbsp;<a href=\"http://matatk.agrip.org.uk/landmarks/\" target=\"_blank\">Landmark Navigation via Keyboard or Pop-up</a>&nbsp;\u00bb ajoutent des raccourcis clavier au navigateur, ce qui permet aux utilisateurs ne poss\u00e9dant pas de lecteur d'\u00e9cran d'acc\u00e9der aux points de rep\u00e8re.\r\n\r\nLes utilisateurs du lecteur d'\u00e9cran peuvent dresser la liste de tous les points de rep\u00e8re d'une page et y acc\u00e9der directement (voir [tableau 3](#table-3))\r\n\r\n<table id=\"table-3\">\r\n    <caption>Tableau 3 : Raccourcis pour lister toutes sortes d'\u00e9l\u00e9ments, tels que les points de rep\u00e8re.</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Commande</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>NVDA</td>\r\n            <td><code>Ins</code> + <code>F7</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>JAWS</td>\r\n            <td><code>Ins</code> + <code>Ctrl</code> + <code>R</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver sur iOS</td>\r\n            <td>Rotor</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nLes trois points de rep\u00e8re principaux les plus pertinents de sont `<header>`, `<main>`, et `<footer>`.\r\nLe site `<header>`, avec son r\u00f4le implicite `banner`, contient principalement du contenu orient\u00e9 vers le site plut\u00f4t que du contenu sp\u00e9cifique \u00e0 la page. Il s'agit g\u00e9n\u00e9ralement d'un logo, de liens de saut, de la navigation principale, de navigations secondaires, d'un widget de recherche et d'autres contenus pertinents et visibles sur chaque page.\r\n\r\nTous les `<header>` ne sont pas des points de rep\u00e8re. S'il est imbriqu\u00e9 dans `<article>`, `<aside>`, `<main>`, `<nav>`, ou `<section>`, il est s\u00e9mantiquement similaire \u00e0 un `<div>` et n'est plus consid\u00e9r\u00e9 comme un point de rep\u00e8re. Il est possible d'avoir plusieurs \u00e9l\u00e9ments `header` sur une page, mais il ne faut ajouter qu'un seul point de rep\u00e8re banner.\r\n\r\nEn g\u00e9n\u00e9ral, vous trouverez les rep\u00e8res `banner` au d\u00e9but du `<body>` dans le document. Visuellement, c'est g\u00e9n\u00e9ralement en haut de la page. C'est un sch\u00e9ma courant mais pas une r\u00e8gle stricte ; cela peut aussi ressembler \u00e0 une barre lat\u00e9rale. La position n'affecte pas son objectif s\u00e9mantique. Ce n'est pas parce qu'il est situ\u00e9 sur le c\u00f4t\u00e9 que son r\u00f4le doit changer.\r\n\r\nLe r\u00f4le implicite de l'\u00e9l\u00e9ment `<main>`  repr\u00e9sente le contenu principal de la page. Il ne doit y avoir qu'un seul \u00e9l\u00e9ment principal visible sur une page, et ses anc\u00eatres doivent \u00eatre limit\u00e9s \u00e0 html et body pour garantir une structure hi\u00e9rarchiquement correcte. Si n\u00e9cessaire, il est possible de l'envelopper dans des \u00e9l\u00e9ments `<div>`.\r\n\r\nSi vous travaillez avec une SPA comportant plusieurs \u00e9l\u00e9ments `<main>` sur une page, cache tous les \u00e9l\u00e9ments inactifs, comme le montre l'[exemple 4](#exemple-4). Le fait d'avoir plus d'un point de rep\u00e8re principal visible et accessible sur une page peut perturber les utilisateurs et les amener \u00e0 manquer du contenu parce qu'ils s'attendent g\u00e9n\u00e9ralement \u00e0 n'en avoir qu'un seul par page.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Plusieurs \u00e9l\u00e9ments `main`, mais un seul est visible**\r\n\r\n```html\r\n<main hidden>\r\n  <h1>Home</h1>\r\n</main>\r\n<main>\r\n  <h1>Products</h1>\r\n</main>\r\n<main hidden>\r\n  <h1>Team</h1>\r\n</main>\r\n<main hidden>\r\n  <h1>Contact</h1>\r\n</main>\r\n```\r\n\r\nLe r\u00f4le implicite `contentinfo` de l'\u00e9l\u00e9ment `<footer>` contient \u00e9galement du contenu orient\u00e9 vers le site. Il s'agit g\u00e9n\u00e9ralement de donn\u00e9es sur les droits d'auteur, de navigations secondaires et d'autres liens.\r\n\r\nComme pour `<header>`, `<footer>` n'est un point de rep\u00e8re que dans le contexte de `<body>`. S'il est imbriqu\u00e9 dans `<article>`, `<aside>`, `<main>`, `<nav>`, ou `<section>`, il n'est plus un point de rep\u00e8re. Il est possible d'avoir plusieurs \u00e9l\u00e9ments `footer` sur une page, mais il ne faut ajouter qu'un seul point de rep\u00e8re `contentinfo` .",
      "created": "2025-06-03T14:26:19.775914",
      "updated": "2025-06-03T17:00:57.675179",
      "meta_description": "Structure HTML accessible : facilitez la navigation avec des rep\u00e8res s\u00e9mantiques comme main, nav ou footer",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 12,
      "title": "Cr\u00e9er des rep\u00e8res de navigation",
      "slug": "creer-des-reperes-de-navigation",
      "body": "Quelle que soit la fa\u00e7on dont les utilisateurs acc\u00e8dent \u00e0 un site Web, ils doivent \u00eatre en mesure d'identifier les navigations. Sinon, ils risquent de ne pas pouvoir trouver le contenu qu'ils recherchent, s'orienter et naviguer. Identifiez les navigations et permettez un acc\u00e8s rapide aux groupes de liens importants, tels que la navigation principale ([exemple 1](#exemple-1)), les fils d'Ariane ([exemple 2](#exemple-2)), ou les navigations locales ([exemple 3](#exemple-3)).\r\n\r\n**<span id=\"exemple-1\">Exemple 1</span> La navigation principale d'un site**\r\n\r\n```html\r\n<header>\r\n  <nav aria-label=\"Main\"> \r\n    <ul>\r\n      <li><a href=\"/accueil\">Accueil</a></li>\r\n      <li><a href=\"/produits\" aria-current=\"page\">Produits</a></li> \r\n      <li><a href=\"/a-propos-de-nous\">\u00e0 propos de nous</a></li>\r\n      <li><a href=\"/contacter\">nous contacter</a></li>\r\n    </ul>\r\n  </nav>\r\n</header>\r\n```\r\n\r\n**Note** : `aria-current=\"page\"` met en \u00e9vidence la page active.\r\n\r\n**<span id=\"exemple-2\">Exemple 2</span> Une navigation en fil d'Ariane sur des pages profond\u00e9ment imbriqu\u00e9es**\r\n\r\n```html\r\n<nav aria-label=\"Fil d\u2019Ariane\">\r\n  <ol>\r\n    <li><a href=\"/produits/\">Produits</a></li>\r\n    <li><a href=\"/produits/robes/\">Nos robes</a></li>\r\n    <li>\r\n      <a href=\"/produits/robes/courtes\" aria-current=\"page\">robes courtes</a>\r\n    </li>\r\n  </ol>\r\n</nav>\r\n```\r\n\r\n**Note** : `aria-current=\"page\"` met en \u00e9vidence la page active.\r\n\r\n\r\n**<span id=\"exemple-3\">Exemple 3</span> Une navigation locale \u00e0 l'int\u00e9rieur d'une page**\r\n\r\n```html\r\n<nav aria-label=\"Sommaire de la page\">\r\n  <ol>\r\n    <li><a href=\"#entreprise\">Entreprise</a></li>\r\n    <li><a href=\"#license\">License</a></li>\r\n    <li><a href=\"#voir-aussi\">voir aussi</a></li>\r\n    <li><a href=\"#nos-references\">Nos r\u00e9f\u00e9rences</a></li>\r\n  </ol>\r\n</nav>\r\n```\r\n**Note** : l'utilisation des attributs aria-label sur les navigations n'est pas obligatoire, surtout si le but de la navigation est clair d'apr\u00e8s le contexte. \r\n\r\nLa navigation d'une page doit se distinguer visuellement et s\u00e9mantiquement du reste du contenu de la page. En termes de style, cela signifie g\u00e9n\u00e9ralement qu'il faut la placer \u00e0 un endroit bien visible du site ou de la page et la mettre en valeur en utilisant un style diff\u00e9rent de celui des \u00e9l\u00e9ments similaires du reste de la page. En termes de s\u00e9mantique, vous utilisez l'\u00e9l\u00e9ment `<nav>` pour d\u00e9finir un rep\u00e8re de navigation et marquer les principaux liens de navigation. Un lecteur d'\u00e9cran annonce quelque chose comme `navigation` lorsque l'utilisateur interagit avec lui. Cependant, tous les groupes de liens ne constituent pas automatiquement une navigation. Par exemple, si le pied de page de votre site ne contient que quelques liens, il n'est pas n\u00e9cessaire de les inclure dans un \u00e9l\u00e9ment `<nav>`. Le rep\u00e8re `contentinfo` est suffisant pour ce cas d'utilisation. Cela ne veut pas dire que vous ne devez jamais utiliser l'\u00e9l\u00e9ment `<nav>` \u00e0 l'int\u00e9rieur d'un pied de page. Lorsqu'il y a diff\u00e9rents groupes de liens dans le pied de page, il peut \u00eatre utile d'envelopper chaque groupe dans un \u00e9l\u00e9ment `<nav>` et de l'\u00e9tiqueter. C'est une question de jugement, qui d\u00e9pend de la complexit\u00e9 et de l'\u00e9tendue du contenu.\r\n\r\nLe fait que les \u00e9l\u00e9ments de `<nav>` soient des rep\u00e8res est particuli\u00e8rement utile pour les utilisateurs de lecteurs d'\u00e9cran, car ils peuvent y acc\u00e9der directement \u00e0 l'aide de raccourcis clavier. \r\n\r\nVous pouvez utiliser l'\u00e9l\u00e9ment `<nav>` pour la navigation principale de votre site et les \u00e9l\u00e9ments de navigation sp\u00e9cifiques \u00e0 la page comme les navigations par fil d'Ariane ([exemple 2](#exemple-2)), la pagination ou la navigation par contenu ([exemple 3](#exemple-3)). \r\n\r\nPour finir, vous n'\u00eates pas oblig\u00e9 de structurer les liens d'une navigation \u00e0 l'aide d'un \u00e9l\u00e9ment de liste, mais c'est conseill\u00e9. Je vous expliquerai plus tard les avantages. Vous pouvez utiliser une liste ordonn\u00e9e ou non ordonn\u00e9e. Si vous n'\u00eates pas s\u00fbr, le choix par d\u00e9faut de `<ul>` (liste non ordonn\u00e9e) est s\u00fbr.",
      "created": "2025-06-04T14:39:29.634806",
      "updated": "2025-06-11T15:09:45.214109",
      "meta_description": "Apprenez \u00e0 structurer des rep\u00e8res de navigation accessibles pour aider tous les utilisateurs \u00e0 s\u2019orienter efficacement sur votre site web.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 13,
      "title": "G\u00e9rer un environnement virtuel avec Python, pip et Pipenv",
      "slug": "gerer-un-environnement-virtuel-avec-python-pip-et-pipenv",
      "body": "Lorsque vous d\u00e9veloppez plusieurs projets Python, chacun peut n\u00e9cessiter des biblioth\u00e8ques diff\u00e9rentes, voire des versions sp\u00e9cifiques de ces biblioth\u00e8ques. Pour \u00e9viter les conflits, Python permet de cr\u00e9er des environnements virtuels : des espaces isol\u00e9s dans lesquels vous installez uniquement les d\u00e9pendances dont votre projet a besoin. Ainsi, votre syst\u00e8me reste propre et vous ma\u00eetrisez exactement ce que votre projet utilise.\r\n\r\n## Cr\u00e9er un environnement virtuel avec venv\r\n\r\nLa premi\u00e8re \u00e9tape consiste \u00e0 cr\u00e9er un environnement virtuel dans le r\u00e9pertoire de votre projet. Cela va g\u00e9n\u00e9rer un dossier contenant une version ind\u00e9pendante de l\u2019interpr\u00e9teur Python ainsi que de `pip`.\r\n\r\n```bash\r\n$python3 -m venv .venv\r\n```\r\n\r\nIci, `.venv` est le nom du dossier qui contiendra l\u2019environnement virtuel. Vous pouvez l\u2019appeler autrement, mais .venv est une convention largement adopt\u00e9e. Cette commande ne fait qu\u2019installer une structure de fichiers, elle ne lance pas l\u2019environnement.\r\n\r\n## Activer l\u2019environnement virtuel\r\n\r\nAvant d\u2019utiliser votre environnement, vous devez l\u2019activer. L\u2019activation consiste \u00e0 modifier temporairement ta session pour que Python et pip pointent vers l\u2019environnement virtuel, et non vers les versions globales du syst\u00e8me.\r\n\r\n**Selon le syst\u00e8me :**\r\n\r\n- GNU/Linux - MacOS :\r\n```bash\r\nsource .venv/bin/activate\r\n```\r\n- Microsoft Windows :  \r\n```cmd\r\n.venv\\Scripts\\activate.bat\r\n``` \r\n\r\nUne fois activ\u00e9, vous verrez le nom de l\u2019environnement s\u2019afficher dans ton terminal, ce qui confirme que vous travaillez bien dans ce contexte isol\u00e9.\r\n\r\n##  Installer des biblioth\u00e8ques avec pip\r\n\r\nMaintenant que votre environnement est actif, vous pouvez installer les biblioth\u00e8ques dont votre projet a besoin en utilisant `pip`.\r\n\r\n```bash\r\npip install requests flask\r\n```\r\nCes biblioth\u00e8ques seront install\u00e9es uniquement dans l\u2019environnement virtuel .venv, et n\u2019auront aucun impact sur les autres projets ou sur votre syst\u00e8me.\r\n\r\n### Installer une version sp\u00e9cifique d\u2019un module\r\n\r\nLorsque vous travaillez sur un projet, il est parfois essentiel d\u2019installer une version pr\u00e9cise d\u2019un module pour garantir la compatibilit\u00e9 ou \u00e9viter une r\u00e9gression.\r\n\r\n```bash\r\npip install numpy==1.21.0\r\n```\r\n**Quelques variantes utiles :**\r\n\r\n- `==` : exactement cette version\r\n- `>=` : au moins cette version\r\n- `<=` : au plus cette version\r\n- `!=` : toute version sauf celle-ci\r\n- `~=` : compatible avec (ex : requests~=2.25 installe la derni\u00e8re 2.25.x)\r\n\r\n**avec `requirements.txt`** :\r\nVous pouvez aussi fixer la version dans le fichier `requirements.txt` :\r\n```\r\nDjango==4.2.3\r\nrequests>=2.26,<3.0\r\n```\r\n\r\nPuis installer toutes les d\u00e9pendances :\r\n```bash\r\npip install -r requirements.txt\r\n```\r\n\r\n## G\u00e9rer les d\u00e9pendances\r\n\r\nQuand vous travaillez sur un projet, il est important de pouvoir facilement partager les biblioth\u00e8ques utilis\u00e9es. Pour cela, on utilise un fichier `requirements.txt` qui liste toutes les d\u00e9pendances.\r\n\r\nPour sauvegarder les d\u00e9pendances :\r\n```bash\r\npip freeze > requirements.txt\r\n```\r\n\r\nPour r\u00e9installer les m\u00eames d\u00e9pendances ailleurs :\r\n```bash\r\npip install -r requirements.txt\r\n```\r\nAinsi, n\u2019importe qui (ou vous-m\u00eame dans quelques mois) pourra recr\u00e9er exactement le m\u00eame environnement.\r\n\r\n## D\u00e9sactiver l\u2019environnement\r\n\r\nLorsque vous avez fini de travailler sur votre projet, vous pouvez d\u00e9sactiver l\u2019environnement virtuel. Cela remet le terminal dans son \u00e9tat initial, en sortant de l\u2019environnement isol\u00e9.\r\n\r\n```bash\r\ndeactivate\r\n```\r\nVotre interpr\u00e9teur Python redevient alors celui du syst\u00e8me.\r\n\r\n## Supprimer un environnement virtuel\r\n\r\nSi vous n\u2019avez plus besoin de l\u2019environnement (par exemple, si vous supprimez le projet), vous pouvez simplement supprimer le dossier .venv. Cela ne supprime que l\u2019environnement, pas votre projet ou vos fichiers de code.\r\n\r\n**Selon le syst\u00e8me :**\r\n\r\n- GNU/Linux - MacOS :\r\n```bash\r\nrm -rf .venv\r\n```\r\n- Microsoft Windows :  \r\n```cmd\r\nrd /s /q .venv\r\n``` \r\n\r\n## Utiliser Pipenv pour simplifier la gestion des environnements et des d\u00e9pendances\r\n\r\nBien que `venv` et `pip` soient des outils puissants, l'utilisation de Pipenv peut grandement simplifier la gestion des environnements virtuels et des d\u00e9pendances. Pipenv combine les fonctionnalit\u00e9s de `pip` et `virtualenv` en un seul outil, offrant une exp\u00e9rience plus fluide et moins sujette aux erreurs. \r\n\r\nLa documentation officielle de Python recommande l'utilisation de Pipenv pour la gestion des d\u00e9pendances des applications.\r\n\r\nDans le <a href=\"https://packaging.python.org/en/latest/guides/tool-recommendations/\" target=\"_blank\">Python Packaging User Guide</a>, il est indiqu\u00e9 que Pipenv est l'un des outils reconnus pour cr\u00e9er des fichiers de verrouillage (lock files), qui contiennent les versions exactes de tous les paquets install\u00e9s dans un environnement, afin d'assurer la reproductibilit\u00e9. Cela est particuli\u00e8rement utile pour les projets collaboratifs o\u00f9 il est essentiel que tous les contributeurs utilisent les m\u00eames versions de d\u00e9pendances.\r\n\r\nDe plus, le guide <a href=\"https://packaging.python.org/en/latest/tutorials/managing-dependencies/\" target=\"_blank\">Managing Application Dependencies</a> pr\u00e9sente un tutoriel d\u00e9taill\u00e9 sur l'utilisation de Pipenv pour g\u00e9rer les d\u00e9pendances d'une application. Il y est mentionn\u00e9 que, bien que `pip` soit souvent suffisant pour un usage personnel, Pipenv est recommand\u00e9 pour les projets collaboratifs, car c'est un outil de plus haut niveau qui simplifie la gestion des d\u00e9pendances pour les cas d'utilisation courants.\r\n\r\nEn r\u00e9sum\u00e9, Pipenv est recommand\u00e9 par la documentation officielle de Python pour la gestion des d\u00e9pendances des applications, en particulier dans des contextes collaboratifs o\u00f9 la reproductibilit\u00e9 et la simplicit\u00e9 de gestion sont essentielles.\r\n\r\n### Installation de Pipenv\r\n\r\nInstallez Pipenv en utilisant `pip` :\r\n```bash\r\npip install --user pipenv\r\n```\r\n**Note**: Il est recommand\u00e9 d'utiliser l'option `--user` pour \u00e9viter les probl\u00e8mes de permissions et les conflits avec les paquets syst\u00e8me.\r\n\r\n### Cr\u00e9er un nouveau projet avec Pipenv\r\n\r\n**Initialiser un projet**\r\n\r\nDans le r\u00e9pertoire de votre projet, ex\u00e9cutez :\r\n\r\n```bash\r\npipenv shell\r\n```\r\n**Note**: Cela cr\u00e9era un fichier Pipfile qui g\u00e9rera les d\u00e9pendances de votre projet.\r\n\r\n**Installer des paquets**\r\n\r\nPour installer une biblioth\u00e8que, par exemple `requests` :\r\n```bash\r\npipenv install requests\r\n```\r\n\r\n**D\u00e9sactiver l'environnement virtuel :**\r\nPour sortir de l'environnement virtuel :\r\n\r\n```bash\r\nexit\r\n```\r\n**G\u00e9rer les d\u00e9pendances de d\u00e9veloppement :**\r\nPour installer des paquets n\u00e9cessaires uniquement pour le d\u00e9veloppement, utilise l'option `--dev` :\r\n```bash\r\npipenv install --dev pytest\r\n```\r\n\r\n**V\u00e9rifier les d\u00e9pendances :**\r\nPour v\u00e9rifier les vuln\u00e9rabilit\u00e9s de s\u00e9curit\u00e9 dans les d\u00e9pendances :\r\n```bash\r\npipenv check\r\n```\r\n\r\n### Avantages de Pipenv\r\n\r\n- **Gestion simplifi\u00e9e** : Unifie la gestion des environnements virtuels et des d\u00e9pendances. \r\n- **Reproductibilit\u00e9 **: Le fichier Pipfile.lock assure que tous les contributeurs utilisent les m\u00eames versions de paquets.\r\n- **S\u00e9curit\u00e9** : Int\u00e8gre des outils pour v\u00e9rifier les vuln\u00e9rabilit\u00e9s dans les d\u00e9pendances.\r\n- **Compatibilit\u00e9** : Fonctionne sur Windows, macOS et Linux.\r\n\r\n## R\u00e9sum\u00e9 des commandes importantes\r\n\r\n<table>\r\n    <caption>Commandes cl\u00e9s pour g\u00e9rer efficacement un environnement Python avec <code>venv</code> et <code>pipenv</code>.</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Action</th>\r\n            <th scope=\"col\">Commande</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>Cr\u00e9er un environnement virtuel</td>\r\n            <td><code>python3 -m venv .venv</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Activer (Linux/macOS)</td>\r\n            <td><code>source .venv/bin/activate</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Activer (Windows)</td>\r\n            <td><code>.venv\\Scripts\\activate.bat</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer un paquet</td>\r\n            <td><code>pip install nom_du_paquet</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Geler les d\u00e9pendances</td>\r\n            <td><code>pip freeze &gt; requirements.txt</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer depuis requirements</td>\r\n            <td><code>pip install -r requirements.txt</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>D\u00e9sactiver l\u2019environnement</td>\r\n            <td><code>deactivate</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Supprimer l\u2019environnement</td>\r\n            <td><code>rm -rf .venv</code> ou <code>rd /s /q .venv</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer Pipenv</td>\r\n            <td><code>pip install --user pipenv</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Initialiser un projet avec Pipenv</td>\r\n            <td><code>pipenv install</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Installer un paquet avec Pipenv</td>\r\n            <td><code>pipenv install nom_du_paquet</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>Activer l'environnement Pipenv</td>\r\n            <td><code>pipenv shell</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>V\u00e9rifier les vuln\u00e9rabilit\u00e9s</td>\r\n            <td><code>pipenv check</code></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n",
      "created": "2025-06-05T11:44:50.830224",
      "updated": "2025-06-05T13:01:12.063571",
      "meta_description": "Apprenez \u00e0 g\u00e9rer vos environnements Python avec venv, pip et Pipenv pour \u00e9viter les conflits de d\u00e9pendances et garder vos projets propres.",
      "status_id": 3,
      "categories_id": 1
    },
    {
      "id": 14,
      "title": "Flask - Chapitre 2 : Pr\u00e9paration du projet de blog",
      "slug": "flask-chapitre-2-preparation-du-projet-de-blog",
      "body": "Dans la suite de ce tuto, nous allons construire, am\u00e9liorer et d\u00e9ployer un site de blog con\u00e7u pour les d\u00e9veloppeurs. Ce projet vous initiera aux t\u00e2ches les plus courantes du d\u00e9veloppement web, comme :\r\n\r\n- La gestion de bases de donn\u00e9es relationnelles,\r\n- Le traitement et la validation des donn\u00e9es de formulaire,\r\n- et bien s\u00fbr (le pr\u00e9f\u00e9r\u00e9 de tous) : les tests.\r\n\r\n\u00c0 chaque chapitre, vous apprendrez une nouvelle comp\u00e9tence \u00e0 travers des projets concrets et pratiques. Dans le tableau suivant, vous trouverez une br\u00e8ve description des comp\u00e9tences cl\u00e9s associ\u00e9es aux diff\u00e9rentes fonctionnalit\u00e9s du blog.\r\n\r\n<table>\r\n    <caption>Correspondance entre les comp\u00e9tences techniques et les fonctionnalit\u00e9s du site de blog</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Comp\u00e9tence</th>\r\n            <th scope=\"col\">Fonctionnalit\u00e9(s) du site de blog</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <th scope=\"row\">Bases de donn\u00e9es relationnelles avec SQLAlchemy <br>Flask-SQLAlchemy</th>\r\n            <td>Stocker les articles et les tags dans une base de donn\u00e9es relationnelle. Effectuer une grande vari\u00e9t\u00e9 de requ\u00eates, y compris la pagination, les plages de dates, la recherche en texte int\u00e9gral, les jointures internes et externes, et plus encore.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Traitement et validation de formulaires <br>Flask-WTF</th>\r\n            <td>Cr\u00e9er et modifier des articles de blog \u00e0 l\u2019aide de formulaires. Dans les chapitres suivants, nous utiliserons \u00e9galement les formulaires pour connecter les utilisateurs au site et permettre aux visiteurs de publier des commentaires.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Rendu de templates avec Jinja2</th>\r\n            <td>Cr\u00e9er un ensemble de templates clair et extensible, en utilisant l\u2019h\u00e9ritage et les inclusions lorsque cela est pertinent.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Authentification des utilisateurs et tableaux de bord d\u2019administration<br>Flask-Login</th>\r\n            <td>Stocker les comptes utilisateurs dans la base de donn\u00e9es et restreindre la page de gestion des articles aux utilisateurs enregistr\u00e9s. Construire un panneau d\u2019administration pour g\u00e9rer les articles, les comptes utilisateurs, et afficher des statistiques comme les pages vues, la g\u00e9olocalisation IP, etc.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Ajax et APIs RESTful<br>Flask-API</th>\r\n            <td>Construire un syst\u00e8me de commentaires dynamique avec Ajax affich\u00e9 sur chaque article. Exposer les articles du blog via une API RESTful, et cr\u00e9er un client en ligne de commande pour publier des articles via l\u2019API.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Tests unitaires <br>pytest</th>\r\n            <td>Construire une suite compl\u00e8te de tests pour le blog, et apprendre \u00e0 simuler des requ\u00eates r\u00e9elles et \u00e0 utiliser des mocks pour simplifier les interactions complexes.</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Tout le reste</th>\r\n            <td>Protection contre les attaques CSRF, flux Atom, d\u00e9tection de spam, ex\u00e9cution de t\u00e2ches asynchrones, d\u00e9ploiement, SSL (HTTPS), h\u00e9bergement, et plus encore.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n## Le cahier des charges\r\n\r\nIl est toujours bon, lorsqu\u2019on d\u00e9marre un projet ambitieux, d\u2019avoir une sp\u00e9cification fonctionnelle en t\u00eate. Pour le site de blog, notre sp\u00e9cification sera tout simplement la liste des fonctionnalit\u00e9s que nous souhaitons int\u00e9grer. Ces fonctionnalit\u00e9s sont bas\u00e9es sur mon exp\u00e9rience dans le d\u00e9veloppement de mon blog personnel :\r\n\r\n- Les articles doivent pouvoir \u00eatre saisis via une interface web. Pour la mise en forme, l\u2019auteur pourra utiliser **Markdown**, un langage de balisage l\u00e9ger et agr\u00e9able visuellement.\r\n- Des images pourront \u00eatre t\u00e9l\u00e9vers\u00e9es sur le site et facilement int\u00e9gr\u00e9es aux articles.\r\n- Les articles pourront \u00eatre organis\u00e9s \u00e0 l\u2019aide de **tags** (\u00e9tiquettes) en nombre illimit\u00e9.\r\n- Le site devra supporter **plusieurs auteurs**.\r\n- Les articles pourront \u00eatre affich\u00e9s par **ordre de publication**, mais aussi list\u00e9s par **mois**, par **tag**, ou par **auteur**. Les longues listes d\u2019articles seront **pagin\u00e9es**.\r\n- Les articles pourront \u00eatre enregistr\u00e9s en tant que **brouillons**, visibles uniquement par leur auteur jusqu\u2019\u00e0 leur publication.\r\n- Les visiteurs du site pourront **poster des commentaires** sur les articles. Ces commentaires seront **v\u00e9rifi\u00e9s contre le spam**, puis l\u2019auteur pourra choisir de les rendre visibles ou non.\r\n- Des **flux Atom** seront disponibles pour tous les articles, y compris des flux s\u00e9par\u00e9s pour chaque auteur et chaque tag.\r\n- Les articles pourront \u00eatre acc\u00e9d\u00e9s via une **API RESTful**. Les auteurs disposeront d\u2019un **jeton d\u2019API** leur permettant de modifier les articles via l\u2019API.\r\n\r\nBien que cette liste ne soit pas exhaustive, elle couvre les fonctionnalit\u00e9s principales de notre site de blog. J\u2019esp\u00e8re que vous trouverez ce projet \u00e0 la fois **amusant** et **stimulant**.Je suis certain que vous avez h\u00e2te de commencer, alors lan\u00e7ons la mise en place de notre projet de blog.\r\n\r\n## Cr\u00e9ation du projet blog\r\n\r\nCommen\u00e7ons par cr\u00e9er un nouveau projet dans notre r\u00e9pertoire de travail. Sur mon ordinateur portable, il s'agit de `/home/user/projects`, ou, sur un syst\u00e8me Unix, simplement `~/projects`. C\u2019est exactement ce que nous avons fait lorsque nous avons cr\u00e9\u00e9 l\u2019application `hello_flask`. **Note** : n'oubliez pas d'effacer l'ancien projet (hello_flask)\r\n\r\n```bash\r\n$ cd ~/projects\r\n$ mkdir blog\r\n$ cd blog\r\n```\r\n\r\nNous allons ensuite devoir configurer notre environnement `virtualenv`. Cela diff\u00e8re de ce que nous avons fait pr\u00e9c\u00e9demment, car il s\u2019agit d\u2019une mani\u00e8re plus structur\u00e9e d\u2019utiliser `virtualenv`.\r\n\r\n```bash\r\n$ python -m venv .venv\r\n```\r\n\r\nL\u2019\u00e9tape suivante consiste \u00e0 installer Flask dans notre environnement virtuel. Pour cela, nous allons activer le `virtualenv` et utiliser `pip` pour installer Flask.\r\n\r\n```bash\r\n$ source .venv/bin/activate\r\n(.venv) ... $ pip install flask\r\n```\r\n\r\nJusqu\u2019\u00e0 pr\u00e9sent, tout cela devrait t\u2019\u00eatre relativement familier. Cependant, au lieu de cr\u00e9er un seul fichier pour notre application \u2014 ce qui est tout \u00e0 fait autoris\u00e9 et pertinent pour des applications tr\u00e8s simples \u2014 nous pouvons aussi cr\u00e9er un nouveau dossier nomm\u00e9 app. Ce dossier nous permettra de structurer notre application de mani\u00e8re modulaire et plus logique. \r\n\r\n\u00c0 l\u2019int\u00e9rieur de ce dossier, nous allons cr\u00e9er cinq fichiers vides nomm\u00e9s : `__init__.py`, `app.py`, `config.py`, `main.py` et `views.py`, comme suit :\r\n\r\n```bash\r\n(.venv) ... $ mkdir app\r\n(.venv) ... $ touch app/{__init__,app,config,main,views}.py\r\n```\r\n**Note** : La derni\u00e8re commande utilise une petite astuce du shell pour cr\u00e9er plusieurs fichiers \u00e0 partir des noms entre crochets. \r\n\r\nMais \u00e0 quoi servent ces fichiers que nous venons de cr\u00e9er ? Comme vous allez le voir, chaque fichier a un r\u00f4le important. Leur nom donne d\u00e9j\u00e0 une id\u00e9e de leur fonction, mais voici un bref aper\u00e7u des responsabilit\u00e9s de chaque fichier :\r\n\r\n<table>\r\n    <caption>Structure de base d\u2019un dossier app/ pour une application Flask</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Nom du fichier</th>\r\n            <th scope=\"col\">Description</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td><code>__init__.py</code></td>\r\n\t\t\t\t\t\t<td>Indique \u00e0 Python que le dossier <code>app/</code> doit \u00eatre trait\u00e9 comme un package Python.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>app.py</code></td>\r\n            <td>Contient l\u2019application Flask elle-m\u00eame.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>config.py</code></td>\r\n            <td>Fichier destin\u00e9 \u00e0 stocker les variables de configuration de notre application Flask.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>main.py</code></td>\r\n            <td>Le point d\u2019entr\u00e9e pour ex\u00e9cuter l\u2019application.</td>\r\n        </tr>\r\n        <tr>\r\n            <td><code>views.py</code></td>\r\n            <td>D\u00e9finit les routes URL et les vues associ\u00e9es de l\u2019application.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n## Une application Flask minimaliste\r\n\r\nRemplissons maintenant ces fichiers avec le strict minimum de code n\u00e9cessaire pour obtenir une application Flask ex\u00e9cutable.\r\nCela mettra notre projet en bonne position pour le chapitre suivant, dans lequel nous commencerons \u00e0 coder la sauvegarde et la r\u00e9cup\u00e9ration des articles du blog depuis la base de donn\u00e9es.\r\n\r\nNous allons commencer par le module `config.py`. Ce fichier contiendra une classe `Configuration` qui indiquera \u00e0 Flask que nous souhaitons ex\u00e9cuter notre application en mode `DEBUG`.\r\n\r\nAjoutez les deux lignes de code suivantes dans le fichier `config.py` :\r\n\r\n```python\r\nclass Configuration(object):\r\n    DEBUG = True\r\n```\r\n\r\nEnsuite, nous allons cr\u00e9er notre application Flask et lui indiquer d\u2019utiliser les valeurs de configuration d\u00e9finies dans le module `config`. Ajoutez le code suivant dans le fichier `app.py` :\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom config import Configuration\r\n\r\n\r\napp = Flask(__name__)\r\napp.config.from_object(Configuration)\r\n```\r\n\r\nLe module views contiendra une seule vue, li\u00e9e \u00e0 l\u2019URL racine du site. Ajoutez le code suivant dans `views.py` :\r\n\r\n```python\r\nfrom app import app\r\n\r\n\r\n@app.route('/')\r\ndef homepage():\r\n    return 'Accueil'\r\n```\r\n\r\nComme vous l\u2019avez probablement remarqu\u00e9, il nous manque encore l\u2019appel \u00e0 `app.run()`. Nous placerons ce code dans `main.py`, que nous utiliserons comme point d\u2019entr\u00e9e de notre application. Ajoute le code suivant dans le fichier `main.py` :\r\n\r\n```python\r\nfrom app import app\r\nimport views\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\nNous n\u2019appelons pas `app.run(debug=True)` car nous avons d\u00e9j\u00e0 indiqu\u00e9 \u00e0 Flask d\u2019ex\u00e9cuter l\u2019application en mode debug via l\u2019objet `Configuration`. Vous pouvez lancer l\u2019application depuis la ligne de commande en ex\u00e9cutant le module main de la fa\u00e7on suivante : \r\n```bash\r\n(.venv) ... $ python app/main.py\r\n```\r\n\r\n### Prise de recul\r\n\r\n\u00c0 l\u2019exception de la classe Configuration, la majeure partie de ce code devrait vous sembler famili\u00e8re. Nous avons essentiellement repris le code de l\u2019exemple hello_flask et l\u2019avons r\u00e9parti en plusieurs modules. Cela peut sembler un peu excessif d\u2019\u00e9crire seulement deux ou trois lignes par fichier, mais \u00e0 mesure que votre projet grandira, vous verrez \u00e0 quel point cet engagement pr\u00e9coce en faveur d\u2019une bonne organisation porte ses fruits. Vous avez peut-\u00eatre remarqu\u00e9 qu\u2019il existe une priorisation interne entre ces fichiers, bas\u00e9e sur l\u2019ordre dans lequel ils sont import\u00e9s \u2014 ceci afin d\u2019\u00e9viter le risque d\u2019importations circulaires. Une importation circulaire se produit lorsque deux modules s\u2019importent mutuellement, ce qui emp\u00eache leur importation effective. Avec Flask, il est tr\u00e8s facile de g\u00e9n\u00e9rer ce genre de probl\u00e8me, car de nombreux \u00e9l\u00e9ments d\u00e9pendent de l\u2019objet central `app`.\r\n\r\nPour \u00e9viter cela, certaines personnes pr\u00e9f\u00e8rent regrouper tout dans un seul module. Cela fonctionne pour les petites applications, mais ce n\u2019est pas viable au-del\u00e0 d\u2019une certaine taille ou complexit\u00e9. C\u2019est pourquoi nous avons d\u00e9coup\u00e9 notre application en plusieurs modules et cr\u00e9\u00e9 un point d\u2019entr\u00e9e unique qui contr\u00f4le l\u2019ordre des importations.\r\n\r\n### Le flux d\u2019importation\r\n\r\nL\u2019ex\u00e9cution commence lorsque vous lancez la commande python `main.py` depuis la ligne de commande. La premi\u00e8re ligne de code que l\u2019interpr\u00e9teur Python rencontre importe l\u2019objet app depuis le module `app`. Nous nous trouvons maintenant dans `app.py`, qui importe Flask ainsi que notre objet `Configuration`. Le reste du module `app.py` est alors lu et interpr\u00e9t\u00e9, puis le contr\u00f4le revient \u00e0 `main.py`.\r\n\r\nLa seconde ligne de `main.py` importe le module `views`. Nous sommes alors dans `views.py`, qui d\u00e9pend de `app.py` pour le d\u00e9corateur `@app.route` \u2014 et cet objet est d\u00e9j\u00e0 disponible depuis `main.py`. Les routes et les vues sont enregistr\u00e9es au moment o\u00f9 le module `views` est interpr\u00e9t\u00e9, puis l\u2019ex\u00e9cution revient \u00e0 `main.py`. Puisque vous ex\u00e9cutez directement `main.py`, la condition du bloc `if` s\u2019\u00e9value \u00e0 `True` et votre application se lance.\r\n\r\n",
      "created": "2025-06-05T23:48:47.804219",
      "updated": "2025-06-12T01:28:50.954362",
      "meta_description": "Chapitre 2 : Cr\u00e9ez un blog minimaliste avec Flask en posant les bases du projet. Structure, routes simples et premi\u00e8res vues au programme.",
      "status_id": 2,
      "categories_id": 3
    },
    {
      "id": 15,
      "title": "Cr\u00e9er des rep\u00e8res pour les formulaires",
      "slug": "creer-des-reperes-pour-les-formulaires",
      "body": "Certains formulaires , tels que les formulaires de recherche et les filtres, sont des \u00e9l\u00e9ments centraux d'un site Web. En particulier pour les utilisateurs de lecteurs d'\u00e9cran, la recherche sur le site est souvent une alternative utile \u00e0 la navigation conventionnelle. Les utilisateurs qui ne peuvent pas trouver facilement des formulaires importants peuvent avoir des difficult\u00e9s \u00e0 obtenir des informations.\r\n\r\nLa solution est de promouvoir les formulaires importants d'une page vers des points de rep\u00e8re peut aider \u00e0 la d\u00e9couverte. L'acc\u00e8s direct par des raccourcis peut \u00eatre utile pour les formulaires de recherche (voir l'[exemple 1](#exemple-1) et l'[exemple 2](#exemple-2)) et les formulaires de connexion ([exemple 3](#exemple-3)).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Formulaire avec un r\u00f4le de recherche**\r\n\r\n```html\r\n<form role=\"search\">\r\n  <label for=\"site-search\">Chercher</label>\r\n  <input type=\"text\" id=\"site-search\">\r\n\t<button type=\"submit\">Lancer la recherche</button>\r\n</form>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Formulaire dans un \u00e9l\u00e9ment de recherche**\r\n\r\n```html\r\n<search role=\"search\">\r\n  <form>\r\n    <label for=\"site-search\">Chercher</label>\r\n    <input type=\"text\" id=\"site-search\">\r\n\t\t<button type=\"submit\">Lancer la recherche</button>\r\n  </form>\r\n</search>\r\n```\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Point de rep\u00e8re d'un formulaire de connexion**\r\n\r\n```html\r\n<form role=\"form\" method=\"post\">\r\n  <fieldset>\r\n    <legend>Se connecter</legend>\r\n    <div>\r\n      <label for=\"username\">utilisateur</label>\r\n      <input type=\"text\" id=\"username\" autocomplete=\"username\">\r\n    </div>\r\n    <div>\r\n      <label for=\"password\">Mot de passe</label>\r\n      <input type=\"password\" id=\"password\" autocomplete=\"current-password\">\r\n    </div>\r\n  </fieldset>\r\n\t<button type=\"submit\">Se connecter</button>\r\n</form>\r\n```\r\n\r\nLa recherche sur le site, la recherche sur la page, les filtres et les formulaires de connexion sont souvent des \u00e9l\u00e9ments essentiels d'une page. Vous pouvez transformer un formulaire en rep\u00e8re `search` ou `form` (voir l'[exemple 1](#exemple-1) et l'[exemple 3](#exemple-3) ) en utilisant l'attribut `role` et en \u00e9tiquetant le formulaire. Vous pouvez aussi utiliser l'\u00e9l\u00e9ment `<search>`, qui a un r\u00f4le de recherche implicite([exemple 2](#exemple-2)).\r\n\r\nEn regardant le [tableau 1](#table-1),vous remarquerez que la prise en charge des rep\u00e8res de recherche et de formulaire est mitig\u00e9e. Tous les lecteurs d'\u00e9cran test\u00e9s prennent bien en charge le r\u00f4le `search`, mais seul VoiceOver avec Safari 17.3+ prend en charge l'\u00e9l\u00e9ment de recherche. C'est parce que cet \u00e9l\u00e9ment a \u00e9t\u00e9 introduit au d\u00e9but de l'ann\u00e9e 2023. Selon votre public, vous devrez peut-\u00eatre combiner l'\u00e9l\u00e9ment avec le r\u00f4le pour obtenir le meilleur r\u00e9sultat. La plupart des lecteurs d'\u00e9cran de bureau prennent en charge le r\u00f4le `form` lorsque vous l'\u00e9tiquettez. VoiceOver (sur macOS et iOS), et TalkBack n'annoncent pas les rep\u00e8res de forme. \u00c9tant donn\u00e9 que l'attribut `role` ne nuit \u00e0 rien lorsqu'il n'est pas pris en charge, il est prudent de l'utiliser et d'offrir un avantage aux utilisateurs dont le logiciel le prend en charge.\r\n\r\n<table id=\"table-1\">\r\n  <caption>Test de lecteur d'\u00e9cran : Comment les r\u00f4les de formulaire et de recherche sont-ils expos\u00e9s ?</caption>\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\" style=\"width: 300px;\">R\u00e9glage</th>\r\n      <th scope=\"col\">NVDA</th>\r\n      <th scope=\"col\">VoiceOver</th>\r\n      <th scope=\"col\">JAWS</th>\r\n      <th scope=\"col\">Narrateur</th>\r\n      <th scope=\"col\">TalkBack</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire sans r\u00f4le ni \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire sans r\u00f4le, \u00e9tiquet\u00e9 par l'en-t\u00eate</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de formulaire et sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de formulaire, \u00e9tiquet\u00e9 par l'en-t\u00eate</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire sans r\u00f4le, \u00e9tiquet\u00e9 par la l\u00e9gende</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>groupe</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de formulaire, \u00e9tiquet\u00e9 par la l\u00e9gende</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>groupe</p>\r\n      </td>\r\n      <td>\r\n        <p>forme</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de recherche et sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>formulaire avec r\u00f4le de recherche, \u00e9tiquet\u00e9 par un titre</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>\u00e9l\u00e9ment de recherche sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>non</p>\r\n      </td>\r\n      <td>\r\n        <p>\r\n          <strong>non</strong>\r\n        </p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>\u00e9l\u00e9ment de recherche avec r\u00f4le de recherche et sans \u00e9tiquette</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n    <tr>\r\n      <td>\r\n        <p>\u00e9l\u00e9ment de recherche avec r\u00f4le de recherche, \u00e9tiquet\u00e9 par un titre</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n      <td>\r\n        <p>recherche</p>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n**Note** : texte en gras indique qu'il n'est pas annonc\u00e9 comme un point de rep\u00e8re \"formulaire\", mais qu'il est accessible via la navigation par points de rep\u00e8re.\r\n\r\n\r\n",
      "created": "2025-06-06T14:01:00.250866",
      "updated": "2025-06-06T14:58:44.844886",
      "meta_description": "Am\u00e9liorez l\u2019accessibilit\u00e9 de vos formulaires HTML gr\u00e2ce aux r\u00f4les ARIA et balises adapt\u00e9es. Guide pratique avec exemples et compatibilit\u00e9 lecteur d\u2019\u00e9cran.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 16,
      "title": "Flask - Chapitre 3 : Bases de donn\u00e9es relationnelles avec SQLAlchemy",
      "slug": "flask-chapitre-3-bases-de-donnees-relationnelles-avec-sqlalchemy",
      "body": "Les bases de donn\u00e9es relationnelles constituent la pierre angulaire sur laquelle repose presque toute application Web moderne. Apprendre \u00e0 concevoir votre application en termes de tables et de relations est l'une des cl\u00e9s d\u2019un projet propre et bien structur\u00e9. Comme vous le verrez dans ce chapitre, le mod\u00e8le de donn\u00e9es que vous choisirez d\u00e8s le d\u00e9part influencera presque tous les aspects du code qui suivra. Nous utiliserons SQLAlchemy, un puissant <abbr>[ORM](#def-orm)</abbr> qui nous permet d\u2019abstraire la complexit\u00e9 des diff\u00e9rents moteurs de bases de donn\u00e9es afin de travailler directement avec la base depuis Python.\r\n\r\n<span id=\"def-orm\"><strong>Remarque</strong>: Un mapping objet-relationnel (en anglais Object-Relational Mapping ou ORM) est un type de programme informatique qui se place en interface entre un programme applicatif et une base de donn\u00e9es relationnelle pour simuler une base de donn\u00e9es orient\u00e9e objet. Ce programme d\u00e9finit des correspondances entre les sch\u00e9mas de la base de donn\u00e9es et les classes du programme applicatif. On pourrait le d\u00e9signer par l\u00e0 \u00ab comme une couche d'abstraction entre le monde objet et monde relationnel \u00bb. Du fait de sa fonction, on retrouve ce type de programme dans un grand nombre de frameworks sous la forme de composant ORM qui a \u00e9t\u00e9 soit d\u00e9velopp\u00e9, soit int\u00e9gr\u00e9 depuis une solution externe. <span>\r\n\r\n## Pourquoi utiliser une base de donn\u00e9es relationnelle ?\r\n\r\nLa base de donn\u00e9es de votre application est bien plus qu\u2019un simple registre de ce qu\u2019il faut conserver pour un usage ult\u00e9rieur. Si votre seul besoin \u00e9tait de sauvegarder et de r\u00e9cup\u00e9rer des donn\u00e9es, vous pourriez facilement utiliser des fichiers texte plats. Cependant, vous souhaitez pouvoir effectuer des requ\u00eates int\u00e9ressantes sur vos donn\u00e9es. Et vous souhaitez le faire de mani\u00e8re efficace, sans r\u00e9inventer la roue. Bien que les bases de donn\u00e9es non relationnelles (parfois appel\u00e9es bases NoSQL) soient tr\u00e8s populaires et aient leur place dans l\u2019univers du Web, les bases de donn\u00e9es relationnelles ont depuis longtemps r\u00e9solu les probl\u00e8mes courants de filtrage, de tri, d\u2019agr\u00e9gation et de jointure de donn\u00e9es tabulaires. Elles permettent de d\u00e9finir des ensembles de donn\u00e9es de mani\u00e8re structur\u00e9e tout en maintenant la coh\u00e9rence des informations. En utilisant des bases de donn\u00e9es relationnelles, vous vous donnez aussi, en tant que d\u00e9veloppeur, la libert\u00e9 de vous concentrer sur les parties de votre application qui comptent vraiment.\r\n\r\nEn plus de permettre l\u2019ex\u00e9cution efficace de requ\u00eates ponctuelles, un serveur de base de donn\u00e9es relationnelle vous offre \u00e9galement les avantages suivants :\r\n\r\n- Il garantit que vos donn\u00e9es respectent les r\u00e8gles d\u00e9finies dans le sch\u00e9ma ;\r\n- Il permet \u00e0 plusieurs personnes d\u2019acc\u00e9der \u00e0 la base de donn\u00e9es simultan\u00e9ment, tout en assurant la coh\u00e9rence des donn\u00e9es sous-jacentes ;\r\n- Il s\u2019assure que les donn\u00e9es, une fois enregistr\u00e9es, ne soient pas perdues m\u00eame en cas de plantage de l\u2019application.\r\n\r\nLes bases de donn\u00e9es relationnelles et SQL, le langage de programmation utilis\u00e9 avec ces bases, sont des sujets qui m\u00e9riteraient \u00e0 eux seuls un ouvrage complet. Cependant, comme ce tutoriel est consacr\u00e9 \u00e0 l\u2019apprentissage du d\u00e9veloppement d\u2019applications avec Flask, je vais vous montrer comment utiliser un outil largement adopt\u00e9 par la communaut\u00e9 Python pour travailler avec des bases de donn\u00e9es : <a href=\"https://www.sqlalchemy.org/\" target=\"_blank\">SQLAlchemy</a>.\r\n\r\n**Important** : <a href=\"https://www.sqlalchemy.org/\" target=\"_blank\">SQLAlchemy</a> masque de nombreuses complications li\u00e9es \u00e0 l\u2019\u00e9criture de requ\u00eates SQL, mais rien ne remplace une compr\u00e9hension approfondie de SQL et du mod\u00e8le relationnel. \u2019est pourquoi, si vous d\u00e9butez avec SQL, je vous recommande vivement d'apprendre d'abord le SQL. \r\n\r\n## Introduction \u00e0 SQLAlchemy\r\n\r\nSQLAlchemy est une biblioth\u00e8que extr\u00eamement puissante pour travailler avec des bases de donn\u00e9es relationnelles en Python. Plut\u00f4t que d\u2019\u00e9crire manuellement des requ\u00eates SQL, vous pouvez utiliser des objets Python classiques pour repr\u00e9senter les tables de la base de donn\u00e9es et ex\u00e9cuter des requ\u00eates. Cette approche pr\u00e9sente plusieurs avantages :\r\n\r\n- Votre application peut \u00eatre enti\u00e8rement d\u00e9velopp\u00e9e en Python.\r\n- Les diff\u00e9rences subtiles entre les moteurs de bases de donn\u00e9es sont masqu\u00e9es. Cela vous permet, par exemple, d\u2019utiliser une base l\u00e9g\u00e8re comme SQLite pour le d\u00e9veloppement et les tests locaux, puis de passer \u00e0 une base con\u00e7ue pour de fortes charges (comme PostgreSQL) en production.\r\n- Les erreurs li\u00e9es \u00e0 la base de donn\u00e9es sont moins fr\u00e9quentes, car deux couches s\u2019interposent entre votre application et le serveur de base : l\u2019interpr\u00e9teur Python lui-m\u00eame (qui intercepte les erreurs de syntaxe \u00e9videntes) et SQLAlchemy, qui dispose d\u2019API bien d\u00e9finies et de son propre syst\u00e8me de v\u00e9rification des erreurs.\r\n- Votre code de gestion des donn\u00e9es peut devenir plus efficace gr\u00e2ce au mod\u00e8le de \u00ab\u00a0unit of work\u00a0\u00bb de SQLAlchemy, qui r\u00e9duit les allers-retours inutiles avec la base. SQLAlchemy propose \u00e9galement des m\u00e9canismes de pr\u00e9chargement efficace des objets li\u00e9s, appel\u00e9s \u00ab eager loading \u00bb.\r\n- Le mappage objet-relationnel (ORM) rend votre code plus maintenable, conform\u00e9ment au principe \u00ab ne vous r\u00e9p\u00e9tez pas \u00bb (DRY). Par exemple, si vous ajoutez une colonne \u00e0 un mod\u00e8le, celle-ci sera disponible partout o\u00f9 vous utilisez ce mod\u00e8le. \u00c0 l\u2019inverse, si vous aviez diss\u00e9min\u00e9 des requ\u00eates SQL \u00e9crites \u00e0 la main dans toute votre application, vous devriez modifier chacune d\u2019elles individuellement pour y inclure la nouvelle colonne.\r\n- SQLAlchemy peut vous aider \u00e0 \u00e9viter les vuln\u00e9rabilit\u00e9s li\u00e9es aux injections SQL.\r\n- Excellente compatibilit\u00e9 avec d\u2019autres biblioth\u00e8ques : comme vous le verrez dans les chapitres suivants, de nombreuses biblioth\u00e8ques utiles peuvent interagir directement avec vos mod\u00e8les SQLAlchemy pour offrir des interfaces de maintenance ou des API RESTful, par exemple.\r\n\r\nJ\u2019esp\u00e8re que cette liste vous enthousiasme. Si certains points ne vous sont pas encore clairs, ne vous inqui\u00e9tez pas : au fil de ce chapitre et des suivants, ces avantages deviendront plus concrets et significatifs. Maintenant que nous avons abord\u00e9 les b\u00e9n\u00e9fices de SQLAlchemy, installons-le et commen\u00e7ons \u00e0 coder.\r\n\r\n### Installer SQLAlchmy\r\n\r\nNous utiliserons `pip` pour installer SQLAlchemy dans l'environnement virtuel de l'application blog. Comme vous l'avez vu dans le chapitre pr\u00e9c\u00e9dent, pour activer votre environnement virtuel, modifiez les r\u00e9pertoires source du script d'activation comme suit :\r\n\r\n```bash\r\n$ cd ~/projects\r\n$ source .venv/bin/activate\r\n(.venv) ... $ pip install sqlalchemy\r\n```\r\nVous pouvez v\u00e9rifier si votre installation a r\u00e9ussi en ouvrant un interpr\u00e9teur Python et en v\u00e9rifiant la version de SQLAlchemy ; notez que votre num\u00e9ro de version exact risque de diff\u00e9rer.\r\n\r\n```bash\r\n$ python\r\n>>> import sqlalchemy\r\n>>> sqlalchmy.__version__\r\n'2.0.41'\r\n```\r\n\r\n### Utiliser SQLAlchemy dans notre application Flask\r\n\r\nSQLAlchemy fonctionne tr\u00e8s bien avec Flask seul, mais l'auteur de Flask a publi\u00e9 une extension sp\u00e9ciale appel\u00e9e Flask-SQLAlchemy qui fournit des aides pour de nombreuses t\u00e2ches courantes et peut nous \u00e9viter de r\u00e9inventer la roue plus tard. Utilisons pip pour installer cette extension :\r\n\r\n```bash\r\n(.venv) $ pip install flask-sqlalchemy\r\n```\r\n\r\nFlask fournit une interface standard pour les d\u00e9veloppeurs souhaitant cr\u00e9er des extensions. Avec la popularit\u00e9 croissante du framework, le nombre d'extensions de haute qualit\u00e9 a augment\u00e9. Si vous souhaitez consulter certaines des extensions les plus populaires, une liste tri\u00e9e est disponible sur le site web du projet Flask \u00e0 l'adresse <a href=\"http://flask.pocoo.org/extensions/\" target=\"_blank\">http://flask.pocoo.org/extensions/</a>.\r\n\r\n### Choisir le moteur de base de donn\u00e9es\r\n\r\nSQLAlchemy prend en charge une multitude de dialectes de bases de donn\u00e9es populaires, notamment SQLite, MySQL et PostgreSQL. Selon la base de donn\u00e9es que vous souhaitez utiliser, vous devrez peut-\u00eatre installer un package Python suppl\u00e9mentaire contenant un pilote de base de donn\u00e9es. Voici plusieurs bases de donn\u00e9es populaires prises en charge par SQLAlchemy et leurs pilotes installables via `pip`. Certaines bases de donn\u00e9es proposent plusieurs options de pilotes, j'ai donc list\u00e9 les plus populaires en premier.\r\n\r\n<table id=\"table-1\">\r\n    <caption>Drivers SQLAlchemy par syst\u00e8me de gestion de base de donn\u00e9es (SGBD) \u2013 Packages Python recommand\u00e9s pour chaque dialecte</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Base de donn\u00e9es</th>\r\n            <th scope=\"col\">Driver</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>SQLite</td>\r\n            <td>Non n\u00e9cessaire, fait partie de la biblioth\u00e8que standard de Python depuis la version 2.5.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>MySQL</td>\r\n            <td>MySQL-python, PyMySQL (pure Python), OurSQL</td>\r\n        </tr>\r\n        <tr>\r\n            <td>PostgreSQL</td>\r\n            <td>psycopg2-binary</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Firebird</td>\r\n            <td>fdb</td>\r\n        </tr>\r\n        <tr>\r\n            <td>SQL Server</td>\r\n            <td>pymssql, PyODBC</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Oracle</td>\r\n            <td>cx-Oracle</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nSQLite est fourni par d\u00e9faut avec Python et ne n\u00e9cessite pas de processus serveur s\u00e9par\u00e9, ce qui le rend parfait pour d\u00e9marrer rapidement. Par souci de simplicit\u00e9 dans les exemples suivants, je montrerai comment configurer l'application de blog pour l'utiliser avec SQLite. Si vous pr\u00e9f\u00e9rez utiliser une autre base de donn\u00e9es pour votre projet de blog, n'h\u00e9sitez pas \u00e0 installer d\u00e8s maintenant le package du pilote n\u00e9cessaire via `pip`.\r\n\r\n### Se connecter \u00e0 une base de donn\u00e9es\r\n\r\nOuvrez le module `config.py` de notre projet blog (`~/projects/blog/app/config.py`) avec votre \u00e9diteur de texte pr\u00e9f\u00e9r\u00e9. Nous allons ajouter un param\u00e8tre sp\u00e9cifique \u00e0 SQLAlchemy pour indiquer \u00e0 Flask-SQLAlchemy comment se connecter \u00e0 notre base de donn\u00e9es. Les nouvelles lignes sont mises en \u00e9vidence ci-dessous :\r\n\r\n```python\r\nfrom pathlib import Path\r\n\r\nclass Configuration(object):\r\n    APPLICATION_DIR = Path(__file__).resolve().parent\r\n    DEBUG = True\r\n    SQLALCHEMY_DATABASE_URI = f'sqlite:///{APPLICATION_DIR}/blog.db'\r\n```\r\n\r\n`SQLALCHEMY_DATABASE_URI` se compose des \u00e9l\u00e9ments suivants :\r\n`protocole+driver://username:password@host:port/database`\r\n\r\nComme les bases de donn\u00e9es SQLite sont stock\u00e9es dans des fichiers locaux, la seule information \u00e0 fournir est le chemin vers le fichier de base de donn\u00e9es. En revanche, pour vous connecter \u00e0 une instance PostgreSQL locale, votre URI ressemblerait plut\u00f4t \u00e0 ceci :\r\n`postgresql://postgres:secretpassword@localhost:5432/blog_db`\r\n\r\n**Remarque** : Si vous rencontrez des difficult\u00e9s pour vous connecter \u00e0 votre base de donn\u00e9es, consultez la documentation SQLAlchemy sur les URI de base de donn\u00e9es : <a href=\"http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html.\" target=\"_blank\">http://docs.sqlalchemy.org/en/rel_0_9/core/engines.html</a>.\r\n\r\nMaintenant que nous avons sp\u00e9cifi\u00e9 comment se connecter \u00e0 la base de donn\u00e9es, cr\u00e9ons l'objet responsable de la gestion des connexions \u00e0 notre base. Cet objet est fourni par l'extension `Flask-SQLAlchemy` et se nomme simplement `SQLAlchemy`. Ouvrez `app.py` et ajoutez les \u00e9l\u00e9ments suivants :\r\n\r\n```python\r\nfrom flask import Flask\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom config import Configuration\r\n\r\n\r\napp = Flask(__name__)\r\napp.config.from_object(Configuration)\r\ndb = SQLAlchemy(app)\r\n```\r\n\r\nCes modifications configurent notre application Flask (et par extension SQLAlchemy) pour communiquer avec la base de donn\u00e9es. L'\u00e9tape suivante consiste \u00e0 cr\u00e9er une table pour stocker les articles du blog, ce qui n\u00e9cessitera la cr\u00e9ation de notre premier mod\u00e8le.\r\n\r\n## Cr\u00e9ation du mod\u00e8le Entry\r\n\r\nUn mod\u00e8le repr\u00e9sente une table de donn\u00e9es que nous souhaitons stocker dans la base de donn\u00e9es. Ces mod\u00e8les contiennent des attributs appel\u00e9s colonnes qui repr\u00e9sentent les \u00e9l\u00e9ments de donn\u00e9es. Par exemple, pour un mod\u00e8le `Person`, nous pourrions avoir des colonnes pour le pr\u00e9nom, le nom, la date de naissance, l'adresse, la couleur des cheveux, etc. Dans notre cas, comme nous cr\u00e9ons un mod\u00e8le pour des articles de blog, nous utiliserons des colonnes pour le titre, le contenu et autres champs pertinents.\r\n\r\n**Remarque**: on ne dit pas un mod\u00e8le 'People' ou 'Entries' - **les mod\u00e8les sont toujours au singulier** m\u00eame s'ils repr\u00e9sentent g\u00e9n\u00e9ralement plusieurs objets diff\u00e9rents.\r\n\r\nAvec SQLAlchemy, cr\u00e9er un mod\u00e8le est aussi simple que de d\u00e9finir une classe et de lui attribuer diff\u00e9rents champs. Commen\u00e7ons par un mod\u00e8le tr\u00e8s basique pour nos articles de blog. Cr\u00e9ez un nouveau fichier nomm\u00e9 `models.py` dans le r\u00e9pertoire `app/` du projet blog, puis ajoutez le code suivant :\r\n\r\n```python\r\nimport datetime\r\nimport re\r\nfrom app import db\r\n\r\n\r\ndef slugify(s):\r\n    return re.sub('[^\\w]+', '-', s).lower()\r\n\r\n\r\nclass Entry(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    _title = db.Column('title', db.String(255))\r\n    slug = db.Column(db.String(255), unique=True)\r\n    body = db.Column(db.Text)\r\n    created_timestamp = db.Column(db.DateTime, default=datetime.datetime.now)\r\n    modified_timestamp = db.Column(db.DateTime, default=datetime.datetime.now, onupdate=datetime.datetime.now)\r\n\r\n    @property\r\n    def title(self):\r\n        return self._title\r\n\r\n    @title.setter\r\n    def title(self, value):\r\n        self._title = value\r\n        self.slug = slugify(value) if value else ''\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(Entry, self).__init__(*args, **kwargs)\r\n        if 'title' in kwargs:\r\n            self.slug = slugify(kwargs['title'])\r\n        else:\r\n            self.slug = ''\r\n\r\n    def __repr__(self):\r\n        return '<Entry: %r>' % self.title\r\n```\r\nPlusieurs \u00e9l\u00e9ments sont \u00e0 commenter. Commen\u00e7ons donc par les imports et d\u00e9taillons progressivement. Nous importons d'abord les modules standards `datetime` et `re`. Le module `datetime` servira \u00e0 obtenir la date/heure actuelle, tandis que `re` permettra des manipulations de cha\u00eenes. L'import suivant concerne l'objet `db` cr\u00e9\u00e9 dans `app.py`. Comme vous vous en souvenez, `db` est une instance de la classe SQLAlchemy (fournie par Flask-SQLAlchemy) et donne acc\u00e8s aux classes n\u00e9cessaires pour construire notre mod\u00e8le `Entry`, que nous verrons sous peu. \r\n\r\nAvant le mod\u00e8le `Entry`, nous d\u00e9finissons une fonction utilitaire `slugify` pour g\u00e9n\u00e9rer des URLs conviviales (utilis\u00e9es au Chapitre 4). Cette fonction transforme une cha\u00eene comme `Un article sur Flask` en `un-article-sur-flask` via des expressions r\u00e9guli\u00e8res. \r\n\r\nLe mod\u00e8le `Entry` lui-m\u00eame est une classe h\u00e9ritant de `db.Model`, ce qui lui conf\u00e8re des helpers pour interroger la base de donn\u00e9es. Ses attributs repr\u00e9sentent la structure de la table : \r\n\r\n- `id` (cl\u00e9 primaire auto-g\u00e9n\u00e9r\u00e9e), \r\n- `title` (String(100) pour le titre), \r\n- `slug` (String(100) unique pour l'URL), \r\n- `body` (Text pour le contenu illimit\u00e9), \r\n- `created_timestamp` (DateTime rempli automatiquement \u00e0 la cr\u00e9ation), \r\n- `modified_timestamp` (DateTime mis \u00e0 jour \u00e0 chaque sauvegarde).\r\n\r\n**Remarque** : Pour les cha\u00eenes courtes comme les titres ou noms, la colonne `String` est appropri\u00e9e, mais pour les textes potentiellement longs, il est pr\u00e9f\u00e9rable d'utiliser une colonne `Text` comme nous l'avons fait pour le corps de l'article.\r\n\r\nNous avons surcharg\u00e9 le constructeur de la classe (`__init__`) pour qu'il g\u00e9n\u00e8re automatiquement le slug \u00e0 partir du titre lors de la cr\u00e9ation d'un nouveau mod\u00e8le. \r\n\r\nLa derni\u00e8re partie est la m\u00e9thode `__repr__` qui produit une repr\u00e9sentation lisible des instances de notre classe `Entry`. Bien que son fonctionnement exact ne soit pas crucial,  `__repr__` permet d'identifier facilement les objets lors du d\u00e9bogage. \r\n\r\nEnfin, ajoutez les modifications indiqu\u00e9es dans `main.py` (point d'entr\u00e9e de l'application) pour importer les mod\u00e8les, comme suit :\r\n\r\n```python\r\nfrom app import app, db\r\nimport models\r\nimport views\r\n\r\n\r\nif __name__ == '__main__':\r\n    app.run()\r\n```\r\n\r\n### Cr\u00e9ation de la table Entry\r\n\r\nAfin de commencer \u00e0 travailler avec le mod\u00e8le `Entry`, nous devons d'abord cr\u00e9er une table pour celui-ci dans notre base de donn\u00e9es. Heureusement, Flask-SQLAlchemy propose un utilitaire pratique pour cela. cr\u00e9ez un fichier nomm\u00e9 `create_db.py` :\r\n\r\n```bash\r\n(.venv) $ cd app/\r\n(.venv) $ touch script_create_db.py\r\n```\r\nAjoutez le code suivant au module `create_db.py`. Cette fonction va automatiquement analyser tout le code que nous avons \u00e9crit et cr\u00e9er une nouvelle table dans notre base de donn\u00e9es pour le mod\u00e8le `Entry` bas\u00e9 sur nos mod\u00e8les :\r\n\r\n```python\r\nfrom main import db\r\nfrom models import Entry\r\nfrom app import app\r\n\r\n\r\nwith app.app_context():\r\n    db.create_all()\r\n```\r\n**Important** : L'appel \u00e0 app.app_context() est important car certaines op\u00e9rations avec Flask-SQLAlchemy n\u00e9cessitent un contexte d'application actif. \r\n\r\nEx\u00e9cutez le script depuis le r\u00e9pertoire `app/`. Assurez-vous que l\u2019environnement virtuel soit activ\u00e9. Si tout se passe correctement, vous ne devriez voir aucune sortie.\r\n\r\n```bash\r\n(.venv) $ python script_create_db.py\r\n```\r\n\r\n**Note** : Si vous rencontrez des erreurs lors de la cr\u00e9ation des tables de la base de donn\u00e9es, assurez-vous que vous vous trouvez dans le r\u00e9pertoire app et que l\u2019environnement virtuel est activ\u00e9 lorsque vous ex\u00e9cutez le script. V\u00e9rifiez ensuite qu\u2019il n\u2019y a aucune faute de frappe dans votre param\u00e8tre SQLALCHEMY_DATABASE_URI.\r\n\r\n\r\n## Travailler avec le mod\u00e8le `Entry`\r\n\r\nExp\u00e9rimentons avec notre nouveau mod\u00e8le `Entry` en enregistrant quelques articles de blog. Nous allons faire cela depuis le shell interactif de Python. \u00c0 ce stade, installons IPython, un shell sophistiqu\u00e9 offrant des fonctionnalit\u00e9s telles que l\u2019auto-compl\u00e9tion par tabulation (que le shell Python par d\u00e9faut ne propose pas).\r\n\r\n```bash\r\n(.venv) $ pip install ipython\r\n```\r\n\r\nV\u00e9rifiez maintenant que vous \u00eates dans le r\u00e9pertoire app, puis lan\u00e7ons le shell et cr\u00e9ons quelques entr\u00e9es comme suit :\r\n```bash\r\n(.venv) $ ipython\r\nIn []: from models import *\r\nIn []: db\r\nOut[]: <SQLAlchemy>\r\n```\r\n\r\n**Note**: Si vous \u00eates familier avec le shell Python classique mais pas avec IPython, certaines choses peuvent vous para\u00eetre un peu diff\u00e9rentes au d\u00e9but. L\u2019\u00e9l\u00e9ment principal \u00e0 conna\u00eetre est que `In[]` fait r\u00e9f\u00e9rence au code que vous saisissez, et `Out[]` correspond au r\u00e9sultat des commandes que vous entrez dans le shell.\r\n\r\nIPython dispose d\u2019une fonctionnalit\u00e9 pratique qui vous permet d\u2019afficher des informations d\u00e9taill\u00e9es sur un objet. Pour cela, il suffit de taper le nom de l\u2019objet suivi d\u2019un point d\u2019interrogation (?). L\u2019inspection du mod\u00e8le `Entry` fournit un certain nombre d\u2019informations, notamment la signature des arguments et la cha\u00eene repr\u00e9sentant cet objet (appel\u00e9e docstring) du constructeur.\r\n\r\n```bash\r\nIn []: Entry?\r\nInit signature: Entry(*args, **kwargs)\r\nDocstring:     \r\nThe base class of the :attr:`.SQLAlchemy.Model` declarative model class.\r\n\r\nTo define models, subclass :attr:`db.Model <.SQLAlchemy.Model>`, not this. To\r\ncustomize ``db.Model``, subclass this and pass it as ``model_class`` to\r\n:class:`.SQLAlchemy`. To customize ``db.Model`` at the metaclass level, pass an\r\nalready created declarative model class as ``model_class``.\r\nFile:           ~/projects/app/models.py\r\nType:           DefaultMeta\r\nSubclasses: \r\n```\r\n\r\n### Travailler avec IPython dans un contexte d'application Flask\r\n\r\nCr\u00e9ez un fichier nomm\u00e9 shell.py dans le dossier app. Dans ce fichier, ajoutez le code suivant :\r\n\r\n```python\r\nfrom main import *\r\nfrom models import *\r\n\r\n\r\nwith app.app_context():\r\n    import IPython\r\n    IPython.embed()\r\n```\r\n\r\nD\u00e9sormais, lorsque vous souhaiterez utiliser IPython dans un environnement Flask, vous n\u2019aurez plus besoin d'encapsuler vos requ\u00eates dans `with app.app_context()`. Pour l\u2019utiliser, il suffit d\u2019ex\u00e9cuter :\r\n\r\n```bash\r\n(.venv) $ python shell.py\r\n```\r\n\r\n\r\nRevenons \u00e0 notre model `Entry.`Nous pouvons cr\u00e9er des objets `Entry` en passant les valeurs des colonnes sous forme d\u2019arguments nomm\u00e9s. Dans l\u2019exemple pr\u00e9c\u00e9dent, on utilise `**kwargs` ; il s\u2019agit d\u2019un raccourci permettant de prendre un objet de type dictionnaire et de l\u2019utiliser comme valeurs pour d\u00e9finir l\u2019objet, comme illustr\u00e9 ci-dessous. N'oubliez pas que vous devez \u00eatre dans le contexte de `app` (`with app.app_context()`) :\r\n\r\n```bash\r\n(.venv)$ python shell.py\r\nIn []: from main import app\r\nIn []: first_entry = Entry(title='premier article', body='contenu du premier article')\r\nIn []: db.session.add(first_entry)\r\nIn []: db.session.commit()\r\nIn []: db.session.refresh(first_entry)\r\n```\r\n\r\nLa session est simplement un objet qui repr\u00e9sente nos actions sur la base de donn\u00e9es.. Pour enregistrer notre premi\u00e8re entr\u00e9e, nous devons l\u2019ajouter \u00e0 la session de base de donn\u00e9es `db.session.add(first_entry)`. Pour l\u2019enregistrer d\u00e9finitivement, nous devons valider la session (commit) `db.session.commit()`.  La m\u00e9thode `refresh` permet de r\u00e9cuperer la ligne une fois enregistrer. Vous pouvez r\u00e9cup\u00e9rer les donn\u00e9es g\u00e9n\u00e9r\u00e9es en base de donn\u00e9es  :\r\n\r\n```bash\r\nIn []: first_entry.id\r\nOut[]: 1\r\nIn []: first_entry.created_timestamp\r\nOut[]: datetime.datetime(2025, 5, 25, 9, 49, 53, 1337)\r\n```\r\nComme vous pouvez le voir dans les exemples de code pr\u00e9c\u00e9dents, une fois que vous validez la session, un identifiant unique sera attribu\u00e9 \u00e0 votre premi\u00e8re entr\u00e9e et le champ `created_timestamp` sera d\u00e9fini \u00e0 l\u2019heure actuelle. F\u00e9licitations, vous avez cr\u00e9\u00e9 votre premier article de blog ! N\u2019h\u00e9sitez pas \u00e0 en ajouter plusieurs autres par vous-m\u00eame. Vous pouvez ajouter plusieurs objets `Entry` \u00e0 la m\u00eame session avant de la valider, alors essayez aussi cette m\u00e9thode.\r\n\r\n**Note**: \u00c0 tout moment, pendant vos exp\u00e9rimentations, n\u2019h\u00e9sitez pas \u00e0 supprimer le fichier `blog.db` puis \u00e0 relancer le script `script_create_db.py` pour repartir avec une base de donn\u00e9es toute neuve.\r\n\r\n### Modifier une entr\u00e9e existante\r\n\r\nPour apporter des modifications \u00e0 une entr\u00e9e existante (`Entry`), il vous suffit d\u2019effectuer les changements souhait\u00e9s, puis de valider la session (commit). R\u00e9cup\u00e9rons notre entr\u00e9e \u00e0 l\u2019aide de l\u2019identifiant qui nous a \u00e9t\u00e9 retourn\u00e9 pr\u00e9c\u00e9demment, modifions-la, puis validons les changements. SQLAlchemy d\u00e9tectera automatiquement qu\u2019une mise \u00e0 jour est n\u00e9cessaire.\r\n\r\nVoici un exemple illustrant comment modifier la premi\u00e8re entr\u00e9e :\r\n```bash\r\nIn []: first_entry = Entry.query.get(1)\r\nIn []:  first_entry.title = \"changement du titre de l'article\"\r\nIn []:  db.session.commit()\r\n```\r\nEt voil\u00e0, vos modifications sont enregistr\u00e9es.\r\n\r\n**Astuce** : Si vous souhaitez visualiser les donn\u00e9es enregistr\u00e9es dans votre base de donn\u00e9es SQLite, vous pouvez utiliser un client graphique tel que <a href=\"http://sqlitebrowser.org\" target=\"_blank\">DB Browser for SQLite</a>.\r\nIl vous suffit d\u2019ouvrir le fichier `blog.db` (ou le nom de votre base) avec ce logiciel pour parcourir, modifier ou exporter vos donn\u00e9es de mani\u00e8re visuelle.\r\n\r\n### Supprimer une entr\u00e9e\r\n\r\nSupprimer une entr\u00e9e est tout aussi simple que d\u2019en cr\u00e9er une. Au lieu d\u2019appeler db.session.add, vous appellerez db.session.delete en passant l\u2019instance de l\u2019Entry que vous souhaitez supprimer.\r\n\r\n```bash\r\nIn []: second_entry = Entry()\r\nIn []: second_entry.title = \"un second titre\"\r\nIn []: second_entry.body = \"du contenu\"\r\nIn []: db.session.add(second_entry) # cr\u00e9ation d'une nouvelle entr\u00e9e\r\nIn []: db.session.commit()\r\nIn []: to_delete = Entry.query.get(1) # la premi\u00e8re ligne \u00e0 supprimer id = 1\r\nIn []: db.session.delete(to_delete)\r\nIn []: db.session.commit()\r\n```\r\n### R\u00e9cup\u00e9ration des articles de blog\r\n\r\nBien que la cr\u00e9ation, la mise \u00e0 jour et la suppression soient des op\u00e9rations assez simples, le vrai plaisir commence lorsque nous examinons les diff\u00e9rentes mani\u00e8res de r\u00e9cup\u00e9rer nos articles. Nous allons commencer par les bases, puis progresser vers des requ\u00eates plus int\u00e9ressantes. Nous allons utiliser un attribut sp\u00e9cial sur notre classe de mod\u00e8le pour effectuer les requ\u00eates : `Entry.query`. Cet attribut expose une vari\u00e9t\u00e9 d\u2019interfaces (APIs) permettant de travailler avec la collection d\u2019articles dans la base de donn\u00e9es.\r\n\r\nR\u00e9cup\u00e9rons simplement une liste de toutes les entr\u00e9es de la table `Entry` :\r\n\r\n```bash\r\nIn []: entries = Entry.query.all()\r\nIn []: entries\r\nOut[]: [<Entry: 'ttitre 1 '>, <Entry: 'titre 2'>]\r\n```\r\n\r\nComme vous pouvez le voir, dans cet exemple, la requ\u00eate retourne une liste d\u2019instances de `Entry` que nous avons cr\u00e9\u00e9es.\r\nLorsque aucun ordre explicite n\u2019est sp\u00e9cifi\u00e9, les entr\u00e9es nous sont renvoy\u00e9es dans un ordre arbitraire d\u00e9fini par la base de donn\u00e9es. Sp\u00e9cifions maintenant que nous souhaitons que les entr\u00e9es nous soient renvoy\u00e9es par ordre alphab\u00e9tique, selon leur titre :\r\n\r\n```bash\r\nIn []: entries = Entry.query.order_by('title').all()\r\nIn []: entries\r\nOut[]: [<Entry: 'titre A'>, <Entry: 'titre B'>]\r\n```\r\n\r\nVoici maintenant comment lister vos entr\u00e9es par ordre chronologique inverse, en se basant sur leur date de derni\u00e8re mise \u00e0 jour :\r\n```bash\r\nIn []: from sqlalchemy import desc\r\nIn []: entries = Entry.query.order_by(desc('modified_timestamp')).all()\r\nIn []: entries\r\nOut[]: [<Entry: 'titre B'>, <Entry: 'titre A'>]\r\n```\r\n\r\n### Filtrer la liste des articles\r\nIl est tr\u00e8s utile de pouvoir r\u00e9cup\u00e9rer l\u2019ensemble des articles de blog, mais que faire si nous voulons filtrer cette liste ? Nous pourrions toujours r\u00e9cup\u00e9rer toute la collection, puis la filtrer en Python \u00e0 l\u2019aide d\u2019une boucle, mais ce serait tr\u00e8s inefficace.\r\n\r\n\u00c0 la place, nous allons nous appuyer sur la base de donn\u00e9es pour effectuer le filtrage, en sp\u00e9cifiant simplement les conditions que doivent remplir les entr\u00e9es \u00e0 retourner. Dans l\u2019exemple suivant, nous allons sp\u00e9cifier que nous voulons filtrer les entr\u00e9es dont le titre est \u00e9gal \u00e0 `First entry`.\r\n\r\n```bash\r\nIn []: entries = Entry.query.filter(Entry.title == 'titre B').all()\r\nIn []: entries\r\nOut[]: [<Entry: 'titre B'>]\r\n```\r\nSi cela vous semble un peu magique, c\u2019est parce que \u00e7a l\u2019est vraiment ! SQLAlchemy utilise la surcharge d\u2019op\u00e9rateurs pour convertir des expressions telles que `<Mod\u00e8le>.<colonne> == <une valeur>` en un objet abstrait appel\u00e9 BinaryExpression.\r\nLorsque vous \u00eates pr\u00eat \u00e0 ex\u00e9cuter votre requ\u00eate, ces structures de donn\u00e9es sont ensuite traduites en SQL.\r\n\r\n**Note** : Un BinaryExpression est tout simplement un objet qui repr\u00e9sente une comparaison logique. Il est g\u00e9n\u00e9r\u00e9 en surchargeant les m\u00e9thodes standards g\u00e9n\u00e9ralement appel\u00e9es sur un objet lors d\u2019une comparaison de valeurs en Python.\r\n\r\nPour r\u00e9cup\u00e9rer une seule entr\u00e9e, vous avez deux options : `.first()` et `.one()`. Leurs diff\u00e9rences et similitudes sont r\u00e9sum\u00e9es dans le tableau suivant :\r\n\r\n<table>\r\n    <caption>Comparaison des comportements des m\u00e9thodes <code>.first()</code> et <code>.one()</code> en fonction du nombre de lignes retourn\u00e9es par la requ\u00eate</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Nombre de lignes correspondantes</th>\r\n            <th scope=\"col\">Comportement <code>.first()</code></th>\r\n            <th scope=\"col\">Comportement <code>.one()</code></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>1</td>\r\n            <td><code>return object</code></td>\r\n            <td><code>return object</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>0</td>\r\n            <td><code>return None</code></td>\r\n            <td><code>Raise sqlalchemy.orm.exc.NoResultFound</code></td>\r\n        </tr>\r\n        <tr>\r\n            <td>2+</td>\r\n            <td><code>return object</code></td>\r\n            <td><code>Raise sqlalchemy.orm.exc.MultipleResultsFound</code></td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nEssayons la m\u00eame requ\u00eate qu\u2019auparavant, mais au lieu d\u2019appeler `.all()`, nous allons utiliser `.first()` pour r\u00e9cup\u00e9rer une seule instance de `Entry` :\r\n```bash\r\nIn []: entries = Entry.query.filter(Entry.title == 'titre B').first()\r\nIn []: entries\r\nOut[]: <Entry: 'titre B'>\r\n```\r\nNotez qu\u2019auparavant, `.all()` retournait une liste contenant l\u2019objet, tandis que `.first()` renvoyait directement l\u2019objet lui-m\u00eame.\r\n\r\n### Recherches sp\u00e9ciales\r\nDans l\u2019exemple pr\u00e9c\u00e9dent, nous avons test\u00e9 une \u00e9galit\u00e9, mais il existe de nombreux autres types de recherches possibles. Dans le tableau suivant, nous avons list\u00e9 quelques-unes que vous pourriez trouver utiles. Vous pouvez consulter la documentation de SQLAlchemy pour obtenir la liste compl\u00e8te.\r\n\r\n<table>\r\n    <caption>Exemples de requ\u00eates SQLAlchemy avec leur signification correspondante</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Exemple</th>\r\n            <th scope=\"col\">Signification</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>Entry.title == 'The title'</td>\r\n            <td>Entr\u00e9es dont le titre est \"The title\", en respectant la casse (sensible \u00e0 la casse).</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.title != 'The title'</td>\r\n            <td>Entr\u00e9es dont le titre n\u2019est pas \"The title\".</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.created_timestamp &lt; datetime.date(2014, 1, 25)</td>\r\n            <td>Entr\u00e9es cr\u00e9\u00e9es avant le 25 janvier 2014. Pour \"inf\u00e9rieur ou \u00e9gal\", utilisez &lt;=.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.created_timestamp &gt; datetime.date(2014, 1, 25)</td>\r\n            <td>Entr\u00e9es cr\u00e9\u00e9es avant le 25 janvier 2014. Pour \"sup\u00e9rieur ou \u00e9gal\", utilisez &gt;=.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.body.contains('Python')</td>\r\n            <td>Entr\u00e9es dont le contenu (**body**) contient le mot **\"Python\"**, en respectant la casse (sensible \u00e0 la casse).</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.title.endswith('Python')</td>\r\n            <td>Entr\u00e9es dont le titre se termine par la cha\u00eene **\"Python\"**, en respectant la casse (sensible \u00e0 la casse). Notez que cela correspondra \u00e9galement \u00e0 des titres se terminant par des mots comme **\"CPython\"**, par exemple.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.title.startswith('Python')</td>\r\n            <td>Entr\u00e9es dont le titre commence par la cha\u00eene **\"Python\"**, en respectant la casse (sensible \u00e0 la casse). Notez que cela correspondra \u00e9galement \u00e0 des titres comme **\"Pythonistas\"**, par exemple.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.body.ilike('%python%')</td>\r\n            <td>Entr\u00e9es dont le contenu (**body**) contient le mot **\"python\"** n'importe o\u00f9 dans le texte, **sans tenir compte de la casse** (insensible \u00e0 la casse).  Le caract\u00e8re **`%`** est un **joker** (wildcard) qui repr\u00e9sente n\u2019importe quelle s\u00e9quence de caract\u00e8res.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Entry.title.in_(['Title one', 'Title two'])</td>\r\n            <td>Entr\u00e9es dont le titre figure dans la liste donn\u00e9e, c\u2019est-\u00e0-dire **'Title one'** ou **'Title two'**.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\n### Combinaison d\u2019expressions\r\nLes expressions list\u00e9es dans le tableau pr\u00e9c\u00e9dent peuvent \u00eatre combin\u00e9es \u00e0 l\u2019aide d\u2019op\u00e9rateurs binaires pour cr\u00e9er des expressions arbitrairement complexes.\r\n\r\nPar exemple, si nous voulons r\u00e9cup\u00e9rer tous les articles de blog dont le titre contient le mot **Python** ou **Flask**, nous allons cr\u00e9er deux expressions `contains`, puis les combiner avec l\u2019op\u00e9rateur binaire **OR** de Python, qui s\u2019\u00e9crit avec un caract\u00e8re **pipe** `|`, contrairement \u00e0 beaucoup d\u2019autres langages qui utilisent le double pipe `||` :\r\n\r\n```python\r\nEntry.query.filter(Entry.title.contains('Python') | Entry.title.contains('Flask'))\r\n```\r\n\r\nEn utilisant les op\u00e9rateurs binaires, on peut cr\u00e9er des expressions assez complexes. Essaie de comprendre ce que demande l\u2019exemple suivant :\r\n\r\n```python\r\nEntry.query.filter((Entry.title.contains('Python') | Entry.title.contains('Flask')) & (Entry.created_timestamp > (datetime.date.today() -\r\ndatetime.timedelta(days=30))))\r\n```\r\nComme vous l\u2019avez probablement devin\u00e9, cette requ\u00eate renvoie toutes les entr\u00e9es dont le titre contient soit **Python** soit **Flask**, et qui ont \u00e9t\u00e9 cr\u00e9\u00e9es au cours des 30 derniers jours. Nous utilisons les op\u00e9rateurs binaires **OR** et **AND** de Python pour combiner les sous-expressions.\r\n\r\nPour toute requ\u00eate que vous construisez, vous pouvez afficher le SQL g\u00e9n\u00e9r\u00e9 en imprimant la requ\u00eate de la mani\u00e8re suivante :\r\n\r\n```bash\r\nIn []: entries = Entry.query.filter(Entry.slug.contains('test'))\r\nIn []: print(str(entries))\r\nSELECT entry.id AS entry_id, entry.title AS entry_title, entry.slug AS entry_slug, entry.body AS entry_body, entry.created_timestamp AS entry_created_timestamp, entry.modified_timestamp AS entry_modified_timestamp \r\nFROM entry WHERE (entry.slug LIKE '%' || ? || '%')\r\n```\r\n\r\n### N\u00e9gation\r\n\r\nIl reste une notion \u00e0 aborder : la n\u00e9gation. Si nous voulions obtenir une liste de tous les articles de blog dont le titre ne contient ni **Python** ni **Flask**, comment ferions-nous ? SQLAlchemy offre deux fa\u00e7ons de cr\u00e9er ce type d\u2019expressions : en utilisant soit l\u2019op\u00e9rateur unaire de n\u00e9gation de Python (`~`), soit en appelant `db.not_()`. Voici comment construire cette requ\u00eate avec SQLAlchemy :\r\n\r\n```python\r\nEntry.query.filter(~(Entry.title.contains('Python') | Entry.title.contains('Flask')))\r\nEntry.query.filter(db.not_(Entry.title.contains('Python') | Entry.title.contains('Flask')))\r\n```\r\n\r\n### Priorit\u00e9 des op\u00e9rateurs\r\n\r\nToutes les op\u00e9rations ne sont pas trait\u00e9es de la m\u00eame mani\u00e8re par l\u2019interpr\u00e9teur Python. C\u2019est un peu comme en math\u00e9matiques, o\u00f9 l\u2019on apprend que l\u2019expression `2 + 3 * 4` vaut `14` et non `20`, car la multiplication est effectu\u00e9e avant l\u2019addition. En Python, les op\u00e9rateurs bit \u00e0 bit ont une priorit\u00e9 plus \u00e9lev\u00e9e que, par exemple, les tests d\u2019\u00e9galit\u00e9. Cela signifie que, lorsque vous construisez votre expression de requ\u00eate, il faut faire attention \u00e0 bien utiliser les parenth\u00e8ses. Regardons quelques exemples d\u2019expressions Python et leurs requ\u00eates correspondantes :\r\n\r\n<table>\r\n    <caption>Exemples d\u2019expressions SQLAlchemy et leurs r\u00e9sultats en fonction de la priorit\u00e9 des op\u00e9rateurs</caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Expression</th>\r\n            <th scope=\"col\">R\u00e9sultat</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>(Entry.title == 'Python' | Entry.title == 'Flask')</td>\r\n            <td>Faux ! SQLAlchemy g\u00e9n\u00e8re une erreur parce que la premi\u00e8re chose \u00e9valu\u00e9e est en r\u00e9alit\u00e9 'Python' | Entry.title !</td>\r\n        </tr>\r\n        <tr>\r\n            <td>(Entry.title == 'Python') | (Entry.title == 'Flask')</td>\r\n            <td>Exact. Retourne les entr\u00e9es dont le titre est soit \u00ab Python \u00bb soit \u00ab Flask \u00bb.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>~Entry.title == 'Python'</td>\r\n            <td>Faux ! SQLAlchemy va transformer cela en une requ\u00eate SQL valide, mais les r\u00e9sultats ne seront pas pertinents.</td>\r\n        </tr>\r\n        <tr>\r\n            <td>~(Entry.title == 'Python')</td>\r\n            <td>Exact. Retourne les entr\u00e9es dont le titre n\u2019est pas \u00e9gal \u00e0 \u00ab Python \u00bb.</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nSi vous avez du mal avec la priorit\u00e9 des op\u00e9rateurs, il est prudent de mettre des parenth\u00e8ses autour de toute comparaison utilisant `==`, `!=`, `<`, `<=`, `>` et `>=`.\r\n\r\n## Cr\u00e9er un syst\u00e8me de tags\r\n\r\nLes tags sont un syst\u00e8me de taxonomie l\u00e9ger, parfaitement adapt\u00e9 aux blogs. Ils permettent d\u2019attribuer plusieurs cat\u00e9gories \u00e0 un article de blog et de relier plusieurs articles entre eux, ind\u00e9pendamment de leur cat\u00e9gorie principale. Sur mon propre blog, j\u2019utilise les tags pour organiser les articles, de sorte que les personnes int\u00e9ress\u00e9es par mes publications sur Flask puissent simplement consulter le tag \u00ab Flask \u00bb et trouver tous les articles pertinents.\r\n\r\nComme indiqu\u00e9 dans les sp\u00e9cifications abord\u00e9es au [Chapitre 2, \u00ab Pr\u00e9paration du projet de blog \u00bb](/articles/flask-chapitre-2-preparation-du-projet-de-blog-14.html), chaque article de blog peut avoir autant ou aussi peu de tags que vous le souhaitez. Ainsi, un article sur Flask peut \u00eatre \u00e9tiquet\u00e9 \u00e0 la fois avec les tags \u00ab Flask \u00bb et  \u00ab Python \u00bb. De m\u00eame, chaque tag (par exemple *Python*) peut \u00eatre associ\u00e9 \u00e0 plusieurs articles. En termes de base de donn\u00e9es, cela s\u2019appelle une **relation plusieurs-\u00e0-plusieurs** (*many-to-many*).\r\n\r\nPour mod\u00e9liser cela, nous devons d\u2019abord cr\u00e9er un mod\u00e8le pour stocker les tags. Ce mod\u00e8le contiendra les noms des tags que nous utilisons, donc apr\u00e8s en avoir ajout\u00e9 quelques-uns, la table pourrait ressembler \u00e0 celle-ci :\r\n\r\n<table>\r\n  <caption>Donn\u00e9es de la table Tags</caption>\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">id</th>\r\n      <th scope=\"col\">tag</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>1</td>\r\n      <td>Python</td>\r\n    </tr>\r\n    <tr>\r\n      <td>2</td>\r\n      <td>Flask</td>\r\n    </tr>\r\n    <tr>\r\n      <td>3</td>\r\n      <td>Django</td>\r\n    </tr>\r\n    <tr>\r\n      <td>4</td>\r\n      <td>Divers</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nOuvrons le fichier `models.py` et ajoutons une d\u00e9finition pour le mod\u00e8le `Tag`. Ajoutez la classe suivante \u00e0 la fin du fichier, en dessous de la classe `Entry` :\r\n\r\n```python\r\nclass Tag(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    name = db.Column(db.String(64))\r\n    slug = db.Column(db.String(64), unique=True)\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(Tag, self).__init__(*args, **kwargs)\r\n        self.slug = slugify(self.name)\r\n\r\n    def __repr__(self):\r\n        return '<Tag %r>' % self.name\r\n```\r\n\r\nVous avez d\u00e9j\u00e0 vu tout cela auparavant. Nous avons ajout\u00e9 une cl\u00e9 primaire, qui sera g\u00e9r\u00e9e par la base de donn\u00e9es, ainsi qu\u2019une seule colonne pour stocker le nom du tag. La colonne `name` est marqu\u00e9e comme unique, ce qui signifie que chaque tag ne sera repr\u00e9sent\u00e9 que par une seule ligne dans cette table, peu importe le nombre d\u2019articles de blog auxquels il est associ\u00e9.\r\n\r\nMaintenant que nous avons des mod\u00e8les pour les articles de blog et pour les tags, nous avons besoin d\u2019un troisi\u00e8me mod\u00e8le pour stocker les relations entre les deux (relation n*n). Lorsque nous voulons indiquer qu\u2019un article est associ\u00e9 \u00e0 un tag particulier, nous stockons une r\u00e9f\u00e9rence dans cette table. \r\n\r\nComme nous n\u2019acc\u00e9derons jamais directement \u00e0 cette table interm\u00e9diaire (SQLAlchemy la g\u00e9rera de mani\u00e8re transparente pour nous), nous ne cr\u00e9erons pas de mod\u00e8le pour celle-ci, mais nous allons simplement d\u00e9finir une table pour stocker la correspondance. Ouvrez le fichier `models.py` et ajoutez le code suivant :\r\n\r\n**au dessus de la class `Entry`** :\r\n\r\n```python\r\nentry_tags = db.Table('entry_tags',\r\n    db.Column('tag_id', db.Integer, db.ForeignKey('tag.id')),\r\n    db.Column('entry_id', db.Integer, db.ForeignKey('entry.id'))\r\n)\r\n```\r\n\r\n**dans la class `Entry` au dessus de la m\u00e9thode `__init__` : \r\n```python\r\ntags = db.relationship('Tag', secondary=entry_tags, backref=db.backref('entries', lazy='dynamic'))\r\n```\r\n\r\nLe fichier  `models.py` devrait \u00eatre comme ceci: \r\n```python\r\nimport datetime, re\r\nfrom app import db\r\n\r\n\r\ndef slugify(s):\r\n    return re.sub('[^\\w]+', '-', s).lower()\r\n\r\n\r\nentry_tags = db.Table('entry_tags',\r\n    db.Column('tag_id', db.Integer, db.ForeignKey('tag.id')),\r\n    db.Column('entry_id', db.Integer, db.ForeignKey('entry.id'))\r\n)\r\n\r\nclass Entry(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    _title = db.Column('title', db.String(255))\r\n    slug = db.Column(db.String(255), unique=True)\r\n    body = db.Column(db.Text)\r\n    created_timestamp = db.Column(db.DateTime, default=datetime.datetime.now)\r\n    modified_timestamp = db.Column(db.DateTime, default=datetime.datetime.now, onupdate=datetime.datetime.now)\r\n\r\n    @property\r\n    def title(self):\r\n        return self._title\r\n\r\n    @title.setter\r\n    def title(self, value):\r\n        self._title = value\r\n        self.slug = slugify(value) if value else ''\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(Entry, self).__init__(*args, **kwargs)\r\n        if 'title' in kwargs:\r\n            self.slug = slugify(kwargs['title'])\r\n        else:\r\n            self.slug = ''\r\n\r\n    def __repr__(self):\r\n        return '<Entry: %r>' % self.title\r\n\r\n\r\nclass Tag(db.Model):\r\n    id = db.Column(db.Integer, primary_key=True)\r\n    name = db.Column(db.String(64))\r\n    slug = db.Column(db.String(64), unique=True)\r\n\r\n    def __init__(self, *args, **kwargs):\r\n        super(Tag, self).__init__(*args, **kwargs)\r\n        self.slug = slugify(self.name)\r\n\r\n    def __repr__(self):\r\n        return '<Tag %r>' % self.name\r\n```\r\n\r\nEn cr\u00e9ant la table `entry_tags`, nous avons \u00e9tabli un lien entre les mod\u00e8les `Entry` et `Tag`. SQLAlchemy fournit une API de haut niveau pour g\u00e9rer cette relation, via la fonction bien nomm\u00e9e `db.relationship`. Cette fonction cr\u00e9e une nouvelle propri\u00e9t\u00e9 sur le mod\u00e8le `Entry` qui nous permet de lire et d\u2019\u00e9crire facilement les tags associ\u00e9s \u00e0 un article de blog donn\u00e9. Ces deux lignes de code font beaucoup de choses, alors examinons-les de plus pr\u00e8s :\r\n\r\n```python\r\ntags = db.relationship('Tag', secondary=entry_tags, backref=db.backref('entries', lazy='dynamic'))\r\n```\r\n\r\nNous d\u00e9finissons l\u2019attribut `tags` de la classe `Entry` comme \u00e9tant \u00e9gal \u00e0 la valeur retourn\u00e9e par la fonction `db.relationship`. Les deux premiers arguments, `'Tag'` et `secondary=entry_tags`, indiquent \u00e0 SQLAlchemy que nous allons interroger le mod\u00e8le `Tag` via la table `entry_tags`. Le troisi\u00e8me argument cr\u00e9e une **r\u00e9f\u00e9rence inverse**, ce qui nous permet de passer du mod\u00e8le `Tag` \u00e0 la liste des articles de blog associ\u00e9s. En sp\u00e9cifiant `lazy='dynamic'`, nous demandons \u00e0 SQLAlchemy de ne pas charger imm\u00e9diatement tous les articles associ\u00e9s, mais de nous fournir \u00e0 la place un objet `Query`.\r\n\r\n### Ajouter et supprimer des tags des entr\u00e9es\r\n\r\nUtilisons le shell IPython pour voir comment cela fonctionne. Fermez votre shell actuel et relancez le script `script_create_db.py`. Cette \u00e9tape est n\u00e9cessaire car nous avons ajout\u00e9 deux nouvelles tables. Maintenant, rouvrez IPython :\r\n\r\n```bash\r\n(.venv) $ python script_create_db.py\r\n(.venv) $ ipython\r\nIn []: from models import *\r\nIn []: from main import *\r\nIn []: Tag.query.all()\r\nOut[]: []\r\n```\r\n\r\nIl n'y a actuellement aucun tag dans la base de donn\u00e9es, alors cr\u00e9ons-en quelques-uns :\r\n\r\n```bash\r\nIn []: python = Tag(name='python')\r\nIn []: flask = Tag(name='flask')\r\nIn []: db.session.add_all([python, flask])\r\nIn []: db.session.commit()\r\n```\r\nChargeons maintenant quelques entr\u00e9es d'exemple. Dans ma base de donn\u00e9es, il y en a quatre :\r\n\r\n```bash\r\nIn []: entries = Entry.query.all()\r\nIn []: entries\r\nOut[]: \r\n[<Entry: 'python article'>,\r\n <Entry: 'flask article'>,\r\n <Entry: 'un autre article flask'>,\r\n <Entry: 'Django article'>]\r\n In []: python_entry, flask_entry, more_flask, django_entry = entries\r\n```\r\nPour ajouter des tags \u00e0 une entr\u00e9e, il suffit de les assigner \u00e0 l\u2019attribut `tags` de l\u2019entr\u00e9e. C\u2019est aussi simple que \u00e7a !\r\n\r\n```bash\r\nIn []: python_entry.tags = [python]   \r\nIn []: flask_entry.tags = [python, flask]\r\nIn []: db.session.commit()\r\n```\r\nNous pouvons manipuler la liste de tags d\u2019une entr\u00e9e comme une liste Python classique, donc les m\u00e9thodes habituelles `.append()` et `.remove()` fonctionneront \u00e9galement.\r\n\r\n```bash\r\nIn []: pandas = Tag(name='pandas')\r\nIn []: python_entry.tags.append(pandas)\r\nIn []: db.session.commit()\r\nIn []: python_entry.tags\r\nOut[]: [<Tag python>, <Tag pandas>]\r\nIn []: python_entry.tags.remove(pandas)\r\nIn []: db.session.commit()\r\nIn []: python_entry.tags\r\nOut[]: [<Tag python>]\r\n```\r\n\r\n### Utilisation des r\u00e9f\u00e9rences invers\u00e9es\r\n\r\nLorsque nous avons cr\u00e9\u00e9 l\u2019attribut `tags` dans le mod\u00e8le `Entry`, vous vous souvenez que nous avons pass\u00e9 un argument `backref`. Utilisons IPython pour voir comment la r\u00e9f\u00e9rence invers\u00e9e est utilis\u00e9e.\r\n\r\n```bash\r\nIn []: python\r\nOut[]: <Tag python>\r\nIn []: python.entries\r\nOut[]: <sqlalchemy.orm.dynamic.AppenderQuery at 0x7f614cd7cac0>\r\nIn []: python.entries.all()\r\nOut[]: [<Entry: 'python entry'>, <Entry: 'flask entry'>]\r\n``` \r\n\r\nContrairement \u00e0 la r\u00e9f\u00e9rence `Entry.tags`, la r\u00e9f\u00e9rence inverse est sp\u00e9cifi\u00e9e avec `lazy='dynamic'`. Cela signifie que, contrairement \u00e0 `entry.tags`, qui renvoie une liste de tags, nous ne recevrons pas une liste d'entr\u00e9es chaque fois que nous acc\u00e9dons \u00e0 `tag.entries`. Pourquoi ? En g\u00e9n\u00e9ral, lorsque le r\u00e9sultat contient plus que quelques \u00e9l\u00e9ments, il est plus utile de traiter la r\u00e9f\u00e9rence inverse comme une requ\u00eate, que l\u2019on peut filtrer, trier, etc. Par exemple, que faire si l\u2019on souhaite afficher la derni\u00e8re entr\u00e9e tagu\u00e9e avec \"python\" ?\r\n\r\n```bash\r\nIn []: python.entries.order_by(Entry.created_timestamp.desc()).first()\r\nOut[]: <Entry: 'flask entry'>\r\n``` \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "created": "2025-06-10T10:44:28.015044",
      "updated": "2025-06-25T21:00:53.491789",
      "meta_description": "bla",
      "status_id": 1,
      "categories_id": 3
    },
    {
      "id": 17,
      "title": "Labelliser les points de rep\u00e8re",
      "slug": "labelliser-les-points-de-repere",
      "body": "Les rep\u00e8res ne sont utiles que si ce qu'ils repr\u00e9sentent est clair. Lorsqu'il existe plusieurs points de rep\u00e8re du m\u00eame type, les utilisateurs peuvent avoir du mal \u00e0 les diff\u00e9rencier, ce qui rend la navigation par points de rep\u00e8re difficile, voire inutile.\r\n\r\nLe moyen le plus fiable de diff\u00e9rencier les points de rep\u00e8re d'un m\u00eame type est de les \u00e9tiqueter \u00e0 l'aide des attributs `aria-labelledby` ([exemple 1](#exemple-1)) ou `aria-label` ([exemple 2](#exemple-2)).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Rep\u00e8re de navigation \u00e9tiquet\u00e9 via `aria-labelledby`**\r\n\r\n```html\r\n<nav aria-labelledby=\"pagination_heading\">\r\n  <h2 id=\"pagination_heading\">Pages</h2>\r\n  \u2026\r\n</nav>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Rep\u00e8res de navigation \u00e9tiquet\u00e9s via `aria-label`**\r\n\r\n```html\r\n<nav aria-label=\"Main\">\r\n  \u2026\r\n</nav>\r\n<nav aria-label=\"Page\">\r\n  \u2026\r\n</nav>\r\n```\r\n\r\nLorsque vous avez plusieurs navigations sur une page, comme une navigation \u00e0 l'\u00e9chelle du site, une navigation locale pour la page et une pagination, vous avez \u00e9galement trois \u00e9l\u00e9ments `<nav>`, comme le montre l'[exemple&nbsp;3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Trois rep\u00e8res de navigation non \u00e9tiquet\u00e9s**\r\n\r\n```html\r\n<nav>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/home\">Accueil</a>\r\n    </li>\r\n    ...\r\n  </ul>\r\n</nav>\r\n<nav>\r\n  <ul>\r\n    <li>\r\n       <a href=\"/category-1\">Categorie 1</a>\r\n    </li>\r\n  ...\r\n  </ul>\r\n</nav>\r\n<nav>\r\n  <ul>\r\n    <li>\r\n      <a href=\"/page-1\">1</a>\r\n    </li>\r\n  ...\r\n  </ul>\r\n</nav>\r\n```\r\n\r\nLe fait d'avoir plusieurs \u00e9l\u00e9ments `<nav>` sur une page est valable, mais il y a maintenant trois points de rep\u00e8re navigation qui se ressemblent tous. Il est difficile de les distinguer, \u00e0 moins que vous ne connaissiez tr\u00e8s bien la structure de la page. Pour les distinguer, vous pouvez les \u00e9tiqueter en utilisant `aria-labelledby` ou `aria-label`. \r\n\r\n\r\n## Choisir une \u00e9tiquette\r\n\r\nAvant de choisir le label d'un rep\u00e8re, v\u00e9rifiez s'il n'existe pas d\u00e9j\u00e0 une label utile quelque part sur la page. Si c'est le cas, utilisez l'attribut `aria-labelledby` pour cr\u00e9er une r\u00e9f\u00e9rence entre le rep\u00e8re et un autre \u00e9l\u00e9ment qui le label. Les titres conviennent souvent pour \u00e9tiqueter les points de rep\u00e8re, comme le montre l'[exemple 1](#exemple-1).\r\n\r\nUne bonne \u00e9tiquette d\u00e9crit le but du rep\u00e8re en moins de trois mots. Pour les navigations, \u00e9vitez les termes comme \u00ab&nbsp;menu&nbsp;\u00bb ou \u00ab&nbsp;navigation&nbsp;\u00bb car le r\u00f4le de l'\u00e9l\u00e9ment le transmet d\u00e9j\u00e0. Par exemple, un lecteur d'\u00e9cran annonce un libell\u00e9 comme \u00ab&nbsp;Navigation principale&nbsp;\u00bb comme \u00ab&nbsp;Navigation principale navigation&nbsp;\u00bb  \u00c9vitez \u00e9galement les noms visuels comme \u00ab&nbsp;Burger&nbsp;\u00bb , \u00ab&nbsp;Mobile&nbsp;\u00bb ou \u00ab&nbsp;Barre sup\u00e9rieure&nbsp;\u00bb ; utilisez plut\u00f4t des \u00e9tiquettes contextuelles comme \u00ab&nbsp;Principal&nbsp;\u00bb ou \u00ab&nbsp;Contenu&nbsp;\u00bb.\r\n\r\nN'\u00e9tiquettez pas les points de rep\u00e8re `<header>`, `<main>`, et `<footer>` parce qu'ils sont cens\u00e9s \u00eatre uniques de toute fa\u00e7on et n'ont pas besoin d'\u00e9tiquette.\r\n\r\nEn g\u00e9n\u00e9ral, je recommande d'utiliser `aria-labelledby` plut\u00f4t que `aria-label`, si possible, parce qu'il fonctionne avec le contenu existant au lieu d'introduire un nouveau texte, et qu'il fonctionne mieux avec les outils d'auto-traduction comme Google Translate. S'il n'y a pas d'en-t\u00eate ou de contenu appropri\u00e9, utilisez l'attribut `aria-label`, comme dans l'[exemple 2](#exemple-2).\r\n",
      "created": "2025-06-10T13:42:19.551495",
      "updated": "2025-06-10T14:05:35.753328",
      "meta_description": "Apprenez \u00e0 labelliser les points de rep\u00e8re HTML (<nav>, <header>, etc.) avec aria-labelledby ou aria-label pour une accessibilit\u00e9 optimale. Exemples concrets et bonnes pratiques incluses.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 18,
      "title": "Structure du contenu principal",
      "slug": "structure-du-contenu-principal",
      "body": "Sur pages complexes avec beaucoup de contenu et d'\u00e9l\u00e9ments interactifs, il peut \u00eatre difficile et long pour les utilisateurs de s'orienter, de naviguer et de comprendre comment la page est structur\u00e9e. C'est particuli\u00e8rement vrai pour les utilisateurs qui ne peuvent pas balayer rapidement une page pour avoir une vue d'ensemble, comme les utilisateurs de claviers et de lecteurs d'\u00e9cran et les personnes qui ont besoin de zoomer.\r\n\r\nUtilisez des points de rep\u00e8re et d'autres \u00e9l\u00e9ments tels que des titres et des listes pour fournir une structure permettant de s'orienter et de naviguer plus facilement.\r\n\r\nLe r\u00e9sum\u00e9 au d\u00e9but d'un article de blog peut \u00eatre une r\u00e9gion pour donner aux utilisateurs de lecteurs d'\u00e9cran un acc\u00e8s direct, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un rapide rep\u00e8re r\u00e9capitulatif dans un article de blog**\r\n\r\n```html\r\n<h1>article vs section: Comment choisir le bon ?</h1>\r\n\r\n<div role=\"region\" aria-labelledby=\"sommaire\"> \r\n  <h2 id=\"summary\">R\u00e9sum\u00e9 rapide</h2>\r\n  <p>Dans cet article, Olushuyi explore un mod\u00e8le mental qui vous aide \u00e0 choisir entre les \u00e9l\u00e9ments &lt;article&gt; et &lt;section&gt; lors de la r\u00e9daction de documents. Vous d\u00e9couvrirez comment le regroupement de contenu affecte l'accessibilit\u00e9 et comment en tirer le meilleur parti pour les utilisateurs.</p>\r\n</div>\r\n```\r\n\r\n**Note** : Le r\u00f4le et l'\u00e9tiquette `aria-labelledby=\"summary\"` font de ce `div` un point de rep\u00e8re.\r\n\r\nLes conteneurs focalisables ont besoin d'un r\u00f4le et d'un nom accessible. L '[exemple 2](#exemple-2) combine les attributs `tabindex`, `role`, et `aria-label`.\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Une r\u00e9gion \u00e9tiquet\u00e9e et focalisable**\r\n\r\n```html\r\n<div role=\"region\" aria-label=\"Code Demo\" tabindex=\"0\"> \r\n  <article>\r\n    \u2026\r\n  </article>\r\n</div>\r\n\r\n<style>\r\n[role=\"region\"][tabindex=\"0\"] {\r\n  overflow: auto;\r\n}\r\n</style>\r\n```\r\n\r\n**Note** : \r\n\r\n- `tabindex` rend la r\u00e9gion focalisable.\r\n- Ce s\u00e9lecteur css (`[role=\"region\"][tabindex=\"0\"]`) rend les r\u00e9gions focalisables d\u00e9filables si n\u00e9cessaire.\r\n\r\nVous pouvez utiliser l'\u00e9l\u00e9ment `section` pour regrouper les grandes r\u00e9gions th\u00e9matiques d'une page, comme le montre l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;R\u00e9gions th\u00e9matiques sur une page d'accueil**\r\n\r\n```html\r\n<h1>L'agence</h1>\r\n\r\n<section>\r\n  <h2>Derni\u00e8re news</h2>\r\n</section>\r\n\r\n<section>\r\n  <h2>\u00c0 propos de nous</h2>\r\n</section>\r\n\r\n<section>\r\n  <h2>Projets s\u00e9lectionn\u00e9s</h2>\r\n</section>\r\n```\r\n\r\n**Note** : Les \u00e9l\u00e9ments `section` non \u00e9tiquet\u00e9es sans signification s\u00e9mantique, mais ils sont utiles pour la structuration et le style.\r\n\r\nLe label de l'\u00e9l\u00e9ment `section` en fait un point de rep\u00e8re([exemple 4](#exemple-4)).\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Une section \u00e9tiquet\u00e9e pour la r\u00e9gion de recherche sur une page.**\r\n\r\n```html\r\n<section aria-label=\"Produits recherch\u00e9s\">\r\n  <!-- formulaire de recherche ou de filtre -->\r\n  <!-- R\u00e9sultat de la recherche -->\r\n</section>\r\n```\r\n**Note**: `aria-label` transforme la section en rep\u00e8re.\r\n\r\nL'\u00e9l\u00e9ment `aside` marque le contenu li\u00e9 au contenu principal de la page, comme le montre l'[exemple 5](#exemple-5).\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;Un \u00e9l\u00e9ment de c\u00f4t\u00e9 dans un article de blog listant des articles connexes.**\r\n\r\n```html\r\n<article>\r\n  <h1>Les couches en cascade sont inutiles</h1>\r\n\r\n  <p>*si vous ne comprenez pas les probl\u00e8mes qu\u2019ils r\u00e9solvent et\u2026</p>\r\n\r\n  <!-- article du blog -->\r\n\r\n  <aside aria-labelledby=\"relatedheader\">\r\n    <h2 id=\"relatedheader\">Articles associ\u00e9s</h2>\r\n    <ul>\r\n      <li>\r\n        <a href=\"/blog/2025/un-article-42/\">\r\n          Un article \r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/blog/2025/un-autre-article-74\">\r\n          Un autre article\r\n        </a>\r\n      </li>\r\n      <li>\r\n        <a href=\"/blog/2025/encore-un-article-100\">\r\n          Encore un article\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </aside>\r\n</article>\r\n```\r\nLa structuration du contenu \u00e0 l'aide d'\u00e9l\u00e9ments de liste, comme le montre l'[exemple ci-dessous](#exemple-6), peut am\u00e9liorer la compr\u00e9hension, la vue d'ensemble et la navigation.\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Une recette utilisant des listes ordonn\u00e9es et non ordonn\u00e9es**\r\n\r\n```html\r\n<h1>Lait glac\u00e9</h1>\r\n\r\n<p>Une recette de latte glac\u00e9 rafra\u00eechissante.</p>\r\n\r\n<h2>Ingr\u00e9dients</h2>\r\n\r\n<ul>\r\n  <li>2 expresso (60ml)</li>\r\n  <li>2 cuill\u00e8res \u00e0 caf\u00e9 de sucre ou de miel</li>\r\n  <li>glace</li>\r\n  <li>110ml lait</li>\r\n</ul>\r\n\r\n<h2>\u00c9tapes</h2>\r\n\r\n<ol>\r\n  <li>\r\n    M\u00e9langez l'espresso chaud avec le sucre.\r\n  </li>\r\n  <li>\r\n  Remplissez un verre de glace et ajoutez le caf\u00e9.\r\n  </li>\r\n  <li>\r\n   Versez le lait et remuez.\r\n  </li>\r\n</ol>\r\n```\r\n\r\nLe langage HTML offre de nombreux \u00e9l\u00e9ments pour structurer le contenu, mais tout l\u2019enjeu r\u00e9side dans la mani\u00e8re de les utiliser, en fonction de ce que vous souhaitez obtenir.\r\n\r\n## L'\u00e9l\u00e9ment `section`\r\n\r\nL'\u00e9l\u00e9ment `<section>` repr\u00e9sente une r\u00e9gion de page g\u00e9n\u00e9rique utilis\u00e9e pour regrouper le contenu par th\u00e8me. Il commence g\u00e9n\u00e9ralement par un titre. Les \u00e9l\u00e9ments `<section>` non \u00e9tiquet\u00e9s sont s\u00e9mantiquement \u00e9quivalents \u00e0 l'\u00e9l\u00e9ment `<div>`, mais cela ne signifie pas que vous pouvez toujours les utiliser de mani\u00e8re interchangeable. L'\u00e9l\u00e9ment `div` est surtout utilis\u00e9 \u00e0 des fins de style ou pour faciliter l'\u00e9criture de scripts. En revanche, l'\u00e9l\u00e9ment `<section>` marque les groupes th\u00e9matiques de votre page, comme les diff\u00e9rentes sections d'une page d'accueil, comme illustr\u00e9 dans l'[exemple 2](#exemple-2). Il est vrai que vous pourriez utiliser `div` ou aucun wrapper pour obtenir le m\u00eame r\u00e9sultat, mais l'\u00e9l\u00e9ment `<section>` pr\u00e9sente deux avantages majeurs :\r\n\r\n- Vous pouvez utiliser le s\u00e9lecteur d'\u00e9l\u00e9ments de section en CSS pour d\u00e9finir des r\u00e8gles de style g\u00e9n\u00e9rales pour ces \u00e9l\u00e9ments.\r\n- Vous pouvez transformer les \u00e9l\u00e9ments de la section en points de rep\u00e8re en les \u00e9tiquetant, comme le montre l'[exemple 4](#exemple-4).\r\n\r\nLes sections de l'[exemple 3](#exemple-3) n'ont pas de nom accessible fourni via `aria-labelledby` ou `aria-label` parce qu'elles ne sont pas assez importantes pour \u00eatre promues en points de rep\u00e8re. D\u00e8s que `<section>` a un nom accessible, son r\u00f4le passe de `generic` \u00e0 `region`. Le <a href=\"https://www.w3.org/TR/wai-aria/#region\" target=\"_blank\">r\u00f4le de r\u00e9gion</a> repr\u00e9sente un r\u00f4le de rep\u00e8re g\u00e9n\u00e9rique que vous pouvez utiliser pour promouvoir un \u00e9l\u00e9ment g\u00e9n\u00e9rique en rep\u00e8re. Utilisez ce r\u00f4le avec parcimonie ; limitez-le aux r\u00e9gions de votre page que tes utilisateurs jugent suffisamment importantes pour pouvoir y naviguer directement et les lister dans un r\u00e9sum\u00e9 de la page. Utilisez `aria-labelledby` ou `aria-label` pour d\u00e9crire l'objectif de la r\u00e9gion.\r\n\r\nVous ne devez utiliser un point de rep\u00e8re g\u00e9n\u00e9rique que lorsqu'aucun autre point de rep\u00e8re, tel que `navigation` ou `complementary`, ne peut \u00eatre utilis\u00e9. L'[exemple 1](#exemple-1) utilise region pour permettre aux utilisateurs d'acc\u00e9der rapidement au r\u00e9sum\u00e9 d'un article de blog avant d'en lire l'int\u00e9gralit\u00e9.\r\n\r\nVous pouvez aussi utiliser le r\u00f4le `region` pour identifier les zones de d\u00e9filement . Les utilisateurs de clavier ne peuvent pas interagir avec le contenu d\u00e9filant dans aucun navigateur \u00e0 l'exception de Firefox. Vous pouvez y rem\u00e9dier en ajoutant `tabindex=\"0\"` \u00e0 l'\u00e9l\u00e9ment parent qui contient le contenu. Cela le rend interactif, ce qui signifie qu'il a \u00e9galement besoin d'un r\u00f4le et d'un nom accessibles. Le r\u00f4le `region` peut \u00eatre une option, comme le montre l'[exemple 2](#exemple-2). Petite remarque : en g\u00e9n\u00e9ral, il n'est pas bon d'imbriquer dans des \u00e9l\u00e9ments interactifs (par exemple, un `<button>` \u00e0 l'int\u00e9rieur d'un `<a>`), mais il est possible de placer des \u00e9l\u00e9ments interactifs dans des zones de d\u00e9filement et de mise au point.\r\n\r\nUne r\u00e9gion (`<section>` ou `<div role=\"section\">`) commence g\u00e9n\u00e9ralement par un titre. En r\u00e8gle g\u00e9n\u00e9rale, l'\u00e9l\u00e9ment n'est appropri\u00e9 que si son contenu est explicitement list\u00e9 dans le plan du document. Lorsque vous ave besoin d'un \u00e9l\u00e9ment uniquement \u00e0 des fins de style ou pour faciliter l'\u00e9criture de scripts, utilise plut\u00f4t un simple `<div>`.\r\n\r\nIl est possible d'imbriquer les \u00e9l\u00e9ments `<section>`, surtout si la page comporte des chapitres et de nombreux sous-chapitres. Si vous dev continuer \u00e0 utiliser les `h1` comme titres de toutes les sections, comme le montre l'[exemple 7](#exemple-7), il se passe quelque chose de particulier qui ne se produit g\u00e9n\u00e9ralement pas dans la pratique mais qu'il est toujours bon de savoir : la taille de la police de chaque titre diminue au fur et \u00e0 mesure que vous les imbriquez plus profond\u00e9ment.\r\n\r\n**<span id=\"exemple-7\">Exemple&nbsp;7</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Plusieurs sections imbriqu\u00e9es, chacune commen\u00e7ant par un `<h1>`**\r\n\r\n```html\r\n<h1>Titre niveau 1</h1>\r\n\r\n<section>\r\n  <h1>Titre niveau 2</h1>\r\n\r\n  <section>\r\n    <h1>Titre niveau 3</h1>\r\n\r\n    <section>\r\n      <h1>Titre niveau 4</h1>\r\n\r\n      <section>\r\n        <h1>Titre niveau 5</h1>\r\n\r\n        <section>\r\n          <h1>Titre niveau 6</h1>\r\n        </section>\r\n      </section>\r\n    </section>\r\n  </section>\r\n</section>\r\n```\r\n\r\nM\u00eame si les styles par d\u00e9faut des navigateurs peuvent donner une impression hi\u00e9rarchique, cela ne refl\u00e8te pas la structure s\u00e9mantique r\u00e9elle. \u00c9vite d\u2019imbriquer plusieurs titres de niveau `<h1>` : un seul `<h1>` par page suffit, suivi logiquement par des `<h2>`, `<h3>`, etc., en fonction de la profondeur de l'information.\r\n\r\n## L'\u00e9l\u00e9ment `aside`\r\n\r\nVous pouvez utilise l'\u00e9l\u00e9ment `aside` pour marquer le contenu tangentiellement li\u00e9 au contenu principal voisin qui pourrait \u00eatre consid\u00e9r\u00e9 comme s\u00e9par\u00e9, comme les citations (`cite`) tir\u00e9es, les barres lat\u00e9rales, la publicit\u00e9 ou les liens connexes, comme le montre l'[exemple 5](#exemple-5).\r\n\r\nSi vous effectuez des tests avec un lecteur d'\u00e9cran, il est bon de savoir que le r\u00f4le implicite de l'\u00e9l\u00e9ment `aside` est le suivant `complementary`.\r\n\r\n## L'\u00e9l\u00e9ment `article`\r\n\r\nVous pouvez utiliser l'\u00e9l\u00e9ment `article` pour n'importe quel groupe de contenu que vous pourriez en th\u00e9orie distribuer de fa\u00e7on ind\u00e9pendante ou r\u00e9utiliser ailleurs, et cela aurait toujours du sens. Un exemple classique est un article d'actualit\u00e9 ou un billet de blog que vous pouvez lire sur un site Web ou dans un lecteur de flux RSS.\r\n\r\nCependant, la d\u00e9finition de l'\u00e9l\u00e9ment `article` n'est pas un article de presse litt\u00e9ral mais un \u00e9l\u00e9ment particulier ou une chose s\u00e9par\u00e9e. Un article peut \u00eatre un article de forum, un commentaire sur un article de blog (article imbriqu\u00e9 dans un article), un widget interactif, un produit list\u00e9 sur un site de commerce \u00e9lectronique, ou toute autre composition compl\u00e8te ou autonome dans un document. L'\u00e9l\u00e9ment `article` peut \u00eatre utile pour plusieurs raisons :\r\n\r\n- Vous pouvez utiliser le s\u00e9lecteur d'\u00e9l\u00e9ment d'article en CSS pour d\u00e9finir des r\u00e8gles g\u00e9n\u00e9rales de style pour ces \u00e9l\u00e9ments.\r\n- Les logiciels tiers, par exemple les lecteurs de flux RSS ou le mode lecteur des navigateurs, peuve extraire le contenu envelopp\u00e9 dans la balise `article` et l'afficher diff\u00e9remment.\r\n- Les utilisateurs de lecteurs d'\u00e9cran peuvent utiliser des raccourcis pour acc\u00e9der aux articles, mais la prise en charge de l'\u00e9l\u00e9ment article par les lecteurs d'\u00e9cran est diverse car chaque logiciel applique des heuristiques diff\u00e9rentes, comme vous pouvez le voir dans le [tableau 1](#table-1).\r\n\r\n<table id=\"table-1\">\r\n  <caption>Test du lecteur d'\u00e9cran : L'\u00e9l\u00e9ment de l'article est-il expos\u00e9 ?</caption>\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"col\">Type</th>\r\n      <th scope=\"col\">NVDA</th>\r\n      <th scope=\"col\">VO (macOS)</th>\r\n      <th scope=\"col\">Narrateur</th>\r\n      <th scope=\"col\">VO (iOS)</th>\r\n      <th scope=\"col\">TalkBack</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td>Curseur virtuel/balayage</td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Liste des points de rep\u00e8re </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> oui </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Liste d'articles personnalis\u00e9e </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n      <td> oui </td>\r\n      <td> non </td>\r\n    </tr>\r\n    <tr>\r\n      <td> Touche de navigation rapide par d\u00e9faut </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n      <td> non </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nNVDA n'annonce pas le r\u00f4le de l'article lorsque vous utilisez les touches fl\u00e9ch\u00e9e ou que vous le r\u00e9pertoried dans la liste des \u00e9l\u00e9ments, mais vous pouvez l'activer dans les param\u00e8tres de formatage du document et ajouter un raccourci de navigation rapide personnalis\u00e9 pour la navigation dans les articles.\r\n\r\nJAWS annonce les articles labellis\u00e9s et non labellis\u00e9s lorsque vous utilisez les touches fl\u00e9ch\u00e9es ou la touche `O` pour naviguer. Ils ne sont pas inclus dans la liste des points de rep\u00e8re, mais vous pouvez lister tous les articles en appuyant sur `Ctrl` + `Insert` + `O`.\r\n\r\nVoiceOver sur macOS annonce les articles \u00e9tiquet\u00e9s et non \u00e9tiquet\u00e9s lorsque vous utilisez le curseur virtuel. Il ajoute \u00e9galement une nouvelle liste d'articles au `rotor`. La liste des points de rep\u00e8re dans le `rotor` ne comprend pas d'articles.\r\n\r\nLe narrateur n'annonce pas le r\u00f4le de l'article et ne le mentionne pas dans la liste des \u00e9l\u00e9ments.\r\n\r\nVoiceOver sur iOS annonce les articles lorsque vous s\u00e9lectionnez des \u00e9l\u00e9ments contenus ou que vous effectuez un swipe. Il inclut les articles dans la liste des points de rep\u00e8re et ajoute une nouvelle liste d'articles au `rotor`.\r\n\r\nTalkBack n'annonce pas les articles lorsque vous s\u00e9lectionnez des \u00e9l\u00e9ments contenus ou que vous faites glisser le curseur, mais les articles \u00e9tiquet\u00e9s et non \u00e9tiquet\u00e9s sont accessibles par le biais de la navigation par points de rep\u00e8re.\r\n\r\n## Les \u00e9l\u00e9ments listes `ul` - `ol`\r\n\r\nVous pouvez utiliser des listes ordonn\u00e9es ou non ordonn\u00e9es pour regrouper des \u00e9l\u00e9ments visuellement et s\u00e9mantiquement. Outre l'unit\u00e9 visuelle qu'elles forment, les listes offrent aux utilisateurs de nombreuses fonctionnalit\u00e9s suppl\u00e9mentaires :\r\n\r\n- Un lecteur d'\u00e9cran peut annoncer le nombre total d'\u00e9l\u00e9ments lorsque l'utilisateur trouve la liste. \r\n- Un lecteur d'\u00e9cran peut annoncer l'indice de l'\u00e9l\u00e9ment en cours (par exemple, \"\u00e9l\u00e9ment de la liste, deux sur quatre\").\r\n- Lorsque vous acc\u00e8dez pour la premi\u00e8re fois \u00e0 un \u00e9l\u00e9ment de la liste, un lecteur d'\u00e9cran peut annoncer que cet \u00e9l\u00e9ment appartient \u00e0 une liste de n \u00e9l\u00e9ments au total.\r\n- Les utilisateurs peuvent utiliser des raccourcis pour passer d'une liste \u00e0 l'autre ou d'un \u00e9l\u00e9ment de liste \u00e0 l'autre.\r\n- Les utilisateurs peuvent utiliser des raccourcis pour r\u00e9pertorier toutes les listes d'une page et y acc\u00e9der directement.\r\n\r\nVous ppouvez aussi utiliser les listes de d\u00e9finitions (`dl`), mais sachez que ce que les lecteurs d'\u00e9cran annoncent et la quantit\u00e9 qu'ils annoncent varient d'un <a href=\"https://a11ysupport.io/tech/html/dl_element\" target=\"_blank\">lecteur d'\u00e9cran \u00e0 l'autre</a>.\r\n\r\nUtilisez la balise `<ol>` lorsque l'ordre de ta liste d'\u00e9l\u00e9ments est importan et `<ul>` lorsqu'il ne l'est pas. Dans l'[exemple 6](#exemple-6), vous voir la recette d'un caf\u00e9 au lait glac\u00e9. Dans ce cas, les ingr\u00e9dients sont \u00e9num\u00e9r\u00e9s dans une liste non ordonn\u00e9e parce qu'il importe peu que vous \u00e9num\u00e8rez d'abord la glace ou le lait. La recette est une liste ordonn\u00e9e parce que l'ordre correct des \u00e9tapes est important.\r\n\r\n\r\n\r\n\r\n",
      "created": "2025-06-11T12:34:14.887102",
      "updated": "2025-06-11T14:56:29.508840",
      "meta_description": "Bien structurer son HTML avec des rep\u00e8res et balises s\u00e9mantiques am\u00e9liore l'accessibilit\u00e9, la navigation et l\u2019exp\u00e9rience utilisateur.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 19,
      "title": "Pr\u00e9senter le contenu dans l'ordre",
      "slug": "presenter-le-contenu-dans-l-ordre",
      "body": "Les utilisateurs peuvent ne pas \u00eatre en mesure de comprendre le contenu si vous ne le pr\u00e9sentez pas dans un ordre significatif ou si l'ordre visuel des \u00e9l\u00e9ments ne correspond pas \u00e0 l'ordre des \u00e9l\u00e9ments dans le document. Les utilisateurs de lecteurs d'\u00e9cran peuvent avoir besoin de temps pour comprendre comment la page est structur\u00e9e. Une page d\u00e9sorganis\u00e9e rend l'exp\u00e9rience des utilisateurs de clavier et de lecteur d'\u00e9cran impr\u00e9visible et d\u00e9routante.\r\n\r\nStructurez le contenu de la page de haut en bas pour qu'il ait un sens, m\u00eame lorsqu'il est pr\u00e9sent\u00e9 sans CSS. L '[exemple 1](#exemple-1) montre comment vous pouvez structurer une pag.\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Structure typique d'une page web, ordonn\u00e9e de haut en bas.**\r\n\r\n```html\r\n<header>\r\n  <a class=\"skip-link\" href=\"#content\">Aller au contenu principal</a> \r\n\r\n  <a href=\"/\">\r\n    Magasin de V\u00eatements\r\n    <svg>\u2026</svg>\r\n  </a>\r\n\r\n  <nav aria-label=\"Principal\"> \r\n    <ul>\r\n      <li>\r\n        <a href=\"/home\">Accueil</a>\r\n      </li>\r\n      \u2026\r\n    </ul>\r\n  </nav>\r\n</header>\r\n\r\n<main id=\"content\">\r\n  <h1>Magasin de v\u00eatements</h1>\r\n\r\n  <h2>V\u00eatements</h2>\r\n  <h3>V\u00eatements pour b\u00e9b\u00e9s</h3>\r\n  <h3>V\u00eatements pour enfants</h3>\r\n  <h2>Livres</h2>\r\n  <h2>Occasions sp\u00e9ciales</h2>\r\n  <h2>Contact</h2>\r\n  <h2>Paiement</h2>\r\n</main>\r\n\r\n<footer>\r\n  &copy; 2025\r\n</footer>\r\n```\r\n\r\nLorsque vous disposez le contenu d'une page, il y a deux choses que vous devez prendre en compte : sa structure, son ordre g\u00e9n\u00e9ral et la pr\u00e9sentation visuelle des \u00e9l\u00e9ments.\r\n\r\nVous avez appris \u00e0 structurer un site \u00e0 l'aide de rep\u00e8res de haut niveau dans l'article \u00ab&nbsp;[Structure du document](https://rb-webstudio.go.yj.fr/articles/structure-du-document-11.html)&nbsp;\u00bb et \u00e0 structurer une page \u00e0 l'aide de rep\u00e8res de bas(article : \u00ab&nbsp;[Structure du contenu principal](https://rb-webstudio.go.yj.fr/articles/structure-du-contenu-principal-18.html)&nbsp;\u00bb). L'ordre des \u00e9l\u00e9ments dans les exemples dans ces articles n'est pas arbitraire. Travaillez dans le document de haut en bas et commencez par le contenu le plus pertinent, comme le montre l'[exemple 1](#exemple-1). Il s'agit g\u00e9n\u00e9ralement de l'en-t\u00eate, qui contient des \u00e9l\u00e9ments de navigation essentiels tels qu'un lien de saut, un lien vers la page d'accueil, la navigation principale et une recherche (article : \u00ab&nbsp;[Structure du document](https://rb-webstudio.go.yj.fr/articles/structure-du-document-11.html)&nbsp;\u00bb).\r\n\r\nSupposons que votre site contienne des \u00e9l\u00e9ments d'interface avec lesquels les utilisateurs doivent interagir avant d'acc\u00e9der au contenu, comme une banni\u00e8re de consentement aux cookies ou une s\u00e9lection de r\u00e9gion et de langue. Dans ce cas, ces \u00e9l\u00e9ments doivent venir en premier pour que les utilisateurs puissent s'en occuper en premier, quelle que soit la fa\u00e7on dont ils acc\u00e8dent au site. Apr\u00e8s l'en-t\u00eate vient le contenu principal, qui met en avant les informations les plus importantes et les plus pertinentes, structur\u00e9es par des titres. Le `<footer>` suit le `<main>` et contient des contenus tangentiellement li\u00e9s.\r\n\r\nUne erreur typique consiste \u00e0 suivre la repr\u00e9sentation visuelle des \u00e9l\u00e9ments de la conception sans pr\u00eater suffisamment attention \u00e0 l'ordre logique au sein de la page. Si vous prenez l'exemple suivant et que vous suiviez strictement la pr\u00e9sentation visuelle, vous obtiendrez le balisage de l'[exemple 2](#exemple-2).\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Une accroche pour un article de blog avec l'image pr\u00e9c\u00e9dant le titre.**\r\n\r\n```html\r\n<img src=\"teaser.png\" alt=\"Exemples de menus d\u00e9roulants provenant de Dribbble, recherche Google et GitHub\">\r\n\r\n<h3>\r\n  Quand le CSS ne suffit pas : les besoins en JavaScript pour des composants accessibles\r\n</h3>\r\n\r\n<p>par Stephanie Eckles</p>\r\n\r\n<p>\r\n  Spoiler : les infobulles, modaux, onglets, carrousels et menus d\u00e9roulants\r\n  sont quelques-uns des composants d'interface utilisateur qui n\u00e9cessitent plus\r\n  que du CSS. Pour garantir l'accessibilit\u00e9 de votre interface, le JavaScript est\r\n  une addition n\u00e9cessaire pour g\u00e9rer le focus, r\u00e9pondre aux \u00e9v\u00e9nements clavier,\r\n  et basculer les attributs ARIA.\r\n</p>\r\n\r\n<p>Lisez <a href=\"#\">\u00ab Quand le CSS ne suffit pas \u00bb</a>.</p>\r\n```\r\n\r\nCela semble correct, mais compte tenu de l'objectif du titre (il pr\u00e9sente un nouveau sous-chapitre), l'image est mal plac\u00e9e parce qu'elle vient avant le titre. Il est beaucoup plus logique de commencer par le titre, comme le montre l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Ordre am\u00e9lior\u00e9 : Une accroche pour un article de blog avec l'image qui suit le titre.**\r\n\r\n```html\r\n<h3>\r\n  Quand le CSS ne suffit pas : les besoins en JavaScript pour des composants accessibles\r\n</h3>\r\n<img src=\"teaser.png\" alt=\"Exemples de menus d\u00e9roulants provenant de Dribbble, recherche Google et GitHub\">\r\n<p>par Stephanie Eckles</p>\r\n\r\n<p>\r\n  Spoiler : les infobulles, modaux, onglets, carrousels et menus d\u00e9roulants\r\n  sont quelques-uns des composants d'interface utilisateur qui n\u00e9cessitent plus\r\n  que du CSS. Pour garantir l'accessibilit\u00e9 de votre interface, le JavaScript est\r\n  une addition n\u00e9cessaire pour g\u00e9rer le focus, r\u00e9pondre aux \u00e9v\u00e9nements clavier,\r\n  et basculer les attributs ARIA.\r\n</p>\r\n\r\n<p>Lisez <a href=\"#\">\u00ab Quand le CSS ne suffit pas \u00bb</a>.</p>\r\n```\r\n\r\nVous pouvez ensuite utiliser le CSS pour r\u00e9organiser visuellement les \u00e9l\u00e9ments. On peut soutenir qu'il serait pr\u00e9f\u00e9rable de concevoir une page qui corresponde \u00e0 l'ordre du document ou du composant en premier lieu. Ce n'est pas toujours faisable, mais c'est un id\u00e9al que vous devrez suivre.\r\n\r\nIl est pr\u00e9f\u00e9rable de s'abstenir de r\u00e9ordonner le contenu, en particulier les \u00e9l\u00e9ments interactifs, en utilisant des propri\u00e9t\u00e9s CSS comme `flex-direction`, `order`, `grid-auto-flow` ou des techniques comme le placement explicite, le positionnement absolu ou les marges n\u00e9gatives. Lorsque vous avez affaire \u00e0 des \u00e9l\u00e9ments interactifs, l'ordre visuel doit toujours repr\u00e9senter le mieux possible l'ordre du mod\u00e8le d'objet de document (DOM), car l'ordre des onglets suit l'ordre du DOM, quelle que soit la fa\u00e7on dont vous disposez les \u00e9l\u00e9ments visuellement.\r\n\r\nLa fa\u00e7on la plus simple d'obtenir une structure de page et un ordre de contenu corrects est de travailler d'abord en HTML et de concevoir un document qui fonctionne bien m\u00eame lorsqu'il est pr\u00e9sent\u00e9 sans CSS. Si vous pouvez regarder un document HTML final sans aucun style et comprendre comment la page est structur\u00e9e et comment les contenus sont li\u00e9s, vous avez fait un excellent travail. Vous \u00eates maintenant pr\u00eat \u00e0 commencer \u00e0 \u00e9crire du CSS.\r\n",
      "created": "2025-06-12T15:25:53.478173",
      "updated": "2025-06-12T16:02:45.996506",
      "meta_description": "Apprenez \u00e0 structurer votre contenu HTML pour garantir accessibilit\u00e9 et coh\u00e9rence, m\u00eame sans CSS. Guide pratique pour un web inclusif et ordonn\u00e9.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 20,
      "title": "Lier le contenu",
      "slug": "lier-le-contenu",
      "body": "Les hyperliens ont diff\u00e9rents objectifs ; ils renvoient \u00e0 d'autres pages Web, \u00e0 des sections d'une page, \u00e0 des ressources externes, \u00e0 des adresses \u00e9lectroniques, \u00e0 des num\u00e9ros de t\u00e9l\u00e9phone et \u00e0 des fichiers. Les utilisateurs ont certaines attentes quant \u00e0 ce qui se passe lorsqu'ils trouvent et cliquent sur un lien, et vous devez r\u00e9pondre \u00e0 ces attentes avec tes conceptions et vos impl\u00e9mentations techniques.\r\n\r\nUn lien bien con\u00e7u comporte une \u00e9tiquette de texte concise et descriptive. Il informe d'embl\u00e9e les utilisateurs de ce qui se passera lorsqu'ils cliqueront dessus, et les utilisateurs peuvent l'activer avec n'importe quelle modalit\u00e9 d'entr\u00e9e. Si ce n'est pas le cas, les utilisateurs peuvent \u00eatre incapables d'identifier le lien en tant que tel, de l'utiliser ou d'en comprendre l'objectif.\r\n\r\nNous allons examiner de pr\u00e8s l'anatomie des hyperliens et explique comment \u00e9tiqueter, styliser et cr\u00e9er des liens dans les environnements de rendu c\u00f4t\u00e9 serveur et c\u00f4t\u00e9 client.\r\n\r\n## Choisir le bon \u00e9l\u00e9ment\r\n\r\nSi un lien vers une ressource ne r\u00e9pond pas aux crit\u00e8res de base, vous risquez d'exclure un ou plusieurs groupes d'utilisateurs de la possibilit\u00e9 d'y acc\u00e9der ou de comprendre son objectif. Les crit\u00e8res essentiels d'un lien sont :\r\n\r\n- Il doit transmettre son r\u00f4le de lien.\r\n- Il a un nom accessible.\r\n- Il est accessible aux technologies d'assistance.\r\n- Il est possible de le cibler avec le clavier.\r\n\r\n**Astuce** : Certains \u00e9l\u00e9ments de sont focalisables ; par exemple, les liens, les boutons ou les champs de formulaire. Vous pouvez y acc\u00e9der \u00e0 l'aide du clavier en appuyant sur `Tab` ou `Shift + Tab`. Par d\u00e9faut, les navigateurs mettent visuellement en \u00e9vidence les \u00e9l\u00e9ments focalis\u00e9s.\r\n\r\nLe langage HTML offre un moyen simple et puissant de cr\u00e9er des liens vers d'autres ressources : l'\u00e9l\u00e9ment `<a>` associ\u00e9 \u00e0 l'attribut `href`. L'[exemple 1](#exemple-1) montre des liens vers diff\u00e9rents types de cibles.\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Diff\u00e9rents types de liens**\r\n\r\n```html\r\n<!-- lien vers l'ext\u00e9rieur -->\r\n<a href=\"https://www.linkedin.com/in/renaud-bourdeau-%F0%9F%90%A7-7639b944/\">\r\n  Profile Renaud Bourdeau LinkedIn\r\n</a>\r\n\r\n<!-- lien int\u00e9rieur -->\r\n<a href=\"/articles/structure-du-contenu-principal-18.html\">\r\n  Structure du contenu principal\r\n</a>\r\n\r\n<!-- lien vers adresse email -->\r\n<a href=\"mailto:robert.michu@domain.com\">\r\n  robert.michu@domain.com\r\n</a>\r\n\r\n<!-- lien vers num\u00e9ro de t\u00e9l\u00e9phone -->\r\n<a href=\"tel:+33630168793\">\r\n  +33 630 168 793\r\n</a>\r\n\r\n<!-- lien vers une ancre dans la page -->\r\n<a href=\"#content\">\r\n  Vers le contenu\r\n</a>\r\n```\r\n\r\nUn lien hypertexte doit r\u00e9pondre \u00e0 des exigences sp\u00e9cifiques pour \u00eatre accessible et offrir une excellente UX.\r\n\r\n### Il renvoie \u00e0 une ressource interne ou externe\r\n\r\nIl arrive parfois qu'on ne sache pas s'il est pr\u00e9f\u00e9rable d'utiliser un lien ou un bouton pour effectuer une t\u00e2che. Tous les types de liens ont en commun de t'emmener ailleurs lorsque vous cliquez dessus - sur une autre page, un autre site, une partie de ta page ou une autre application. L'\u00e9l\u00e9ment bouton permet de soumettre un formulaire ou d'ex\u00e9cuter un code JavaScript.\r\n\r\n**Astuce**: S'il vous emm\u00e8ne ailleurs, utilisez un lien. Si vous soumettez un formulaire ou ex\u00e9cutez du JavaScript, utilisez un bouton.\r\n\r\nIl y a des exceptions \u00e0 cette r\u00e8gle, mais c'est vrai pour la plupart des liens et des boutons. Lorsque vous vous retrouvez \u00e0 utiliser l'un des exemples inaccessibles de l'[exemple 3](#exemple-3), vous devrez probablement utiliser un bouton \u00e0 la place.\r\n\r\n### Il transmet son r\u00f4le de lien s\u00e9mantique\r\n\r\nLorsque vous faites un lien vers une autre ressource, votre lien doit transmettre son r\u00f4le s\u00e9mantique. L'option la plus s\u00fbre et la plus fiable est d'utiliser l'\u00e9l\u00e9ment `<a>` avec l'attribut `href` car il a un r\u00f4le implicite `link`.\r\n\r\nUn lecteur d'\u00e9cran annonce le r\u00f4le \u00e0 c\u00f4t\u00e9 du texte ; par exemple, \"Comment g\u00e9rer un formulaire en python ? lien.\"\r\n\r\n### Il a un nom accessible\r\n\r\nUn texte de lien significatif est important pour une bonne exp\u00e9rience utilisateur. Lorsque vous r\u00e9digez le texte d'un lien, faites en sorte qu'il soit court, compr\u00e9hensible et significatif, et \u00e9vitez les r\u00e9p\u00e9titions. Un bon lien doit \u00eatre sinc\u00e8re, substantiel, succinct, sp\u00e9cifique.\r\n\r\nSinc\u00e8re signifie que les liens doivent r\u00e9pondre aux attentes des utilisateurs, car lorsqu'ils ne le font pas, ils \u00e9rodent lentement la confiance de l'utilisateur dans le site et l'organisation qu'il repr\u00e9sente. Substantiel signifie que les liens doivent se d\u00e9marquer et \u00eatre succincts pour augmenter la probabilit\u00e9 que les utilisateurs les comprennent rapidement lorsqu'ils parcourent et traitent la page. Sp\u00e9cifique signifie qu'il doit d\u00e9crire son objectif. Vous devez \u00e9viter les textes de liens g\u00e9n\u00e9riques comme \u00ab&nbsp;en savoir plus&nbsp;\u00bb, \u00ab&nbsp;lire plus&nbsp;\u00bb, \u00ab&nbsp;cliquer ici&nbsp;\u00bb, \u00ab&nbsp;t\u00e9l\u00e9charger&nbsp;\u00bb ou \u00ab&nbsp;ici&nbsp;\u00bb, car un texte vague ou r\u00e9p\u00e9titif emp\u00eache les utilisateurs d'anticiper ce \u00e0 quoi ces liens m\u00e8nent.\r\n\r\nAu lieu d'\u00e9crire quelque chose comme :\r\n\r\n> [Clique ici](http://) pour apprendre \u00e0 cr\u00e9er des attributs en HTML.\r\n\r\nUtilise une formulation plus sp\u00e9cifique :\r\n\r\n> Apprenez \u00e0 cr\u00e9er [des attributs en HTML](http://).\r\n\r\nIl y a une autre bonne raison d'\u00e9viter les formulations g\u00e9n\u00e9riques : Il existe diff\u00e9rentes fa\u00e7ons d'acc\u00e9der aux liens sur une page. Un utilisateur aveugle de lecteur d'\u00e9cran peut utiliser la touche `Tab` pour passer d'un \u00e9l\u00e9ment interactif \u00e0 un autre sur une page. Lorsqu'il met le focus sur un lien, le logiciel annonce son r\u00f4le et son nom accessible, par exemple \u00ab&nbsp;cliquer ici, lien&nbsp;\u00bb Sans contexte, il est impossible de savoir o\u00f9 ce lien l'am\u00e8nera. Cela s'applique \u00e9galement \u00e0 d'autres fa\u00e7ons d'acc\u00e9der au contenu : certains utilisateurs de lecteurs d'\u00e9cran peuvent utiliser des raccourcis pour lister tous les liens d'une page. Si plusieurs liens sont intitul\u00e9s \u00ab&nbsp;Acheter maintenant&nbsp;\u00bb, \u00ab&nbsp;En savoir plus&nbsp;\u00bb ou \u00ab&nbsp;Lire l'histoire&nbsp;\u00bb, il est impossible de savoir, sans plus de contexte, ce qui se cache derri\u00e8re chaque lien.\r\n\r\nIl y une autre bonne raison de \u00ab&nbsp;Cr\u00e9er le lien parfait&nbsp;\u00bb, : Les voyants parcourent souvent les pages rapidement jusqu'\u00e0 ce qu'ils trouvent quelque chose d'int\u00e9ressant. Les liens ressortent g\u00e9n\u00e9ralement du texte et doivent servir d'accroche pour les utilisateurs qui scannent. Un texte de lien g\u00e9n\u00e9rique n'est ni attrayant ni informatif.\r\n\r\n### Il communique son \u00e9tat actuel\r\n\r\nUn lien peut avoir diff\u00e9rents \u00e9tats : non visit\u00e9, visit\u00e9, survol\u00e9, actif et focalis\u00e9. Pour chaque \u00e9tat, vous devez fournir des styles appropri\u00e9s, comme le montre l'[exemple 2](#exemple-2). En plus de cela, les attributs ARIA peuvent communiquer un \u00e9tat suppl\u00e9mentaire. \r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Style des liens dans diff\u00e9rents \u00e9tats**\r\n\r\n```css\r\na:link {\r\n  color: blue;\r\n  text-decoration: underline;\r\n}\r\n\r\na:visited {\r\n  color: rebeccapurple;\r\n}\r\n\r\na:focus-visible {\r\n  outline: 2px solid currentColor;\r\n  outline-offset: 2px;\r\n}\r\n\r\na:hover {\r\n  text-decoration: none;\r\n}\r\n\r\na:active {\r\n  color: red;\r\n}\r\n```\r\n\r\n### Un lien doit \u00eatre tabbable et permettre l'activation par le biais d'\u00e9v\u00e9nements de type clic, toucher et touche.\r\n\r\nUn lien est un \u00e9l\u00e9ment interactif, ce qui signifie que si vous pouvez cliquer dessus, vous devez aussi pouvoir effectuer la m\u00eame action \u00e0 l'aide du clavier en appuyant sur `Enter`. Pour cela, il doit \u00eatre tabbable (atteignable via la touche `Tab` ), ce que l'\u00e9l\u00e9ment `<a>` est par d\u00e9faut, \u00e0 condition qu'il ait un attribut `href`.\r\n\r\n**Note**: Depuis l'HTML5, l'attribut `href` n'est plus obligatoire\r\n\r\nCertaines personnes aiment utiliser des touches de modification, comme `Cmd`, lorsqu'elles cliquent, ou cliquent avec le bouton droit ou le bouton du milieu pour effectuer d'autres actions, comme ouvrir le lien dans un nouvel onglet ou copier l'URL. Selon le navigateur et le syst\u00e8me d'exploitation, ces actions sont \u00e9galement incluses dans le syst\u00e8me.\r\n\r\nCr\u00e9er des liens bien con\u00e7us est un d\u00e9fi, mais les liens sont l'une des caract\u00e9ristiques importantes du web. Essayez de suivre les meilleures pratiques de ce tuto et \u00e9vitez plusieurs solutions alternatives courantes qui ne r\u00e9pondent pas aux exigences de , \u00e9num\u00e9r\u00e9es dans l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Liens inaccessibles**\r\n\r\n```html\r\n<!-- Lien avec click event - mauvais r\u00f4le. Un <button> est plus appropri\u00e9. -->\r\n<a href=\"javascript: void(0)\" onclick=\"[JS function]\">\r\n  Lire la vid\u00e9o\r\n</a>\r\n\r\n<!-- Lien avec click event - mauvais r\u00f4le. Un <button> est plus appropri\u00e9. -->\r\n<a href=\"#\" onclick=\"[JS function]\">\r\n  Lire la vid\u00e9o\r\n</a>\r\n\r\n<!-- impossible de mettre le focus sur ce pseudo lien -->\r\n<span role=\"link\" onclick=\"[JS function]\">\r\n  Vid\u00e9o mariage Robert Michu\r\n</span>\r\n\r\n<!-- Impossible de mettre le focus sur ce lien -->\r\n<a href=\"https://www.videos.com/robertmichu/video-mariage.html\" tabindex=\"-1\">\r\n  Vid\u00e9o mariage Robert Michu\r\n</a>\r\n\r\n<!-- impossible d'acceder \u00e0 ce lien-->\r\n<a href=\"https://www.videos.com/robertmichu/video-mariage.html\" aria-hidden=\"true\">\r\n  Vid\u00e9o mariage Robert Michu\r\n</a>\r\n```\r\n\r\n## En r\u00e9sum\u00e9, comment cr\u00e9er des liens accessibles et efficaces ?\r\n\r\n- Utiliser l\u2019\u00e9l\u00e9ment `<a>` avec un attribut `href`.\r\n- R\u00e9diger un texte de lien descriptif et sp\u00e9cifique (\u00e9viter \"cliquez ici\").\r\n- V\u00e9rifier que le lien est tabbable (atteignable au clavier).\r\n- V\u00e9rifier que le lien fonctionne avec `Enter`, `clic`, `touch`.\r\n- S'assurer que le r\u00f4le de lien est reconnu par les lecteurs d'\u00e9cran.\r\n- Styliser les diff\u00e9rents \u00e9tats : `:link`, `:visited`, `:hover`, `:focus-visible`, `:active`.\r\n- \u00c9viter les faux liens (`<span>`, `href=\"#\"`, etc.).\r\n- Ne pas masquer des liens avec `tabindex=\"-1\"` ou `aria-hidden=\"true\"`.\r\n- Tester l'accessibilit\u00e9 avec un lecteur d\u2019\u00e9cran (NVDA, VoiceOver\u2026).\r\n- V\u00e9rifier que les liens internes et externes sont diff\u00e9renci\u00e9s visuellement si besoin.\r\n\r\n",
      "created": "2025-06-15T14:13:34.361610",
      "updated": "2025-06-15T16:00:46.563131",
      "meta_description": "Les bonnes pratiques pour cr\u00e9er des liens HTML accessibles, efficaces et compatibles avec les lecteurs d'\u00e9cran.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 21,
      "title": "Les styles de liens",
      "slug": "les-styles-de-liens",
      "body": "Le style personnalis\u00e9 des liens peut influencer la capacit\u00e9 des utilisateurs \u00e0 naviguer, \u00e0 s'orienter et \u00e0 percevoir le site Web de plusieurs fa\u00e7ons, notamment :\r\n\r\n- Les utilisateurs du clavier peuvent ne pas savoir o\u00f9 ils se trouvent sur la page.\r\n- Les personnes malvoyantes et celles qui utilisent des couleurs forc\u00e9es risquent de ne pas pouvoir distinguer les liens du texte normal.\r\n- Les utilisateurs risquent de ne pas reconna\u00eetre un lien ou de ne pas comprendre ce qu'ils en attendent si son style ne r\u00e9pond pas \u00e0 leurs attentes.\r\n- Les personnes souffrant d'un handicap qui affecte leur dext\u00e9rit\u00e9 et leurs mouvements moteurs peuvent avoir des difficult\u00e9s \u00e0 cliquer sur les liens. Il en va de m\u00eame pour toute personne qui se d\u00e9place pendant l'utilisation d'un site Web, par exemple en marchant, en prenant le m\u00e9tro ou en effectuant plusieurs t\u00e2ches \u00e0 la fois.\r\n\r\nVous devez styliser les liens de mani\u00e8re \u00e0 servir vos utilisateurs. Soulignez les liens, et ne vous fiez pas uniquement \u00e0 la couleur. \u00c9vitez de supprimer le soulignement par d\u00e9faut dans les blocs de texte et proposez diff\u00e9rents styles pour diff\u00e9rents \u00e9tats, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Style personnalis\u00e9 pour quatre \u00e9tats diff\u00e9rents dans lesquels un lien peut se trouver**\r\n\r\n```css\r\na:link {\r\n  color: blue;\r\n  text-decoration: underline;\r\n}\r\n\r\na:visited {\r\n  color: rebeccapurple;\r\n}\r\n\r\na:hover {\r\n  color: green;\r\n  text-decoration: none;\r\n}\r\n\r\na:active {\r\n  color: red;\r\n}\r\n```\r\n\r\nUtilisez un style pro\u00e9minent pour les liens ax\u00e9s sur le clavier. Dans l'[exemple 2](#exemple-2), vous pouvez voir une combinaison des propri\u00e9t\u00e9s `outline` et `outline-offset` utilis\u00e9es pour les \u00e9tats `focus-visible` ou `focus`.\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Un contour de 2 pixels de large avec un rembourrage suppl\u00e9mentaire**\r\n\r\n```css\r\na:focus-visible {\r\n  outline: 2px solid currentColor;\r\n  outline-offset: 2px;\r\n}\r\n\r\n/* ou */\r\n\r\na:focus {\r\n  outline: 2px solid currentColor;\r\n  outline-offset: 2px;\r\n}\r\n```\r\nN'utilisez pas `box-shadow` seul pour le style du lien ou du `focus` car les ombres ne seront pas affich\u00e9es en **forced-colors mode**. Une solution de rechange consiste \u00e0 l'utiliser en combinaison avec un contour transparent, comme le montre l'[exemple 3](#exemple-3).\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Une combinaison de box-shadow et d'un contour transparent**\r\n\r\n```css\r\na:focus-visible {\r\n  box-shadow: 0 3px 0 0 currentcolor;\r\n  outline: 2px solid transparent;\r\n}\r\n```\r\n\r\nLa couleur ne doit pas \u00eatre le seul moyen de distinguer un \u00e9l\u00e9ment visuel, car de nombreux utilisateurs ont des difficult\u00e9s \u00e0 percevoir les couleurs. Il s'agit notamment des personnes \u00e2g\u00e9es qui ne voient pas bien, des daltoniens, des utilisateurs d'\u00e9crans anciens ou de mauvaise qualit\u00e9 et des malvoyants qui ont une vision limit\u00e9e des couleurs. Pour un lien, une couleur de texte diff\u00e9rente  de la couleur normale, combin\u00e9e \u00e0 un soulignement, convient le mieux \u00e0 la plupart des utilisateurs. Faites en sorte que les liens ressemblent \u00e0 des liens, et n'essayez pas de r\u00e9inventer la roue.\r\n\r\nC'est particuli\u00e8rement vrai pour les liens dans les blocs de texte, mais il y a des exceptions \u00e0 cette r\u00e8gle. Parfois, les liens ressemblent \u00e0 des boutons (par exemple, les liens d'appel \u00e0 l'action), et parfois ils n'ont pas besoin d'\u00eatre soulign\u00e9s, comme les liens dans une navigation. \r\n\r\n## \u00c9tats\r\n\r\nLes liens ont diff\u00e9rents \u00e9tats que vous pouvez styliser \u00e0 l'aide de CSS. Utilisez les pseudoclasses `:link` `:hover` , `:focus`,`:focus-\u2060visible`, `:visited`, et `:active` pour donner aux utilisateurs plus de contexte et les aider \u00e0 s'orienter. Votre interface utilisateur doit fournir aux utilisateurs un retour d'information lorsqu'ils survolent et se concentrent sur un lien, et il peut \u00eatre utile de savoir s'ils ont d\u00e9j\u00e0 cliqu\u00e9 sur un lien auparavant.\r\n\r\n## Focus styling\r\nSelon le navigateur, les styles de mise au point par d\u00e9faut peuvent ou non \u00eatre clairement visibles et peuvent ou non fonctionner avec les couleurs de votre site. Si c'est le cas, proposez un style personnalis\u00e9 qui fonctionne avec votre design. Les sites gouv.fr sont un excellent exemple de styles de mise au point qui sont clairement visibles et qui s'int\u00e8grent bien \u00e0 la charte graphique.\r\n\r\nIl est possible de cr\u00e9er des styles de mise au point qui fonctionnent bien pour les utilisateurs et qui sont beaux. Cependant, l'esth\u00e9tique ne doit pas \u00eatre ton objectif principal, mais la convivialit\u00e9 doit l'\u00eatre.\r\n\r\n## Taille de la cible\r\n\r\nLataille des cibles, les zones cliquables des \u00e9l\u00e9ments interactifs, doit \u00eatre suffisamment grande pour que les utilisateurs puissent les activer facilement sur les petits appareils \u00e0 \u00e9cran tactile ou sur les \u00e9crans plus grands. Les petites cibles peuvent \u00eatre difficiles \u00e0 activer pour les personnes qui ont une dext\u00e9rit\u00e9 limit\u00e9e ou d'autres difficult\u00e9s \u00e0 utiliser des souris et des dispositifs de pointage similaires.\r\n\r\n<a href=\"https://www.w3.org/WAI/WCAG22/Understanding/target-size-minimum.html\" target=\"_blank\">Ligne directrice 2.5.8 Taille (minimale) de la cible</a> les <a href=\"https://www.w3.org/TR/WCAG22/\" target=\"_blank\">directives d'accessibilit\u00e9 au contenu Web (WCAG) 2.2</a> sugg\u00e8rent que les cibles tactiles doivent avoir une taille minimale de 24 x 24 CSS pixels.\r\n\r\n**Note** : Gr\u00e2ce aux technologies d'affichage avanc\u00e9es, les r\u00e9solutions d'\u00e9cran sur les appareils mobiles sont parfois comparables aux r\u00e9solutions sur les appareils de bureau. En CSS, vous pouvez interroger les pixels disponibles sur l'\u00e9cran pour appliquer diff\u00e9rents styles, mais vous devez tenir compte de la r\u00e9solution et de la taille de l'\u00e9cran pour proposer aux utilisateurs une mise en page adapt\u00e9e sur chaque appareil. Faire cela manuellement est une t\u00e2che fastidieuse, c'est pourquoi le device pixel ratio (DPR) est utilis\u00e9 pour d\u00e9finir la relation entre les \"pixels de l'appareil\" et les \"pixels CSS\" sur un appareil particulier. Par exemple, si les pixels de l'appareil sont deux fois plus grands que les pixels CSS , on dira que l'appareil a un RPD de 2,0.\r\n\r\n## Mode contraste \u00e9lev\u00e9\r\nPour souligner les styles, je recommande `text-decoration`, et, pour les styles de mise au point, `outline`. Les d\u00e9veloppeurs aiment utiliser `box-shadow` pour cr\u00e9er des effets similaires. Il est facile \u00e0 utiliser car il n'affecte pas la largeur ou la hauteur de l'\u00e9l\u00e9ment, contrairement \u00e0 border, et il permet aux auteurs de cr\u00e9er des bordures imbriqu\u00e9es. Cependant, il ne fonctionne pas bien avec le mode <a href=\"https://www.w3.org/TR/css-color-adjust-1/#forced\" target=\"_blank\">Couleurs forc\u00e9es</a>, une fonction d'accessibilit\u00e9 destin\u00e9e \u00e0 am\u00e9liorer la lisibilit\u00e9 du texte gr\u00e2ce \u00e0 des couleurs d\u00e9finies par l'utilisateur et \u00e0 une palette limit\u00e9e, qui peut \u00eatre \u00e0 contraste \u00e9lev\u00e9 ou faible. L'[exemple 3](#exemple-3) montre une solution de contournement \u00e0 ce probl\u00e8me. En CSS, `transparent` est une couleur qui est normalement transparente mais qui peut \u00eatre visible en mode couleurs forc\u00e9es. Ainsi, si les utilisateurs n'utilisent pas de couleurs forc\u00e9es, ils voient l'ombre de la bo\u00eete ; s'ils le font, ils obtiennent un contour de 2 px .",
      "created": "2025-06-16T16:16:30.693743",
      "updated": "2025-06-16T16:49:02.602366",
      "meta_description": "comment styliser correctement vos liens HTML pour am\u00e9liorer accessibilit\u00e9, UX et SEO avec des exemples pratiques et conseils experts.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 22,
      "title": "Cr\u00e9er des liens de t\u00e9l\u00e9chargement",
      "slug": "creer-des-liens-de-telechargement",
      "body": "La polyvalence de l'\u00e9l\u00e9ment `<a>` exige qu'il communique, avant que l'utilisateur ne clique dessus, son but, sa fonctionnalit\u00e9 et l'action qu'un clic s'ex\u00e9cutera. Lorsque vous \u00e9tablissez un lien vers un fichier au lieu d'un document, les utilisateurs doivent conna\u00eetre \u00e0 l'avance le format et la taille du fichier, ainsi que la fa\u00e7on dont ils y acc\u00e9deront. Les changements inattendus de contexte peuvent \u00eatre irritants, et le t\u00e9l\u00e9chargement de fichiers volumineux peut avoir des cons\u00e9quences financi\u00e8res pour les utilisateurs.\r\n\r\nLes liens de l'[exemple 1](#exemple-1) r\u00e9pondent \u00e0 des questions essentielles :\r\n\r\n- Comment puis-je acc\u00e9der au fichier ?\r\n- Quelles sont les informations contenues dans le fichier ?\r\n- Quel est son format ?\r\n- Quelle est sa taille ?\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Liens vers des fichiers**\r\n\r\n```html\r\n<!-- Lien vers fichier pdf -->\r\n<a href=\"/menu.pdf\">\r\n  Voir notre menu (PDF, 1.2MB)\r\n</a>\r\n\r\n<!-- t\u00e9l\u00e9charger fichier pdf -->\r\n<a href=\"/report.pdf\" download>\r\n  T\u00e9l\u00e9charger notre rapport 2022 (PDF, 29MB)\r\n</a>\r\n```\r\n\r\nPour les liens de t\u00e9l\u00e9chargement, vous pouvez \u00e9galement fournir un style diff\u00e9rent ou suppl\u00e9mentaire ; par exemple, vous pouvez utiliser une ic\u00f4ne qui symbolise un t\u00e9l\u00e9chargement, comme le montrent l'[exemple 2](#exemple-2).\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Utilisation de l'attribut download comme crochet en CSS**\r\n\r\n```css\r\n[download]::after {\r\n  content: \"\";\r\n  background: url('../icons/download.svg') no-repeat center;\r\n  block-size: 1em;\r\n  display: inline-block;\r\n  inline-size: 1em;\r\n}\r\n```\r\n\r\nVous ppouvez aussi utiliser l'attribut `download` pour renommer un fichier. Au lieu du nom de fichier original, le nom fourni comme valeur de l'attribut `download` sera utilis\u00e9 lors du t\u00e9l\u00e9chargement, comme le montre l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Un lien vers un fichier avec un nom de fichier personnalis\u00e9**\r\n\r\n```html\r\n<a href=\"/hdj588pwW-1312d-oek92x.xls\" download=\"ventes-q1-2023.xls\">\r\n  ventes 1er trimestre 2023 (Microsoft Excel, 0.3MB)\r\n</a>\r\n```\r\n\r\nLe texte d'un lien [doit d\u00e9crire son objectif](/articles/lier-le-contenu-20.html) pour permettre aux utilisateurs de le distinguer des autres liens d'une page Web et de d\u00e9terminer s'ils doivent le suivre. Vous pouvez aider les utilisateurs \u00e0 comprendre ce qui se passera lorsqu'ils cliqueront sur un lien vers un fichier en incluant des actions sp\u00e9cifiques dans le texte du lien. Vous pouvez utiliser des expressions comme \u00ab&nbsp;voir&nbsp;\u00bb ou \u00ab&nbsp;t\u00e9l\u00e9charger&nbsp;\u00bb, en fonction de l'objectif, mais toujours en combinaison avec la cible, afin d'\u00e9viter les textes de lien g\u00e9n\u00e9riques. Les exemples [4](#exemple-4) et [5](#exemple-5) montrent deux fa\u00e7ons diff\u00e9rentes de cr\u00e9er un lien vers une image.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Un lien vers une image et un lien de t\u00e9l\u00e9chargement d'une image avec un texte g\u00e9n\u00e9rique.**\r\n\r\n```html\r\n<a href=\"/images/flower.jpg\">\r\n  Voir\r\n</a>\r\n\r\n<a href=\"/images/flower.jpg\" download>\r\n  T\u00e9l\u00e9charger\r\n</a>\r\n```\r\n\r\nL'utilisateur sait \u00e0 quoi s'attendre en lisant le texte du lien dans l'[exemple 5](#exemple-5).\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;Un lien vers une image et un lien de t\u00e9l\u00e9chargement pour une image avec un texte sp\u00e9cifique.**\r\n\r\n```html\r\n<a href=\"/images/flower.jpg\">\r\n  Voir la photo de la fleur\r\n</a>\r\n\r\n<a href=\"/images/flower.jpg\" download>\r\n  T\u00e9l\u00e9charger la photo de la fleur\r\n</a>\r\n```\r\n\r\nLes utilisateurs peuvent pr\u00e9f\u00e9rer conna\u00eetre le type d'un fichier li\u00e9 pour \u00e9viter les t\u00e9l\u00e9chargements inutiles si leur syst\u00e8me d'exploitation ou leur logiciel ne prend pas en charge ce type de fichier, comme illustr\u00e9 dans l'[exemple 6](#exemple-6).\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Un lien vers un type de fichier potentiellement non pris en charge**\r\n\r\n```html\r\n<a href=\"/files/logo.ai\" download>\r\n   T\u00e9l\u00e9charger le logo (Adobe Illustrator)\r\n</a>\r\n```\r\n\r\nCertains utilisateurs \u00e9vitent volontairement certains formats de fichiers, comme les PDF, souvent jug\u00e9s inaccessibles.\r\nC\u2019est d\u2019ailleurs un enjeu reconnu, avec la norme <a href=\"https://fr.wikipedia.org/wiki/PDF/UA\" target=\"_blank\">ISO 14289 (PDF/UA)</a>, con\u00e7ue pour rendre les PDF plus compatibles avec les technologies d\u2019assistance.\r\n\r\nAu lieu de texte, vous pouvez utiliser des ic\u00f4nes pour communiquer le type de fichier, comme le montre l'[exemple 7](#exemple-7). En fonction de votre public, cette m\u00e9thode peut fonctionner ou non. Le plus grand inconv\u00e9nient peut \u00eatre que vos utilisateurs ne comprennent pas les ic\u00f4nes sp\u00e9cifiques. Si vous souhaitez jouer la carte de la s\u00e9curit\u00e9, je vous recommande d'utiliser du texte.\r\n\r\n**<span id=\"exemple-7\">Exemple&nbsp;7</span>&nbsp;&ndash;&nbsp;Utilisation d'un s\u00e9lecteur d'attribut et d'un pseudo-\u00e9l\u00e9ment pour afficher des ic\u00f4nes en fonction du type de fichier li\u00e9.**\r\n\r\n```css\r\na[href$=\".pdf\"]::after {\r\n  background-image: url(../icons/pdf.svg);\r\n}\r\n\r\na[href$=\".tiff\"]::after {\r\n  background-image: url(../icons/tiff.svg);\r\n}\r\n```\r\n\r\nPour certaines personnes, il est important de conna\u00eetre la taille du fichier, en particulier celles qui ont des connexions lentes ou qui n'ont pas de plan de donn\u00e9es illimit\u00e9. Vous pouvez inclure une taille approximative \u00e0 c\u00f4t\u00e9 du type de fichier entre parenth\u00e8ses apr\u00e8s le texte du lien, comme le montre l'[exemple 8](#exemple-8).\r\n\r\n**<span id=\"exemple-8\">Exemple&nbsp;8</span>&nbsp;&ndash;&nbsp;Un lien vers un fichier volumineux**\r\n\r\n```html\r\n<a href=\"/images/garden.tiff\">\r\n  Version haute r\u00e9solution de l'image du jardin (TIFF, 6MB)\r\n</a>\r\n```\r\n\r\nLa fa\u00e7on dont les liens de fichiers sont trait\u00e9s varie selon le navigateur, les param\u00e8tres de l'utilisateur, les applications install\u00e9es, le type de fichier et d'autres facteurs. Un lien vers une image s'ouvre g\u00e9n\u00e9ralement dans la m\u00eame fen\u00eatre ou le m\u00eame onglet, tandis qu'un lien vers un document peut prompt \u00e0 un t\u00e9l\u00e9chargement ou ouvrir automatiquement une application externe.\r\n\r\nVous pouvez forcer le t\u00e9l\u00e9chargement en utilisant l'attribut de t\u00e9l\u00e9chargement lorsque vous placez le lien. Cependant, n'oubliez pas que la pr\u00e9sence de l'attribut ne transmet aucune information aux utilisateurs, y compris aux utilisateurs de lecteurs d'\u00e9cran, et que le texte du lien doit donc se charger de cette t\u00e2che, comme illustr\u00e9 dans l'[exemple 1](#exemple-1). L'utilisation de l'attribut `download` d\u00e9pend du contexte. Si vous \u00e9tablissez un lien vers un fichier que le navigateur prend en charge, comme un fichier HTML, l'ajout de l'attribut faciliterait le t\u00e9l\u00e9chargement pour les utilisateurs. D'un autre c\u00f4t\u00e9, l'utilisation de l'attribut peut limiter le choix des utilisateurs quant \u00e0 la fa\u00e7on d'acc\u00e9der \u00e0 un fichier .\r\n\r\n**Important** : L'attribut `download` <a href=\"https://developer.mozilla.org/fr/docs/Web/HTML/Reference/Elements/a\" target=\"_blank\">ne fonctionne que pour les URL de m\u00eame origine</a> ou les sch\u00e9mas `blob:` et `data:`.\r\n\r\n",
      "created": "2025-06-17T15:13:21.719563",
      "updated": "2025-06-17T16:25:31.839780",
      "meta_description": "Optimisez vos liens de t\u00e9l\u00e9chargement HTML pour une meilleure accessibilit\u00e9, exp\u00e9rience utilisateur et performance SEO.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 23,
      "title": "Cr\u00e9er des liens vers des courriels",
      "slug": "creer-des-liens-vers-des-courriels",
      "body": "En cliquant sur un lien de courrier \u00e9lectronique, l'utilisateur peut changer de contexte et passer du navigateur \u00e0 une application de courrier \u00e9lectronique, s'il y en a une d'install\u00e9e. Cela peut \u00eatre utile mais n'est pas toujours souhaitable car le passage d'une application \u00e0 l'autre peut \u00eatre fastidieux pour certains utilisateurs.\r\n\r\nUne solution est d'afficher l'adresse \u00e9lectronique directement et relie-la en utilisant <a href=\"https://datatracker.ietf.org/doc/html/rfc6068#section-2\" target=\"_blank\">le sch\u00e9ma `URImailto:`</a> , comme illustr\u00e9 dans l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un lien vers une adresse \u00e9lectronique**\r\n\r\n```html\r\n<a href=\"mailto:support@vetements.com\">\r\n  support@vetements.com\r\n</a>\r\n```\r\n\r\nVous pouvez \u00e9tablir un lien avec plusieurs adresses \u00e9lectroniques, comme le montre l'[exemple 2](#exemple-2).\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Un lien vers plusieurs adresses**\r\n\r\n```html\r\n<a href=\"mailto: pierre@domain.com, office@domain.com\">\r\n  pierre@domain.com et office@domain.com\r\n</a>\r\n```\r\n\r\nVous pouvez m\u00eame pr\u00e9-remplir l'objet et le corps du courriel, comme le montre l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Sujet et corps pr\u00e9-remplis**\r\n\r\n```html\r\n<a href=\"mailto:support@vetements.com?subject=Support%20enquete%20%23123&body=client%20num\u00e9ro%3A%20068303\">\r\n  support@vetements.com\r\n</a>\r\n```\r\n\r\n**Note** : Les caract\u00e8res sp\u00e9ciaux, les sauts de ligne et les espaces doivent \u00eatre convertis dans un format que tous les navigateurs et serveurs comprennent(<a href=\"https://www.urlencoder.org/\" target=\"_blank\">encodage URL</a>).\r\n\r\nCela peut \u00eatre pratique pour les utilisateurs lorsqu'une adresse \u00e9lectronique est li\u00e9e parce qu'en cliquant dessus, ils acc\u00e8dent \u00e0 leur application de messagerie et peuvent commencer \u00e0 \u00e9crire imm\u00e9diatement. Certains utilisateurs peuvent vouloir \u00e9viter ce changement de contexte et se contenter de copier une adresse \u00e9lectronique. Vous pouvez r\u00e9pondre \u00e0 ces deux exigences en utilisant l'adresse \u00e9lectronique comme texte du lien.\r\n\r\nJe recommande d'\u00e9viter les textes de liens g\u00e9n\u00e9riques tels que \u00ab&nbsp;Cliquez ici pour nous contacter&nbsp;\u00bb ou \u00ab&nbsp;Contactez-nous&nbsp;\u00bb, comme le montre l'[exemple 4](#exemple-4), car si l'utilisateur veut seulement conna\u00eetre l'adresse \u00e9lectronique, il devra cliquer sur le lien, passer \u00e0 l'application de messagerie ou \u00e0 l'onglet du navigateur de messagerie Web, et la copier dans le champ de l'adresse.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Texte de lien g\u00e9n\u00e9rique**\r\n\r\n```html\r\n<p>Si vous voulez en savoir plus sur nos produits, <a href=\"mailto:support@vetement.com\">contactez-nous</a>.</p>\r\n```\r\n\r\nC'est plus convivial si l'adresse \u00e9lectronique est imm\u00e9diatement visible :\r\n> Si vous voulez en savoir plus sur nos produits, contactez-nous \u00e0 support@vetement.com.\r\n\r\n\r\n",
      "created": "2025-06-18T16:48:42.833659",
      "updated": "2025-06-18T17:20:36.300614",
      "meta_description": "Apprenez \u00e0 cr\u00e9er des liens vers des adresses e-mail en HTML tout en respectant l\u2019accessibilit\u00e9, l\u2019UX et les bonnes pratiques SEO",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 24,
      "title": "Les liens images",
      "slug": "les-liens-images",
      "body": "Une adresse incorrecte ou des descriptions manquantes d'images li\u00e9es donnent lieu \u00e0 des liens confus ou bris\u00e9s, ce qui peut emp\u00eacher les utilisateurs de lecteurs d'\u00e9cran de comprendre l'objectif du lien.\r\n\r\nUtilise l'attribut `alt` de l'image pour fournir l'\u00e9tiquette ou le nom accessible du lien. L'[exemple 1](#exemple-1) montre un logo li\u00e9 dans l'en-t\u00eate d'une page. La description de l'image est \u00ab&nbsp;Page d'accueil&nbsp;\u00bb parce que c'est l\u00e0 que le lien pointe. Une erreur courante consiste \u00e0 utiliser une description telle que &nbsp;\u00abLogo de la soci\u00e9t\u00e9&nbsp;\u00bb. Cette image est fonctionnelle et doit donc d\u00e9crire l'objectif du lien, et non le contenu de l'image.\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Le texte alternatif du logo li\u00e9 sert de texte de lien**\r\n\r\n```html\r\n<header>\r\n  <a href=\"/\">\r\n    <img src=\"/images/logo.svg\" alt=\"Home page\">\r\n  </a>\r\n</header>\r\n```\r\n\r\nAu lieu d'un `img`, vous pouvez aussi utiliser un <a href=\"https://developer.mozilla.org/fr/docs/Web/SVG\" target=\"_blank\">graphique vectoriel scalable (SVG )</a> avec un \u00e9l\u00e9ment `<title>`. Pour la prise en charge inter-navigateurs, vous devriez utiliser `aria-labelledby` sur le SVG et cr\u00e9er une r\u00e9f\u00e9rence au titre. Note que certains navigateurs affichent le contenu de l'\u00e9l\u00e9ment `<title>` dans une infobulle lorsque vous survolez le SVG, comme le montre l'[exemple 2](#exemple-2).\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Le titre du SVG sert de texte au lien de t\u00e9l\u00e9chargement**\r\n\r\n```html\r\n<a href=\"/report.pdf\" download>\r\n  <svg aria-labelledby=\"save_title\" role=\"img\">\r\n    <title id=\"save_title\">Save</title>\r\n    <path d=\"\u2026\"/>\r\n  </svg>\r\n</a>\r\n```\r\nVous pouvez \u00e9galement retirer le graphique de l'arbre d'accessibilit\u00e9 en d\u00e9finissant un attribut `alt` vide sur `img` ou `aria-hidden=\"true\"` sur le SVG. Si vous faites cela, le lien a toujours besoin d'une alternative textuelle, que vous pouvez fournir avec `aria-label` ou `aria-labelledby` sur le lien lui-m\u00eame, comme le montre l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;L'attribut `aria-label` \u00e9tiquette le lien**\r\n\r\n```html\r\n<a href=\"https://mastodon.social\" aria-label=\"Mastodon\">\r\n  <img src=\"/images/mastodon-logo.svg\" alt=\"\">\r\n</a>\r\n\r\n<a href=\"https://mastodon.social\" aria-label=\"Mastodon\">\r\n  <svg aria-hidden=\"true\">\r\n    <path d=\"\u2026\"/>\r\n  </svg>\r\n</a>\r\n```\r\n\r\nSi vous n\u2019utilisez pas l\u2019image pour attribuer un nom accessible au lien ou pour l\u2019\u00e9tiqueter d\u2019une autre mani\u00e8re, un lecteur d\u2019\u00e9cran annoncera l\u2019URL, une partie de celle-ci, une formule du type \u00ab image non \u00e9tiquet\u00e9e \u00bb, ou encore le nom du fichier de l\u2019image.\r\n\r\nLes images sur le web peuvent \u00eatre grossi\u00e8rement class\u00e9es en trois cat\u00e9gories : informatives, d\u00e9coratives et fonctionnelles.\r\n\r\nLes images informatives repr\u00e9sentent des informations li\u00e9es au contenu principal d\u2019une page ou d\u2019une section. D\u00e9crivez bri\u00e8vement ce type d\u2019images en expliquant leur signification ou le contenu qu\u2019elles affichent. La longueur de la description d\u00e9pend des informations et du contexte que vous souhaitez transmettre. L\u2019[exemple 4](#exemple-4), vous trouverez un exemple d\u2019image informative ainsi que sa description.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Description d'une image informative**\r\n\r\n```html\r\n<img src=\"images/karlskirche.jpg\" alt=\"L'\u00e9glise Saint-Charles de Vienne, un \u00e9difice baroque contenant un d\u00f4me et deux colonnes.\">\r\n```\r\n\r\nLes images d\u00e9coratives servent uniquement \u00e0 l\u2019aspect visuel et n\u2019apportent que peu, voire aucune information en termes de contenu. Elles n\u2019ont donc pas besoin de texte alternatif. Dans l\u2019[exemple 5](#exemple-5), vous trouverez un exemple d\u2019image d\u00e9corative accompagn\u00e9 de sa description.\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;L'attribut alt blank cache l'image d\u00e9corative aux lecteurs d'\u00e9cran.**\r\n\r\n```html\r\n<img src=\"images/headphones.jpg\" alt=\"\">\r\n```\r\n\r\nDans certaines situations, les images d\u00e9coratives ne contribuent pas directement \u00e0 la compr\u00e9hension du contenu, mais elles peuvent transmettre des \u00e9motions. Dans ce cas, lorsque vous souhaitez instaurer une atmosph\u00e8re particuli\u00e8re, il peut \u00eatre pertinent de d\u00e9crire ces images d\u00e9coratives. \r\n\r\nLes images fonctionnelles sont des images int\u00e9gr\u00e9es dans des liens ou des boutons, dont le texte alternatif fait office de libell\u00e9 pour le lien ou le bouton. Avec ce type d\u2019image, vous ne d\u00e9crivez pas le contenu visuel, mais plut\u00f4t l\u2019action que l\u2019image initie.\r\n\r\nSelon le rapport <a href=\"https://webaim.org/projects/million/\" target=\"_blank\">WebAIM Million 2024</a>, issu d\u2019une \u00e9valuation automatis\u00e9e annuelle de l\u2019accessibilit\u00e9 du top 1 million de sites web, 44,6 % des sites test\u00e9s contenaient des liens vides.\r\n\r\nIl existe au moins deux causes principales \u00e0 ces probl\u00e8mes. La premi\u00e8re r\u00e9side dans la pr\u00e9sence de liens litt\u00e9ralement vides, c\u2019est-\u00e0-dire ne contenant aucun contenu, comme le montre l\u2019[exemple 6](#exemple-6).\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Un lien vide sans nom accessible**\r\n\r\n```html\r\n<a href=\"/produits\"></a>\r\n```\r\n\r\nL'autre cause est qui enveloppe des images dans des liens ou des boutons sans fournir d'alternative textuelle, comme le montrent les exemples [7](#exemple-7) et [8](#exemple-8).\r\n\r\n**<span id=\"exemple-7\">Exemple&nbsp;7</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Une image sans attribut `alt` ins\u00e9r\u00e9e dans un lien**\r\n\r\n```html\r\n<a href=\"https://webaim.org/projects/million/\">\r\n  <img src=\"/images/screenshot-04-03-23_copy.jpg\">\r\n</a>\r\n```\r\n\r\nLe [tableau](#table-1) ci-dessous montre comment diff\u00e9rents lecteurs d'\u00e9cran et navigateurs annoncent le code de l'[exemple 8](#exemple-8). Au mieux, les utilisateurs de lecteurs d'\u00e9cran ne peuvent que deviner ce qui les attend lorsqu'ils cliquent sur un lien vide.\r\n\r\n**<span id=\"exemple-8\">Exemple&nbsp;8</span>&nbsp;&ndash;&nbsp;Une image avec un attribut alt vide envelopp\u00e9e dans un lien**\r\n\r\n```html\r\n<a href=\"https://webaim.org/projects/million/\">\r\n  <img src=\"/images/screenshot-04-03-23_copy.jpg\">\r\n</a>\r\n```\r\n\r\n\r\n<table id=\"table-1\">\r\n    <caption>\r\n        Test du lecteur d'\u00e9cran : Image li\u00e9e \u00e0 une image vide <code>alt</code>\r\n    </caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Navigateur</th>\r\n            <th scope=\"col\">Narration pour lecteur d'\u00e9cran</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>\r\n                NVDA\r\n            </td>\r\n            <td>\r\n                Firefox\r\n            </td>\r\n            <td>\r\n                <strong>million, lien</strong>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                JAWS\r\n            </td>\r\n            <td>\r\n                Firefox\r\n            </td>\r\n            <td>\r\n                <strong>lien, H T T P S colon slash slash webaim dot org slash projects slash million slash</strong>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                JAWS\r\n            </td>\r\n            <td>\r\n                Bord\r\n            </td>\r\n            <td>\r\n                <strong>million, lien</strong>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                TalkBack\r\n            </td>\r\n            <td>\r\n                Chrome\r\n            </td>\r\n            <td>\r\n                <strong>million, lien</strong>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                VoiceOver macOS\r\n            </td>\r\n            <td>\r\n                Safari\r\n            </td>\r\n            <td>\r\n                <strong>lien, million</strong>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                VoiceOver macOS\r\n            </td>\r\n            <td>\r\n                Chrome\r\n            </td>\r\n            <td>\r\n                <strong>lien, million</strong>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                VoiceOver macOS\r\n            </td>\r\n            <td>\r\n                Firefox\r\n            </td>\r\n            <td>\r\n                <strong>lien, million</strong>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td>\r\n                VoiceOver iOS\r\n            </td>\r\n            <td>\r\n                Safari\r\n            </td>\r\n            <td>\r\n                <strong>million, lien</strong>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nAvec les images informatives, vous expliquez le contenu, tandis qu\u2019avec les images fonctionnelles, vous d\u00e9crivez l\u2019action que r\u00e9alise le lien ou le bouton. La pertinence d\u2019une description sp\u00e9cifique d\u2019une image d\u00e9pend du contexte, mais les images informatives comme les images fonctionnelles doivent imp\u00e9rativement comporter une alternative textuelle.\r\n\r\n\r\n",
      "created": "2025-06-19T15:36:57.172287",
      "updated": "2025-06-19T16:27:26.908374",
      "meta_description": "Comment rendre vos liens images accessibles\u202f? D\u00e9couvrez les bonnes pratiques et erreurs courantes avec exemples HTML concrets.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 25,
      "title": "Informer les utilisateurs de l'\u00e9volution du contexte",
      "slug": "informer-les-utilisateurs-de-l-evolution-du-contexte",
      "body": "Lorsque un lien s'ouvre dans un nouvel onglet ou une nouvelle fen\u00eatre de fa\u00e7on inattendue, cela peut causer plusieurs probl\u00e8mes aux utilisateurs :\r\n\r\n- Il <a href=\"https://www.w3.org/WAI/WCAG21/Techniques/general/G201.html\" target=\"_blank\">peut confondre et d\u00e9sorienter</a> les personnes ayant des difficult\u00e9s \u00e0 percevoir le contenu visuel ou souffrant de troubles cognitifs.\r\n- Il n'est pas toujours \u00e9vident de savoir qu'un lien s'est ouvert dans un nouvel onglet, en particulier sur les navigateurs mobiles, ce qui peut \u00eatre d\u00e9sorientant.\r\n- Le bouton retour peut ne pas fonctionner parce que tous les navigateurs ne partagent pas l'historique de navigation d'une session entre les onglets. Si l'utilisateur ne peut pas utiliser le bouton retour, il doit trouver le moyen de revenir \u00e0 la page pr\u00e9c\u00e9dente.\r\n- Les utilisateurs moins techniques peuvent ne pas comprendre comment naviguer entre les fen\u00eatres et les onglets.\r\n- En plus de cela, il encombre l'espace d'information de l'utilisateur.\r\n\r\nSi l'ouverture d'un lien dans un nouvel onglet ou une nouvelle fen\u00eatre am\u00e9liore l'exp\u00e9rience de l'utilisateur et que vous utilisez `target=\"_blank\"` sur un lien, il est pr\u00e9f\u00e9rable d'informer les utilisateurs dans le texte du lien que le lien s'ouvrira dans un nouvel onglet, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un texte de lien qui comprend un avertissement entre parenth\u00e8ses.**\r\n\r\n```html\r\n<a href=\"https://www.bob-eponge.fr\" target=\"_blank\">\r\n  Le site de  Bob l'\u00e9ponge (ouverture nouvel onglet).\r\n</a>\r\n```\r\nSi vous ne pouvez pas ajouter d'avertissements manuellement et que vous n'avez pas de logique d'automatisation c\u00f4t\u00e9 serveur en place, vous pouvez utiliser le CSS. C'est mieux que de ne pas avoir d'avertissement, mais cette solution pr\u00e9sente des inconv\u00e9nients:\r\n\r\n- Sur les sites comportant plusieurs langues, vous devez g\u00e9rer les traductions du texte d'avertissement en CSS et non en HTML ou dans une base de donn\u00e9es. Ce n'est pas intuitif et c'est une source d'erreur parce qu'en g\u00e9n\u00e9ral, vous ne vous attendez pas \u00e0 un contenu textuel en CSS.\r\n- Les outils de traduction automatique risquent de ne pas traduire le pseudo-contenu.\r\n- Les informations ne sont pas disponibles si le CSS ne parvient pas \u00e0 se charger ou si la page est pr\u00e9sent\u00e9e sans CSS.\r\n\r\nL'[exemple 2](#exemple-2) semble \u00eatre une solution \u00e9l\u00e9gante, mais je recommande d'utiliser le texte de l'\u00e9l\u00e9ment directement au lieu d'un texte provenant d'un pseudo-\u00e9l\u00e9ment.\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Un avertissement ajout\u00e9 par l'interm\u00e9diaire d'un pseudo-\u00e9l\u00e9ment**\r\n\r\n```html\r\n<a href=\"https://www.bob-eponge.fr\" target=\"_blank\">\r\n  Le site de  Bob l'\u00e9ponge (ouverture nouvel onglet).\r\n</a>\r\n```\r\n\r\n```css\r\n[target=\"_blank\"]::after {\r\n  content: \" (ouverture nouvel onglet)\";\r\n}\r\n```\r\n\r\n**Note** : Un \u00e9l\u00e9ment normal en HTML est un \u00e9l\u00e9ment que vous ajoutez \u00e0 une page directement dans votre document HTML ou via JavaScript. Un pseudo-\u00e9l\u00e9ment ne fait pas partie de ton document HTML mais est ajout\u00e9 au DOM via CSS.\r\n\r\nEst-ce une bonne id\u00e9e de forcer l'ouverture des liens dans de nouveaux onglets ou de nouvelles fen\u00eatres ? Selon la personne \u00e0 qui vous posez la question, vous obtiendrez des r\u00e9ponses tr\u00e8s diff\u00e9rentes. Certaines personnes favorisent l'ouverture de liens externes dans de nouvelles fen\u00eatres parce que cela permet aux utilisateurs de rester sur votre site. Ce sur quoi les experts en utilisabilit\u00e9 et en accessibilit\u00e9 sont d'accord, c'est que vous devez l'\u00e9viter (\u00e0 quelques exceptions pr\u00e8s) et informer les utilisateurs si vous ne le faites pas.\r\n\r\nQue les liens s'ouvrent dans de nouvelles fen\u00eatres ou de nouveaux onglets peut \u00eatre probl\u00e9matique pour la convivialit\u00e9 et l'accessibilit\u00e9 n'est pas une id\u00e9e nouvelle. Depuis, nous avons vu appara\u00eetre beaucoup plus d'appareils portables comme les smartphones et les tablettes, o\u00f9 l'espace est limit\u00e9 et o\u00f9 garder une trace des onglets et des fen\u00eatres ouvertes est encore plus difficile.\r\n\r\nOutre les probl\u00e8mes \u00e9num\u00e9r\u00e9s dans la section de cette recette consacr\u00e9e aux probl\u00e8mes, l'un des arguments les plus convaincants contre l'ouverture des liens dans un nouvel onglet est que lorsque vous appliquez la m\u00e9thode `target=\"_blank\"` vous enlevez \u00e0 l'utilisateur la possibilit\u00e9 de d\u00e9cider comment ouvrir un lien. Il s'ouvrira toujours dans un nouvel onglet ou une nouvelle fen\u00eatre (selon les param\u00e8tres du navigateur). \r\n\r\nLe site <a href=\"https://www.w3.org/WAI/WCAG21/Techniques/general/G200.html#examples\" target=\"_blank\">(WCAG) \u00e9num\u00e8re des sc\u00e9narios</a> dans lesquels le fait de forcer les liens \u00e0 s'ouvrir dans un nouvel onglet est pr\u00e9f\u00e9rable pour l'exp\u00e9rience de l'utilisateur :\r\n\r\n- Si une page li\u00e9e contient des informations contextuelles destin\u00e9es \u00e0 persister \u00e0 c\u00f4t\u00e9 du contenu principal, comme des instructions pour remplir un formulaire ou d'autres documents de r\u00e9f\u00e9rence, l'ouverture de la page dans le m\u00eame onglet peut perturber un flux de travail en plusieurs \u00e9tapes.\r\n- Si un lien ouvre des widgets dans une fen\u00eatre contextuelle, comme un s\u00e9lecteur de date bas\u00e9 sur un calendrier ou une connexion, vous voulez que les utilisateurs effectuent ces actions en dehors de la page principale.\r\n- Si un utilisateur est connect\u00e9, le fait d'acc\u00e9der \u00e0 une page en dehors de la zone s\u00e9curis\u00e9e pourrait mettre fin \u00e0 la session de l'utilisateur.\r\n\r\nDans les cas o\u00f9 l'ouverture d'un nouvel onglet par d\u00e9faut aide les utilisateurs, pr\u00e9voiyez un avertissement. Cela leur permet de d\u00e9cider s'ils veulent quitter la fen\u00eatre actuelle, et cela les aidera \u00e0 s'orienter et \u00e0 naviguer.\r\n\r\nLa fa\u00e7on la plus fiable d'ajouter un avertissement est d'utiliser du texte et un message d'avertissement rapide, comme \"S'ouvre dans un nouvel onglet\", comme le montrent les exemples [1](#exemple-1) et [2](#exemple-2). Ces deux solutions ajoutent du contenu \u00e0 l'\u00e9tiquette d'origine et ne l'\u00e9crasent pas. Une mauvaise pratique courante consiste \u00e0 utiliser `aria-label` pour cette t\u00e2che, comme le montre l'[exemple 3](#exemple-3). `aria-label` \u00e9crase le texte original et rend le lien pratiquement inutile parce que son nom accessible est maintenant \u00ab&nbsp;S'ouvre dans un nouvel onglet&nbsp;\u00bb.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : aria-label \u00e9crase l'\u00e9tiquette originale**\r\n\r\n```html\r\n<a href=\"https://www.bob-eponge.fr\" target=\"_blank\"  aria-label=\"ouverture nouvel onglet\">\r\n  Le site de  Bob l'\u00e9ponge.\r\n</a>\r\n```\r\n\r\nSi vous d\u00e9finissez un lien pour qu'il s'ouvre dans un onglet, basez votre d\u00e9cision sur ce qui est le mieux pour vos utilisateurs. Le r\u00e9f\u00e9rencement ou les indicateurs cl\u00e9s de performance (ICP) ne devraient pas entrer en ligne de compte. Si possible, \u00e9tayez vos choix par des tests de convivialit\u00e9 ou des enqu\u00eates contextuelles.",
      "created": "2025-06-22T23:23:45.066472",
      "updated": "2025-06-23T00:08:14.430872",
      "meta_description": "Informez vos utilisateurs lorsqu\u2019un lien s\u2019ouvre dans un nouvel onglet. D\u00e9couvrez les bonnes pratiques d\u2019accessibilit\u00e9 et d\u2019exp\u00e9rience utilisateur.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 26,
      "title": "Accessibilit\u00e9 et routage c\u00f4t\u00e9 client",
      "slug": "accessibilite-et-routage-cote-client",
      "body": "Les diff\u00e9rents frameworks et plugins JavaScript mettent en \u0153uvre le routage c\u00f4t\u00e9 client de mani\u00e8re diff\u00e9rente, mais ils ont tous en commun de d\u00e9sactiver le m\u00e9canisme de navigation de site par d\u00e9faut du navigateur et d'injecter du contenu dans le DOM. La gestion manuelle du routage peut entra\u00eener des changements inattendus ou indiscernables. Pour les utilisateurs qui d\u00e9pendent principalement de l'accessibilit\u00e9 au clavier, le focus peut ne pas se trouver l\u00e0 o\u00f9 ils l'attendent. Il peut m\u00eame \u00eatre compl\u00e8tement perdu, ce qui peut rendre la navigation beaucoup plus difficile. Les utilisateurs de lecteurs d'\u00e9cran peuvent ne pas remarquer que le contenu d'une page a chang\u00e9 en raison de l'absence de retour d'information.\r\n\r\nLa r\u00e9ponse la plus \u00e9vidente \u00e0 ce probl\u00e8me est d'\u00e9viter de le provoquer en premier lieu et de se fier au comportement de navigation par d\u00e9faut du navigateur. Mais selon les exigences ou la pile technologique, ce n'est pas toujours possible ou souhaitable.\r\n\r\nCommen\u00e7ons par un exemple simple. Vous d\u00e9sactivez le comportement par d\u00e9faut du navigateur et, au lieu de recharger la page, vous ajoutez le contenu d'un mod\u00e8le \u00e0 l'\u00e9l\u00e9ment principal (voir les exemples [1](#exemple-1) et [2](#exemple-2)).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Une navigation, un \u00e9l\u00e9ment principal vide et le contenu des deux pages li\u00e9es stock\u00e9 dans une balise template**\r\n\r\n```html\r\n<header>\r\n  <nav>\r\n    <ul>\r\n      <li><a href=\"#page-home\">accueil</a></li>\r\n      <li><a href=\"#page-about\">\u00e0 propos de</a></li>\r\n    </ul>\r\n  </nav>\r\n</header>\r\n\r\n<main>\r\n</main>\r\n\r\n<template id=\"page-home\">\r\n  <h1 id=\"heading\">Accueil</h1>\r\n</template>\r\n\r\n<template id=\"page-about\">\r\n  <h1 id=\"heading\">\u00c0 propos de nous</h1>\r\n</template>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Solution incompl\u00e8te : Un \u00e9v\u00e9nement de clic emp\u00eache le comportement par d\u00e9faut des liens et clone le contenu du mod\u00e8le avec un id correspondant dans l'\u00e9l\u00e9ment principal**\r\n\r\n```javascript\r\nconst main = document.querySelector(\"main\");\r\nconst nav = document.querySelector(\"nav\");\r\n\r\nnav.addEventListener(\"click\", (e) => {\r\n    if (e.target.nodeName === \"A\") {\r\n        e.preventDefault();\r\n        const id = e.target.getAttribute(\"href\");\r\n        const page = document.querySelector(id);\r\n\r\n        main.innerHTML = \"\";\r\n        main.appendChild(page.content.cloneNode(true));\r\n    }\r\n});\r\n```\r\nCela fonctionne bien pour les utilisateurs de souris et les utilisateurs tactiles, mais les utilisateurs de lecteurs d'\u00e9cran n'ont pas de retour d'information lorsque le contenu du DOM change, et l'attention est toujours port\u00e9e sur le lien.\r\n\r\n## Gestion de l'attention\r\n\r\nUne solution \u00e0 ce probl\u00e8me consiste \u00e0 d\u00e9placer l'attention du lien vers un \u00e9l\u00e9ment s\u00e9mantique \u00e9tiquet\u00e9, qui pourrait \u00eatre l'\u00e9l\u00e9ment principal, comme dans les exemples [3](#exemple-3) et [4](#exemple-4).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp; Une solution simple de routage c\u00f4t\u00e9 client avec gestion de la focalisation**\r\n\r\n```html\r\n<header>\r\n  <nav>\r\n    <ul>\r\n      <li><a href=\"#page-home\">accueil</a></li>\r\n      <li><a href=\"#page-about\">\u00e0 propos de</a></li>\r\n    </ul>\r\n  </nav>\r\n</header>\r\n\r\n<main  tabindex=\"-1\" aria-labelledby=\"heading\">\r\n</main>\r\n\r\n<template id=\"page-home\">\r\n  <h1 id=\"heading\">Accueil</h1>\r\n</template>\r\n\r\n<template id=\"page-about\">\r\n  <h1 id=\"heading\">\u00c0 propos de nous</h1>\r\n</template>\r\n```\r\n\r\n**Note** : L'\u00e9l\u00e9ment `main` est focalisable et \u00e9tiquet\u00e9 par ses enfants\r\n\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Le script met l'accent sur l'\u00e9l\u00e9ment principal apr\u00e8s avoir ajout\u00e9 le contenu du mod\u00e8le.**\r\n\r\n```javascript\r\nconst main = document.querySelector(\"main\");\r\nconst nav = document.querySelector(\"nav\");\r\n\r\nnav.addEventListener(\"click\", (e) => {\r\n    if (e.target.nodeName === \"A\") {\r\n        e.preventDefault();\r\n        const id = e.target.getAttribute(\"href\");\r\n        const page = document.querySelector(id);\r\n\r\n        main.innerHTML = \"\";\r\n        main.appendChild(page.content.cloneNode(true));\r\n\t\t\t\tmain.focus();\r\n    }\r\n});\r\n```\r\n**Note** : `main.focus()` est ajout\u00e9\r\n\r\nLorsqu'un utilisateur clique sur un lien, la mise au point se d\u00e9place vers la zone de contenu principale de la page. Un effet secondaire bienvenu de la mise au point d'un \u00e9l\u00e9ment avec JavaScript est que les lecteurs d'\u00e9cran annoncent automatiquement son r\u00f4le et son nom accessible. Selon le lecteur d'\u00e9cran et le navigateur, cet exemple annonce quelque chose comme \"Principal, Accueil\" ou \"Principal, \u00c0 propos\".\r\n\r\n## R\u00e9gions dynamiques\r\n\r\nUne autre solution \u00e0 ce probl\u00e8me consiste \u00e0 signaler les changements de page \u00e0 l'aide d'une r\u00e9gion vivante. Les <a href=\"https://www.w3.org/TR/wai-aria/#dfn-live-region\" target=\"_blank\">r\u00e9gions en direct</a> sont des r\u00e9gions perceptibles qui annoncent aux lecteurs d'\u00e9cran les changements apport\u00e9s \u00e0 leur contenu \u00e0 la suite d'un \u00e9v\u00e9nement externe, alors que l'attention de l'utilisateur peut \u00eatre ailleurs. Elles peuvent \u00eatre utiles pour communiquer les changements de DOM, les r\u00e9sultats des interactions avec l'utilisateur, l'\u00e9tat d'attente, la progression du processus, les erreurs ou les changements de page. Parmi les exemples, on peut citer les journaux de discussion, la validation des formulaires ou le routage c\u00f4t\u00e9 client.\r\n\r\nChaque fois que vous modifiez le contenu de l'\u00e9l\u00e9ment avec `role=\"status\"` (cet attribut et cette valeur le transforment en r\u00e9gion vivante), un lecteur d'\u00e9cran l'annonce automatiquement. Les exemples [5](#exemple-5) et [6](#exemple-6) montrent une solution simple de routage c\u00f4t\u00e9 client utilisant une r\u00e9gion vivante.\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp; Une solution simple de routage c\u00f4t\u00e9 client avec une r\u00e9gion dynamique**\r\n\r\n```html\r\n<header>\r\n  <nav>\r\n    <ul>\r\n      <li><a href=\"#page-home\">accueil</a></li>\r\n      <li><a href=\"#page-about\">\u00e0 propos de</a></li>\r\n    </ul>\r\n  </nav>\r\n</header>\r\n\r\n<main></main>\r\n<div role=\"status\" class=\"visually-hidden\"></div>\r\n\r\n<template id=\"page-home\">\r\n  <h1 id=\"heading\">Accueil</h1>\r\n</template>\r\n\r\n<template id=\"page-about\">\r\n  <h1 id=\"heading\">\u00c0 propos de nous</h1>\r\n</template>\r\n```\r\n```css\r\n.visually-hidden { 2\r\n  clip-path: inset(50%);\r\n  height: 1px;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n}\r\n```\r\n\r\n**Note** : L'\u00e9l\u00e9ment `<div>` annonce les changements sur la page (la r\u00e9gion en direct). Le code css permet de d\u00e9placer visuellement un \u00e9l\u00e9ment hors de la fen\u00eatre. \r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp; Le script modifie le contenu de la r\u00e9gion en direct apr\u00e8s avoir ajout\u00e9 le contenu du mod\u00e8le**\r\n\r\n```javascript\r\nconst main = document.querySelector(\"main\");\r\nconst nav = document.querySelector(\"nav\");\r\nconst region = document.querySelector('[role=\"status\"]');\r\n\r\nnav.addEventListener(\"click\", (e) => {\r\n    if (e.target.nodeName === \"A\") {\r\n        e.preventDefault();\r\n        const link = e.target;\r\n        const id = link.getAttribute(\"href\");\r\n        const page = document.querySelector(id);\r\n\r\n        main.innerHTML = \"\";\r\n        main.appendChild(page.content.cloneNode(true));\r\n        region.textContent = `${link.textContent}`; \r\n    }\r\n});\r\n```\r\n\r\n**Note** : `region.textContent` modifie le contenu de la r\u00e9gion en direct chaque fois que l'utilisateur clique sur un lien.\r\n\r\nL'accent est toujours mis sur le lien, alors vous pouvez envisager de combiner les deux solutions si n\u00e9cessaire, mais n'oubliez pas que cela pourrait entra\u00eener une redondance : un lecteur d'\u00e9cran pourrait transmettre le contenu dans la r\u00e9gion en direct et le retour d'information en mettant l'accent sur un \u00e9l\u00e9ment.\r\n\r\nCe ne sont que des exemples. Il existe de nombreuses fa\u00e7ons diff\u00e9rentes de mettre en \u0153uvre et de combiner les deux solutions, et vous ne ppouvez d\u00e9terminer ce qui fonctionne le mieux qu'en effectuant des tests avec les utilisateurs.\r\n\r\nLa plupart des \u00e9l\u00e9ments en HTML sont accessibles par d\u00e9faut, ce qui signifie qu'ils fournissent d'embl\u00e9e les informations s\u00e9mantiques et les fonctionnalit\u00e9s n\u00e9cessaires \u00e0 la plupart des utilisateurs. \u00c0 part quelques exceptions, se fier au comportement par d\u00e9faut des \u00e9l\u00e9ments HTML est une valeur s\u00fbre. Lorsque vous d\u00e9sactivez ces valeurs par d\u00e9faut, vous devez vous assurer que votre solution personnalis\u00e9e offre une exp\u00e9rience utilisateur similaire ou meilleure.\r\n\r\nPrenons l'exemple de la navigation sur les pages. Lorsqu'un utilisateur clique sur un lien, le navigateur charge une nouvelle page, modifie le document affich\u00e9 dans la fen\u00eatre de visualisation et met l'accent sur le document. S'il utilise un lecteur d'\u00e9cran, il annonce \u00e9galement le titre de la page (`<title>`), qui doit \u00eatre unique sur chaque page. Quelle que soit la fa\u00e7on dont ils acc\u00e8dent au site Web, ils savent g\u00e9n\u00e9ralement toujours ce qui s'est pass\u00e9, qu'il s'est pass\u00e9 quelque chose et o\u00f9 ils se trouvent. Aucune de ces choses ne se produit lorsque vous emp\u00eachez le comportement de clic par d\u00e9faut d'un lien. Vous devez soit les recr\u00e9er manuellement, soit proposer une alternative similaire ou meilleure.\r\n\r\n## Gestion de l'attention\r\n\r\nLe comportement par d\u00e9faut du navigateur , qui consiste \u00e0 se concentrer sur le document lors du chargement d'une nouvelle page. Est-il le meilleur pour l'exp\u00e9rience de l'utilisateur ? C'est discutable. En comparant diff\u00e9rentes solutions, j'ai constat\u00e9 que cela d\u00e9pendait de la m\u00e9thode de navigation de l'utilisateur. Toujours est-il que dans une solution de rendu personnalis\u00e9e c\u00f4t\u00e9 client, vous devez g\u00e9rer le focus d'une mani\u00e8re ou d'une autre et le d\u00e9placer vers un \u00e9l\u00e9ment focalisable et s\u00e9mantique. Pour ce faire, placez l'attribut tabindex sur l'\u00e9l\u00e9ment et fixe la valeur \u00e0 `-1`, ce qui garantit que vous pouvez le focaliser via la m\u00e9thode `focus()` de JavaScript, mais pas avec la touche `Tab`.\r\n\r\nL'\u00e9l\u00e9ment focalisable ne doit pas \u00eatre un \u00e9l\u00e9ment g\u00e9n\u00e9rique, comme `div`, car les lecteurs d'\u00e9cran les traitent diff\u00e9remment et <a href=\"https://w3c.github.io/aria/#namefromprohibited\" target=\"_blank\">vous ne pouvez pas les nommer</a>. Voir l'[exemple 7](#exemple-7).\r\n\r\n**<span id=\"exemple-7\">Exemple&nbsp;7</span>&nbsp;&ndash;&nbsp; Mauvaise pratique : Ne mets pas l'accent sur un espace vide. `div`**\r\n\r\n```html\r\n<div tabindex=\"-1\"></div>\r\n```\r\n\r\nL'\u00e9l\u00e9ment focalisable peut \u00eatre l'\u00e9l\u00e9ment `<main>`, comme le montre l'[exemple 3](#exemple-3), un `<section>`, ou un `<hn>`. Il a id\u00e9alement un nom accessible, provenant soit de son contenu, soit de `aria-label`, comme le montre l'[exemple 8](#exemple-8). Vous ppouvez aussi utiliser `aria-labelledby` pour cr\u00e9er une r\u00e9f\u00e9rence \u00e0 un \u00e9l\u00e9ment existant. Dans le cas de l'[exemple 3](#exemple-3), il s'agirait de l'en-t\u00eate de chaque page.\r\n\r\n**<span id=\"exemple-8\">Exemple&nbsp;8</span>&nbsp;&ndash;&nbsp; Une section \u00e9tiquet\u00e9e focalisable**\r\n\r\n```html\r\n<section tabindex=\"-1\" aria-label=\"Produits\"></section>\r\n```\r\n\r\n## \u00c0 propos des r\u00e9gions dynamiques\r\n\r\nVous pouvez cr\u00e9er et configurer des r\u00e9gions dynamiques de diff\u00e9rentes mani\u00e8res. Les attributs les plus pertinents sont `aria-live`, `aria-atomic`, et `aria-relevant`.\r\n\r\nVous pouvez transformer un \u00e9l\u00e9ment en une r\u00e9gion en direct en d\u00e9finissant l'attribut `aria-live` sur `assertive` ou `polite`. Les mises \u00e0 jour assertives ont la plus haute priorit\u00e9 et doivent \u00eatre pr\u00e9sent\u00e9es imm\u00e9diatement, en interrompant les annonces en cours si n\u00e9cessaire. Les mises \u00e0 jour `polite` sont moins agressives et attendent la prochaine occasion possible, comme la fin d'une phrase ou les pauses de frappe.\r\n\r\nPar d\u00e9faut, seuls les n\u0153uds DOM modifi\u00e9s seront pr\u00e9sent\u00e9s car `aria-atomic` est `false`. Dans l'[exemple 9](#exemple-9), vous modifiez la valeur d'un \u00e9l\u00e9ment `<span>` \u00e0 l'int\u00e9rieur d'une r\u00e9gion dynamique au moment du clic. Le lecteur d'\u00e9cran n'annonce que le contenu du n\u0153ud DOM modifi\u00e9, par exemple \"Olivia\", et non la phrase enti\u00e8re. Il ne le fait \u00e9galement que si le texte change. Il n'y a pas d'annonce si la valeur actuelle est \"Philippa\" et que la nouvelle valeur qui la remplace est la m\u00eame.\r\n\r\n**<span id=\"exemple-9\">Exemple&nbsp;9</span>&nbsp;&ndash;&nbsp; Mise \u00e0 jour d'un n\u0153ud imbriqu\u00e9 dans une r\u00e9gion en direct**\r\n\r\n```html\r\n<button type=\"button\">Changez le nom</button>\r\n\r\n<div aria-live=\"polite\">\r\n  Mon nom est <span>Claudia</span>\r\n</div>\r\n\r\n<script>\r\nconst button = document.querySelector(\"button\");\r\n\r\n// liste de noms\r\nconst names = [\r\n\t\"Maurice\",\r\n\t\"Valentine\",\r\n\t\"Johanna\",\r\n\t\"Magalie\",\r\n\t\"Victoria\",\r\n\t\"Philippe\",\r\n\t\"Olivia\",\r\n];\r\nconst name = document.querySelector(\"span\");\r\n\r\nbutton.addEventListener(\"pointerdown\", e => {\r\n   const random = Math.floor(Math.random() * names.length);\r\n   name.textContent = names[random]; // remplit l'\u00e9l\u00e9ment span avec un nom choisi au hasard. \r\n});\r\n</script>\r\n```\r\n\r\nSi vous ajoutez l'attribut `aria-atomic` et que vous le d\u00e9finissez sur `true`, vous rendez la r\u00e9gion dynamique atomique, ce qui signifie que les lecteurs d'\u00e9cran pr\u00e9sentent la r\u00e9gion enti\u00e8re, par exemple, \"Mon nom est Maurice\", dans l'[exemple 10](#exemple-10).\r\n\r\n\r\n**<span id=\"exemple-10\">Exemple&nbsp;10</span>&nbsp;&ndash;&nbsp; Mise \u00e0 jour d'un n\u0153ud imbriqu\u00e9 dans une r\u00e9gion en direct**\r\n\r\n```html\r\n<button type=\"button\">Changez le nom</button>\r\n\r\n<div aria-live=\"polite\" aria-atomic=\"true\">\r\n  Mon nom est <span>Claudia</span>\r\n</div>\r\n```\r\n\r\nIl existe \u00e9galement des r\u00f4les de r\u00e9gion dynamique d\u00e9di\u00e9s, par exemple `status` et `alert`, et un \u00e9l\u00e9ment de r\u00e9gion dynamig, `<output>`. L'attribut `role=\"status\"` est un raccourci pour `aria-live=\"polite\"` et `aria-atomic=\"true\"` (voir l['exemple 11](#exemple-11)) et `role=\"alert\"` est un raccourci pour `aria-live=\"assertive\"` et `aria-atomic=\"true\"`.\r\n\r\n**<span id=\"exemple-11\">Exemple&nbsp;11</span>&nbsp;&ndash;&nbsp; Une r\u00e9gion dynamique**\r\n\r\n```html\r\n<button type=\"button\">Changez le nom</button>\r\n\r\n<div  role=\"status\">\r\n  Mon nom est <span>Claudia</span>\r\n</div>\r\n```\r\n\r\nL'<a href=\"https://developer.mozilla.org/fr/docs/Web/HTML/Reference/Elements/output\" target=\"_blank\">\u00e9l\u00e9ment de sortie</a> ([exemple 12](#exemple-12)) poss\u00e8de un `aria-live=\"polite\"` et un `aria-atomic=\"true\"` implicites.\r\n\r\n**<span id=\"exemple-12\">Exemple&nbsp;12</span>&nbsp;&ndash;&nbsp; Utilisation de `output` comme r\u00e9gion dynamique**\r\n\r\n```html\r\n<button type=\"button\">Changez le nom</button>\r\n\r\n<output>\r\n  Mon nom est <span>Claudia</span>\r\n</output>\r\n```\r\n\r\n### Le titre de la page\r\n\r\nIl ne suffit pas d'annoncer un changement de page : vous devez aussi changer le titre du document `<title>`. Les utilisateurs de lecteurs d'\u00e9cran utilisent des raccourcis pour lire le titre de la page, ce qui peut \u00eatre utile pour s'orienter. (Vous trouverez plus d'informations sur les titres de page dans cet article : [D\u00e9crire le document](/articles/decrire-le-document-7.html)).\r\n\r\nLa navigation de page c\u00f4t\u00e9 client est un sujet complexe. Les solutions propos\u00e9es dans cet article ne sont pas des snippets pr\u00eats \u00e0 l'emploi que vous pouvez mettre en \u0153uvre sur vos sites Web. Elles illustrent simplement le probl\u00e8me sous-jacent et sa complexit\u00e9. La fa\u00e7on dont vous le r\u00e9solvez d\u00e9pend de de votre framework et, surtout, de ce qui fonctionne le mieux pour tes utilisateurs. Lorsque vous utilisez un framework ou que vous choisissez un routeur pour votre application, assurez-vous qu'ils le font de mani\u00e8re accessible ou qu'ils fournissent au moins des instructions sur la mani\u00e8re de le faire. ",
      "created": "2025-06-23T22:48:50.081394",
      "updated": "2025-06-24T12:37:09.399177",
      "meta_description": "G\u00e9rer le focus et les r\u00e9gions dynamiques en routage JS pour une accessibilit\u00e9 optimale. Bonnes pratiques et exemples concrets \u00e0 l\u2019appui.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 27,
      "title": "Ajouter des liens \u00e0 des groupes d'\u00e9l\u00e9ments",
      "slug": "ajouter-des-liens-a-des-groupes-d-elements",
      "body": "Il est parfois souhaitable d'augmenter la zone de clic et de toucher d'un lien pour qu'elle s'\u00e9tende sur plusieurs \u00e9l\u00e9ments. Cela peut am\u00e9liorer l'exp\u00e9rience utilisateur pour les utilisateurs de la souris et du toucher, mais peut avoir un effet n\u00e9gatif sur l'accessibilit\u00e9 et l'UX pour les utilisateurs du clavier et du lecteur d'\u00e9cran. En fonction de la solution retenue, les probl\u00e8mes suivants peuvent survenir :\r\n\r\n- Le texte d'un lien peut \u00eatre long, ce qui rend l'utilisation d'une interface fastidieuse.\r\n- Les liens redondants polluent l'interface et rendent l'orientation et la navigation plus complexes pour les utilisateurs de lecteurs d'\u00e9cran.\r\n- Des paquets de tabulation suppl\u00e9mentaires rendent l'utilisation d'une interface plus exigeante physiquement pour les utilisateurs de clavier\r\n- Les liens vides ou verbeux peuvent \u00eatre difficiles ou impossibles \u00e0 s\u00e9lectionner pour les utilisateurs vocaux..\r\n- Les param\u00e8tres par d\u00e9faut du navigateur, comme la s\u00e9lection du texte, le clic du milieu pour ouvrir un lien dans une nouvelle fen\u00eatre/un nouvel onglet, l'ouverture du menu contextuel ou la pr\u00e9visualisation des URL, peuvent ne pas fonctionner.\r\n\r\nMalheureusement, il n'existe pas de m\u00e9thode parfaite pour relier des groupes d'\u00e9l\u00e9ments ; les solutions sont toutes assorties de compromis. Cet article \u00e9num\u00e8re cinq techniques de relier plusieurs \u00e9l\u00e9ments, en commen\u00e7ant par la plus simple. Si vous ne voulez pas les passer toutes en revue, passe \u00e0 la technique du [pseudo \u00e9l\u00e9ment](#_16-pseudo-element), que je recommande pour la plupart des cas d'utilisation.\r\n\r\nPour illustrer le probl\u00e8me, j'ai cr\u00e9\u00e9 un composant de carte. c'est une accroche de page g\u00e9n\u00e9ralement compos\u00e9e d'un titre, d'une image et d'un texte, que je lie diff\u00e9remment dans chaque exemple. Le code de l'[exemple 1](#exemple-1) est le code de base. Les exigences pour la carte sont :\r\n\r\n- Toute la carte doit \u00eatre cliquable.\r\n- L'annonce dans les lecteurs d'\u00e9cran doit \u00eatre succincte.\r\n- La carte doit contenir le moins de taquets de tabulation possible.\r\n- La solution doit prendre en charge plusieurs liens diff\u00e9rents.\r\n- Le <a href=\"https://validator.w3.org/\" target=\"_blank\">code HTML doit \u00eatre valide</a>.\r\n- Le menu contextuel et les autres param\u00e8tres par d\u00e9faut du navigateur devraient fonctionner comme pr\u00e9vu.\r\n- Le texte doit pouvoir \u00eatre s\u00e9lectionn\u00e9.\r\n\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Une carte de base**\r\n\r\n```html\r\n<div class=\"card\">\r\n  <h3>Qu'est-ce que le Lorem Ipsum?</h3>\r\n  <p>article \u00e9crit par <a href=\"https://bob-eponge.fr/robert-michu\">Robert Michu</a>\r\n  </p>\r\n  <img src=\"https://idinterdesign.ca/wp-content/uploads/2015/12/typographie-fonts-850x468.jpg\" alt=\"Exemple d'une image\">\r\n  <div>\r\n    <p> Le Lorem Ipsum est simplement du faux texte employ\u00e9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. </p>\r\n  </div>\r\n  <p> Lire <a href=\"/article-\">\u00ab Lorem Ipsum \u00bb</a>. </p>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    --padding: 1rem;\r\n\r\n    background-color: #f1f1f1;\r\n    box-shadow: 0 0 7px 3px #ccc;\r\n    display: grid;\r\n    font-family: Seravek, 'Gill Sans Nova', Ubuntu, Calibri, sans-serif;\r\n    grid-template-columns: var(--padding) 1fr var(--padding);\r\n    line-height: 1.5;\r\n    max-width: 23rem;\r\n    padding-block-end: var(--padding);\r\n  }\r\n\r\n  .card > * {\r\n    grid-column: 2 / -2;\r\n    margin: 0 0 0.6em;\r\n  }\r\n\r\n  .card h3 {\r\n    line-height: 1.3;\r\n    margin-block-end: 0;\r\n  }\r\n\r\n  .card h3 a {\r\n    color: initial;\r\n    text-decoration: initial;\r\n  }\r\n\r\n  .card :is(img, .img) {\r\n    grid-column: 1 / -1;\r\n    margin-block-end: var(--padding);\r\n    max-width: 100%;\r\n    order: -1;\r\n  }\r\n\r\n  .card :last-child {\r\n    margin-block-end: 0;\r\n  }\r\n</style>\r\n```\r\n\r\n## Envelopper tous les \u00e9l\u00e9ments dans un \u00e9l\u00e9ment `<a>`\r\n\r\nVous pouvez envelopper tous les \u00e9l\u00e9ments de la carte dans un seul \u00e9l\u00e9ment `<a>` comme le montre l'[exemple 2](#exemple-2). C'est un mod\u00e8le courant, mais il a des cons\u00e9quences n\u00e9gatives importantes pour les utilisateurs de lecteurs d'\u00e9cran. \r\n\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Composant carte dont tous les \u00e9l\u00e9ments sont imbriqu\u00e9s dans un lien**\r\n\r\n```html\r\n<div class=\"card\">\r\n  <a href=\"/article-\">\r\n    <h3>Qu'est-ce que le Lorem Ipsum?</h3>\r\n    <p>article \u00e9crit par Robert Michu</p>\r\n    <img src=\"https://idinterdesign.ca/wp-content/uploads/2015/12/typographie-fonts-850x468.jpg\" alt=\"image caract\u00e8res imprimerie\">\r\n    <div>\r\n      <p> Le Lorem Ipsum est simplement du faux texte employ\u00e9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. </p>\r\n    </div>\r\n    <p> Lire \u00ab Lorem Ipsum \u00bb </p>\r\n  </a>\r\n</div>\r\n\r\n<style>\r\n  .card {\r\n    --padding: 1rem;\r\n\r\n    background-color: #f1f1f1;\r\n    box-shadow: 0 0 7px 3px #ccc;\r\n    display: grid;\r\n    font-family: Seravek, 'Gill Sans Nova', Ubuntu, Calibri, sans-serif;\r\n    grid-template-columns: var(--padding) 1fr var(--padding);\r\n    line-height: 1.5;\r\n    max-width: 23rem;\r\n    padding-block-end: var(--padding);\r\n  }\r\n\r\n  .card > * {\r\n    grid-column: 2 / -2;\r\n    margin: 0 0 0.6em;\r\n  }\r\n\r\n  .card h3 {\r\n    line-height: 1.3;\r\n    margin-block-end: 0;\r\n  }\r\n\r\n  .card h3 a {\r\n    color: initial;\r\n    text-decoration: initial;\r\n  }\r\n\r\n  .card :is(img, .img) {\r\n    grid-column: 1 / -1;\r\n    margin-block-end: var(--padding);\r\n    max-width: 100%;\r\n    order: -1;\r\n  }\r\n\r\n  .card :last-child {\r\n    margin-block-end: 0;\r\n  }\r\n\t  .card {\r\n    display: block;\r\n  }\r\n\r\n  .card > a {\r\n    color: initial;\r\n    display: grid;\r\n    grid-template-columns: inherit;\r\n    text-decoration: none;\r\n  }\r\n\r\n  .card > a > * {\r\n    grid-column: 2 / -2;\r\n    margin: 0 0 0.6em;\r\n  }\r\n</style>\r\n```\r\n\r\nCette technique est simple \u00e0 mettre en \u0153uvre, mais elle pr\u00e9sente de s\u00e9rieux inconv\u00e9nients.\r\n\r\n### Les avantages\r\n\r\n- Toute la carte est cliquable.\r\n- Les param\u00e8tres par d\u00e9faut du navigateur, comme le clic droit ou le clic du milieu, fonctionnent comme pr\u00e9vu.\r\n- Il n'y a pas de liens redondants.\r\n\r\n### Les inconv\u00e9nients\r\n\r\n- Si vous acc\u00e9dez au lien avec la touche `Tab`, un lecteur d'\u00e9cran lit tout le texte contenu dans le lien, l'en-t\u00eate, le texte `alt` de l'image, le texte d'accroche et l'appel \u00e0 l'action. Certains lecteurs d'\u00e9cran indiquent aux utilisateurs qu'il s'agit d'un lien uniquement lorsqu'ils ont fini d'annoncer. NVDA, par exemple, lit :  \r\n> Qu'est-ce que le Lorem Ipsum ? article \u00e9crit par Robert Michu image caract\u00e8res imprimerie Le Lorem Ipsum est simplement du faux texte employ\u00e9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. Lire \u00ab Lorem Ipsum \u00bb\r\n- En utilisant le curseur virtuel, un lecteur d'\u00e9cran peut annoncer des morceaux de texte comme des liens s\u00e9par\u00e9s. Encore une fois, dans NVDA : \r\n> Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. \r\n- Vous devez supprimer les liens imbriqu\u00e9s parce que ce n'est pas valide d'imbriquer des \u00e9l\u00e9ments interactifs, et cela casse la mise en page.\r\n- Le texte n'est pas s\u00e9lectionnable.\r\n- On ne sait pas tr\u00e8s bien comment acc\u00e9der au lien par la voix.\r\n- En particulier sur mobile, les utilisateurs pourraient \u00eatre incapables d'acc\u00e9der aux \u00e9l\u00e9ments imbriqu\u00e9s s\u00e9par\u00e9ment.\r\n\r\nVous pouvez minimisez la verbosit\u00e9 en \u00e9tiquetant le lien avec `aria-label` ou `aria-labelledby`, comme le montre l'[exemple 3](#exemple-3), mais tous les autres probl\u00e8mes persistent.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Composant carte dont tous les \u00e9l\u00e9ments sont envelopp\u00e9s dans un \u00e9l\u00e9ment `<a>` avec un nom accessible explicite**\r\n\r\n```html\r\n<div class=\"card\">\r\n  <a href=\"/article-\" aria-labelledby=\"technique envelopper tous les \u00e9l\u00e9ments dans un lien unique\">\r\n    <!-- etc. -->\r\n  </a>\r\n</div>\r\n```\r\n\r\n## Liens s\u00e9par\u00e9s\r\n\r\nAu lieu d'envelopper tous les \u00e9l\u00e9ments dans un lien, reliez la plupart des \u00e9l\u00e9ments s\u00e9par\u00e9ment, comme le montre l'[exemple 4](#exemple-4)\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Composant carte avec des liens s\u00e9par\u00e9s**\r\n\r\n```html\r\n<div class=\"card\">\r\n  <h3><a href=\"/article-\">Qu'est-ce que le Lorem Ipsum ?</a></h3>\r\n  <p>article \u00e9crit par <a href=\"https://bob-eponge.fr/robert-michu\">Robert Michu</a>\r\n  </p>\r\n  <a href=\"/article-\" class=\"img\"><img src=\"https://idinterdesign.ca/wp-content/uploads/2015/12/typographie-fonts-850x468.jpg\" alt=\"Exemple d'une image\"></a>\r\n  <div>\r\n    <p> Le Lorem Ipsum est simplement du faux texte employ\u00e9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. </p>\r\n  </div>\r\n  <p> Lire <a href=\"/article-\">\u00ab Lorem Ipsum \u00bb</a>. </p>\r\n</div>\r\n```\r\nL'[exemple 5](#exemple-5) est une variante qui r\u00e9duit le nombre tabulations.\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;Composant carte avec des liens s\u00e9par\u00e9s avec `tabindex=\"-1\"` et `role=\"presentation\"`**\r\n\r\n```html\r\n<div class=\"card\">\r\n  <h3><a href=\"/article-\" tabindex=\"-1\" role=\"presentation\">Qu'est-ce que le Lorem Ipsum ?</a></h3>\r\n  <p>article \u00e9crit par <a href=\"https://bob-eponge.fr/robert-michu\">Robert Michu</a>\r\n  </p>\r\n  <a href=\"/article-\" class=\"img\"  tabindex=\"-1\" role=\"presentation\"><img src=\"https://idinterdesign.ca/wp-content/uploads/2015/12/typographie-fonts-850x468.jpg\" alt=\"Exemple d'une image\"></a>\r\n  <div>\r\n    <p> Le Lorem Ipsum est simplement du faux texte employ\u00e9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. </p>\r\n  </div>\r\n  <p> Lire <a href=\"/article-\">\u00ab Lorem Ipsum \u00bb</a>. </p>\r\n</div>\r\n```\r\nL'utilisation de `tabindex=\"-1\"` et `role=\"presentation\"` sur les liens redondants semble \u00eatre une solution intelligente, mais il y a des mises en garde avec cette technique.\r\n\r\nLes deux inconv\u00e9nients importants de cette technique sont qu'elle cr\u00e9e de nombreux liens redondants avec la m\u00eame cible et qu'elle augmente le nombre d'arr\u00eats de tabulation.\r\n\r\nVous pouvez mettre `tabindex=-1` sur les liens suppl\u00e9mentaires pour r\u00e9duire le nombre d'arr\u00eats de tabulation, comme illustr\u00e9 dans l'[exemple 5](#exemple-5), mais cela enfreint la <a href=\"https://www.w3.org/TR/using-aria/#3rdrule\" target=\"_blank\">troisi\u00e8me r\u00e8gle d'ARIA</a>. Tous les contr\u00f4les des \u00e9l\u00e9ments interactifs doivent \u00eatre utilisables avec le clavier. Vous pouvez enfreindre la <a href=\"https://www.w3.org/TR/using-aria/#secondrule\" target=\"_blank\">deuxi\u00e8me r\u00e8gle d'ARIA</a> et changer le r\u00f4le du lien en `none` ou `presentation`. En th\u00e9orie, vous obtiendrez un \u00e9l\u00e9ment textuel g\u00e9n\u00e9rique non focalisable qui se comporterait comme un lien pour les utilisateurs de la souris, du toucher et de la voix. En pratique, cela ne fonctionne pas, car les API d'accessibilit\u00e9 ignorent `role=presentation` et `role=none` sur les liens hypertextes. Il en r\u00e9sulte un m\u00e9li-m\u00e9lo confus o\u00f9 les liens ne peuvent pas \u00eatre d\u00e9couverts via `Tab`, mais le sont avec le curseur virtuel.\r\n\r\n###  Les avantages\r\n\r\n- Il n'y a pas d'annonce verbale lorsque vous utilisez la touche `Tab` avec un lecteur d'\u00e9cran.\r\n- Certaines parties de la carte sont cliquables.\r\n- Les param\u00e8tres par d\u00e9faut du navigateur, comme le clic droit ou le clic du milieu, fonctionnent comme pr\u00e9vu.\r\n- La carte prend en charge plusieurs liens.\r\n- Il est accessible par la voix.\r\n- Le texte peut \u00eatre s\u00e9lectionn\u00e9.\r\n\r\n### Les inconv\u00e9nients\r\n\r\n- Seules certaines parties de la carte sont cliquables.\r\n- La technique ajoute des tabulations suppl\u00e9mentaires.\r\n- La carte contient de nombreux liens redondants avec la m\u00eame cible.\r\n\r\n## Lien vide\r\n\r\nPour \u00e9viter les annonces verbeuses et le HTML invalide, placez un lien vide au m\u00eame niveau que le contenu de la carte et positionne-le au-dessus de la carte, comme le montre l'[exemple 6](#exemple-6).\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Composant carte avec un lien vide recouvrant la carte.**\r\n\r\n```html\r\n<div class=\"card\">\r\n  <a class=\"technique-3\" href=\"/article\" aria-labelledby=\"technique-3\"></a>\r\n  <h3>Qu'est-ce que le Lorem Ipsum?</h3>\r\n  <p>article \u00e9crit par <a href=\"https://bob-eponge.fr/robert-michu\">Robert Michu</a>\r\n  </p>\r\n  <img src=\"https://idinterdesign.ca/wp-content/uploads/2015/12/typographie-fonts-850x468.jpg\" alt=\"Exemple d'une image\">\r\n  <div>\r\n    <p> Le Lorem Ipsum est simplement du faux texte employ\u00e9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. </p>\r\n  </div>\r\n  <p> Lire <a href=\"/article-\">\u00ab Lorem Ipsum \u00bb</a>. </p>\r\n</div>\r\n\r\n<style>\r\n  /* etc. */\r\n  .technique-3{\r\n    grid-column: 1 / -1;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    inset: 0;\r\n  }\r\n</style>\r\n```\r\n\r\nCette technique est similaire \u00e0 la premi\u00e8re technique, sauf qu'elle n'enveloppe pas tous les autres \u00e9l\u00e9ments. Le lien est vide, et vous le positionnez au-dessus d'eux \u00e0 l'aide de CSS. Cela r\u00e9sout le probl\u00e8me de la verbosit\u00e9, mais le texte n'est toujours pas s\u00e9lectionnable, et la technique ne prend pas en charge les liens multiples.\r\n\r\n### Les avantages\r\n\r\n- Il n'y a pas d'annonce verbale lorsque vous utilisez la touche `Tab` avec un lecteur d'\u00e9cran.\r\n- Toute la carte est cliquable.\r\n- Il n'y a qu'une seule tabulation.\r\n- Les param\u00e8tres par d\u00e9faut du navigateur, comme le clic droit ou le clic du milieu, fonctionnent comme pr\u00e9vu.\r\n- Il n'y a pas de liens redondants.\r\n- Il est accessible par la voix.\r\n- Les autres \u00e9l\u00e9ments de la carte sont accessibles.\r\n\r\n### Les inconv\u00e9nients\r\n\r\n- La technique ne prend pas en charge plusieurs liens diff\u00e9rents.\r\n- Le texte n'est pas s\u00e9lectionnable.\r\n- Le texte non cliquable Lire \u00ab Lorem Ipsum \u00bb peut pr\u00eater \u00e0 confusion.\r\n- Les \u00e9l\u00e9ments vides sont une mauvaise pratique.\r\n\r\n<h2  id=\"pseudo-element\">Pseudo-\u00e9l\u00e9ment</h2>\r\n\r\nPour \u00e9viter la redondance, la verbosit\u00e9 et les liens vides, ajoutez un pseudo-\u00e9l\u00e9ment \u00e0 un lien existant et positionnez le pseudo-contenu au-dessus du contenu de la carte, comme le montre l'[exemple 7](#exemple-7).\r\n\r\n**<span id=\"exemple-7\">Exemple&nbsp;7</span>&nbsp;&ndash;&nbsp;Composant de carte avec un pseudo-\u00e9l\u00e9ment \u00e0 l'int\u00e9rieur du lien couvrant la carte**\r\n\r\n```html\r\n<div class=\"card\">\r\n  <h3>Qu'est-ce que le Lorem Ipsum?</h3>\r\n  <p  class=\"author\">article \u00e9crit par <a href=\"https://bob-eponge.fr/robert-michu\">Robert Michu</a>\r\n  </p>\r\n  <img src=\"https://idinterdesign.ca/wp-content/uploads/2015/12/typographie-fonts-850x468.jpg\" alt=\"Exemple d'une image\">\r\n  <div>\r\n    <p> Le Lorem Ipsum est simplement du faux texte employ\u00e9 dans la composition et la mise en page avant impression. Le Lorem Ipsum est le faux texte standard de l'imprimerie depuis les ann\u00e9es 1500, quand un imprimeur anonyme assembla ensemble des morceaux de texte pour r\u00e9aliser un livre sp\u00e9cimen de polices de texte. Il n'a pas fait que survivre cinq si\u00e8cles, mais s'est aussi adapt\u00e9 \u00e0 la bureautique informatique, sans que son contenu n'en soit modifi\u00e9. Il a \u00e9t\u00e9 popularis\u00e9 dans les ann\u00e9es 1960 gr\u00e2ce \u00e0 la vente de feuilles Letraset contenant des passages du Lorem Ipsum, et, plus r\u00e9cemment, par son inclusion dans des applications de mise en page de texte, comme Aldus PageMaker. </p>\r\n  </div>\r\n  <p> Lire <a href=\"/article-\" class=\"readmore\">\u00ab Lorem Ipsum \u00bb</a>. </p>\r\n</div>\r\n\r\n<style>\r\n.card {\r\n  /* etc. */\r\n\tposition: relative;\r\n}\r\n  /* etc. */\r\n  .card .readmore::after {\r\n    content: \"\";\r\n    display: block;\r\n    inset: 0;\r\n    position: absolute;\r\n  }\r\n</style>\r\n```\r\nPour rendre des \u00e9l\u00e9ments sp\u00e9cifiques s\u00e9lectionnables, vous pouvez utiliser `z-index` pour les placer au-dessus du pseudo-\u00e9l\u00e9ment. N'oubliez pas qu'ils ne seront plus li\u00e9s lorsque vous ferz cela, comme le montre l'[exemple 8](#exemple-8).\r\n\r\n**<span id=\"exemple-8\">Exemple&nbsp;8</span>&nbsp;&ndash;&nbsp;D\u00e9placement des \u00e9l\u00e9ments s\u00e9lectionn\u00e9s vers le haut d'un calque**\r\n\r\n```css\r\n/* etc. */\r\n.card .author,\r\n.card > div{\r\n  z-index: 1;\r\n}\r\n```\r\n\r\nCette technique est ma pr\u00e9f\u00e9r\u00e9e pour la plupart des cas d'utilisation car elle ne n\u00e9cessite pas de balisage suppl\u00e9mentaire et elle r\u00e9pond \u00e0 la plupart des exigences de la liste. Le seul probl\u00e8me est que le pseudo-\u00e9l\u00e9ment recouvre tous les autres \u00e9l\u00e9ments, ce qui signifie que le texte n'est pas s\u00e9lectionnable. Vous pouvez d\u00e9placer les \u00e9l\u00e9ments au-dessus de la pseudocouche en appliquant un plus \u00e9lev\u00e9 `z-index`, ce qui les rend s\u00e9lectionnables (l'[exemple 8](#exemple-8)).\r\n\r\n### Les avantages\r\n\r\n- Il n'y a pas d'annonce verbale lorsque vous utilisez la touche `Tab` avec un lecteur d'\u00e9cran.\r\n- Toute la carte est cliquable.\r\n- Il n'y a que deux tabulations.\r\n- Les param\u00e8tres par d\u00e9faut du navigateur, comme le clic droit ou le clic du milieu, fonctionnent comme pr\u00e9vu.\r\n- La techinque prend en charge plusieurs liens diff\u00e9rents.\r\n- Il est accessible par la voix.\r\n- Les autres \u00e9l\u00e9ments de la carte sont accessibles.\r\n\r\n### Les inconv\u00e9nients\r\n\r\n- Le texte n'est pas s\u00e9lectionnable, sauf si vous utilisez un `z-index` sur les autres \u00e9l\u00e9m\u00e9nts.\r\n- Si des parties de la carte utilisnet un `z-index` avec des \u00e9l\u00e9ments interactifs comme des liens, il est possible que l'utilisateur se trompe et clique sur la carte au lieu du lien.\r\n\r\n## Javascript\r\n\r\nLe balisage est le m\u00eame que dans le composant de base de l'[exemple 1](#exemple-1) et vous utilisez JavaScript pour rendre toute la carte cliquable. J'ai choisi deux solutions diff\u00e9rentes pour vous montrer comment vous pouvez y parvenir.\r\n\r\nDans cet [exemple 9](#exemple-9), vous r\u00e9cup\u00e9rez la date sur `mousedown` et `mouseup`. Au lever de la souris, vous soustrayez le premier temps du second. Si le r\u00e9sultat est inf\u00e9rieur \u00e0 200 ms, il est probable que l'utilisateur n'a pas s\u00e9lectionn\u00e9 le texte mais qu'il a simplement cliqu\u00e9 dessus ; et s'il est sup\u00e9rieur, il est probablement en train de le s\u00e9lectionner.\r\n\r\n\r\n**<span id=\"exemple-9\">Exemple&nbsp;9</span>&nbsp;&ndash;&nbsp;Utilisation d'un seuil de temporisation pour d\u00e9tecter si un texte a \u00e9t\u00e9 cliqu\u00e9 ou s\u00e9lectionn\u00e9.**\r\n\r\n```Javascript\r\nconst card = document.querySelector(\".card\");\r\nlet down,\r\n    up,\r\n    link = card.querySelector(\".readmore\");\r\n\r\ncard.addEventListener('mousedown', e => down = +new Date());\r\ncard.addEventListener('mouseup', e =>{\r\n    up = +new Date();\r\n    if (up - down < 200) {\r\n        link.click();\r\n    }\r\n});\r\n```\r\nVous avez la possibilit\u00e9 de d\u00e9tecter si le texte a \u00e9t\u00e9 s\u00e9lectionn\u00e9 via <a href=\"https://developer.mozilla.org/fr/docs/Web/API/Window/getSelection\" target=\"_blank\">window.getSelection</a>. Dans l'[exemple 10](#exemple-10), je vous montre comment y parvenir.\r\n\r\n**<span id=\"exemple-10\">Exemple&nbsp;10</span>&nbsp;&ndash;&nbsp;Utilisation de l'API de s\u00e9lection pour d\u00e9tecter si un texte a \u00e9t\u00e9 cliqu\u00e9 ou s\u00e9lectionn\u00e9**\r\n\r\n```Javascript\r\nconst card = document.querySelector(\".card\");\r\nconst link = card.querySelector(\".readmore\");\r\n\r\ncard.addEventListener(\"click\", (e) => {\r\n  const noTextSelected = !window.getSelection().toString();\r\n  if (noTextSelected) {\r\n    link.click();\r\n  }\r\n});\r\n```\r\n\r\nLe plus gros inconv\u00e9nient de cette technique est que les comportements par d\u00e9faut des navigateurs, comme le clic droit ou le clic moyen ou les aper\u00e7us d'URL au survol, ne fonctionnent plus.\r\n\r\n### Les avantages\r\n\r\n- Il n'y a pas d'annonce verbale lorsque vous utilisez la touche `Tab` avec un lecteur d'\u00e9cran.\r\n- Toute la carte peut \u00eatre cliquable.\r\n- Il n'y a que deux tabulation.\r\n- La solution prend en charge plusieurs liens diff\u00e9rents.\r\n- Le HTML serait valide m\u00eame s'il y avait des liens suppl\u00e9mentaires.\r\n- C'est accessible par la voix.\r\n- Les autres \u00e9l\u00e9ments de la carte sont accessibles.\r\n- Vous n'avez pas besoin d'un \u00e9l\u00e9ment HTML suppl\u00e9mentaire.\r\n- Le texte peut \u00eatre s\u00e9lectionn\u00e9.\r\n\r\n### Les inconv\u00e9nients\r\n\r\n- Le menu contextuel et les autres options par d\u00e9faut du navigateur ne fonctionnent que sur les liens directement.\r\n- Il s'agit d'une technique JavaScript *magique*. L'utilisation de bidouilles en JavaScript est astucieuses pour contourner le comportement par d\u00e9faut du navigateur sujette \u00e0 des erreurs.",
      "created": "2025-06-25T23:48:22.732182",
      "updated": "2025-07-01T18:33:50.166946",
      "meta_description": "5 techniques pour \u00e9tendre la zone de clic de vos \u00e9l\u00e9ments HTML. Analysez avantages, inconv\u00e9nients, et impacts sur l'accessibilit\u00e9, le SEO et l'UX.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 28,
      "title": "Ex\u00e9cuter des actions : choisissez le bon \u00e9l\u00e9ment",
      "slug": "executer-des-actions-choisissez-le-bon-element",
      "body": "Les cinq prochains articles se concentrent sur un seul \u00e9l\u00e9ment HTML, le `<button>`. Il y a deux raisons pour lesquelles j'accorde autant de place aux boutons.\r\n\r\nTout d'abord, le bouton est un \u00e9l\u00e9ment commun ; vous le trouverez sur la plupart des pages : dans un formulaire de contact ou d'inscription \u00e0 une newsletter, pour basculer une navigation mobile ou pour fermer une bo\u00eete de dialogue contextuelle.\r\n\r\nDeuxi\u00e8mement, bien que les d\u00e9veloppeurs de sites Web aient souvent besoin de boutons, ils ne parviennent pas \u00e0 les mettre en place correctement. Cette affirmation n'est pas seulement bas\u00e9e sur des ann\u00e9es d'exp\u00e9rience de v\u00e9rification des sites que d'autres ont construits ; il y a aussi <a href=\"https://webaim.org/projects/million/#wcag\" target=\"_blank\">des donn\u00e9es qui le confirment</a>.\r\n\r\nC'est pourquoi cette s\u00e9rie d'articles se concentrent sur les exigences les plus importantes de l'\u00e9l\u00e9ment bouton et sur la fa\u00e7on de les remplir.\r\n\r\nSi un bouton ne r\u00e9pond pas aux exigences de base, vous risquez d'exclure un ou plusieurs groupes d'utilisateurs qui ne pourront pas y acc\u00e9der ou en comprendre l'utilit\u00e9.\r\n\r\nPlus bas, je vous fournis plus de d\u00e9tails. Les crit\u00e8res d'accessibilit\u00e9 essentiels pour un bouton sont les suivants :\r\n\r\n- Il doit transmettre son r\u00f4le de bouton s\u00e9mantique de mani\u00e8re programmatique.\r\n- Il a un nom concis et simple d'acc\u00e8s (texte visible ou alternative textuelle).\r\n- Il communique son \u00e9tat (press\u00e9, d\u00e9ploy\u00e9, etc.) si n\u00e9cessaire.\r\n- Il est reconnaissable en tant que bouton.\r\n- Ses couleurs doivent \u00eatre suffisamment contrast\u00e9es.\r\n- Il doit \u00eatre focalisable et permettre l'activation par le biais d'\u00e9v\u00e9nements de type clic, toucher et touche.\r\n\r\nUtilisez l'\u00e9l\u00e9ment bouton natif et les attributs HTML et ARIA pour ajuster ses caract\u00e9ristiques en fonction des besoins, comme le montrent les exemples [1](#exemple-1), [2](#exemple-2) et [3](#exemple-3).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un bouton de soumission natif utilis\u00e9 dans un formulaire pour soumettre des donn\u00e9es.**\r\n\r\n```html\r\n<form method=\"post\">\r\n  <label for=\"email\">Adresse email</label>\r\n  <input type=\"email\" id=\"email\" name=\"email\">\r\n\r\n  <button type=\"submit\">s'inscire</button>\r\n</form>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Un bouton qui ex\u00e9cute du JavaScript**\r\n\r\n```html\r\n<button type=\"button\" onclick=\"print()\">Imprimer</button>\r\n```\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Un bouton communiquant son \u00e9tat enfonc\u00e9**\r\n\r\n```html\r\n<button type=\"button\" aria-pressed=\"true\">Volume 0 (sourdine)</button>\r\n```\r\n\r\nL'\u00e9l\u00e9ment bouton a deux principaux cas d'utilisation  : la soumission d'un formulaire et l'ex\u00e9cution de JavaScript lorsqu'un utilisateur interagit avec lui.\r\n\r\nUn bouton devient un bouton de soumission lorsque vous d\u00e9finissez son type sur soumission ou dans le contexte d'un formulaire, comme le montre l'[exemple 1](#exemple-1). Vous utilisez g\u00e9n\u00e9ralement un bouton de soumission pour envoyer les donn\u00e9es d'un formulaire \u00e0 un serveur.\r\n\r\nSi vous d\u00e9finissez le type sur bouton, le bouton ne fait rien. Vous faites cela si vous souhaitez ex\u00e9cuter du JavaScript lorsque l'utilisateur active le bouton. Par exemple, lorsque vous cliques sur le bouton de l'[exemple 2](#exemple-2), il ouvre la bo\u00eete de dialogue d'impression de votre navigateur. D'autres utilisations courantes consistent \u00e0 basculer la visibilit\u00e9 d'autres \u00e9l\u00e9ments, \u00e0 ouvrir des bo\u00eetes de dialogue modales et \u00e0 ex\u00e9cuter d'autres fonctions JavaScript.\r\n\r\nSelon les <a href=\"https://www.w3.org/WAI/standards-guidelines/wcag/\" target=\"_blank\">WCAG</a>, un bouton doit r\u00e9pondre \u00e0 au moins six exigences sp\u00e9cifiques pour \u00eatre accessible et offrir un excellent UX. Examinons chacune d'entre elles tour \u00e0 tour :\r\n\r\n- **Il doit transmettre son r\u00f4le de bouton s\u00e9mantique de mani\u00e8re programmatique.** <br>\r\nVos boutons <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html\" target=\"_blank\">doivent transmettre leurs r\u00f4les s\u00e9mantiques</a>. L'option la plus s\u00fbre et la plus fiable est d'utiliser l'\u00e9l\u00e9ment `<button>`, car il a un r\u00f4le implicite `button`. Un lecteur d'\u00e9cran annoncera le r\u00f4le du bouton \u00e0 c\u00f4t\u00e9 de son nom ; par exemple, \"Imprimer, bouton\".\r\n- **Il a un nom accessible (texte visible ou texte alternatif).**<br>\r\nQu'un bouton contienne ou non du texte, il <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html\" target=\"_blank\">doit avoir un nom accessible</a>. Il n'y a pas d'exception \u00e0 cette r\u00e8gle. Si vous n'\u00e9tiquettez pas les boutons, les utilisateurs de lecteurs d'\u00e9cran et les utilisateurs vocaux ne sauront pas quoi en faire. Il existe diff\u00e9rentes fa\u00e7ons d'\u00e9tiqueter les boutons. La meilleure chose \u00e0 faire dans la plupart des cas est d'inclure un texte visible par tous.\r\n- **Il communique son \u00e9tat (press\u00e9, d\u00e9ploy\u00e9, etc.) si n\u00e9cessaire.**<br>\r\nUn bouton peut avoir diff\u00e9rents \u00e9tats ou contr\u00f4ler l'\u00e9tat d'un autre \u00e9l\u00e9ment : Si c'est le cas, il doit <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/name-role-value.html\" target=\"_blank\">indiquer son \u00e9tat ou sa relation</a> \u00e0 l'aide d'attributs ARIA. Le bouton de l'[exemple 3](#exemple-3) indique que certains m\u00e9dias sont en sourdine.\r\n- **Il est reconnaissable en tant que bouton.**<br>\r\nLes utilisateurs passent la plupart de leur temps sur d'autres sites, ce qui signifie que les utilisateurs pr\u00e9f\u00e8rent que votre site fonctionne de la m\u00eame mani\u00e8re que tous les autres sites qu'ils connaissent d\u00e9j\u00e0. Pour les boutons, cela signifie qu'ils doivent r\u00e9pondre aux attentes visuelles de l'utilisateur concernant un bouton. Si un bouton ressemble \u00e0 un bouton, il est plus facile pour les utilisateurs, en particulier ceux qui ont un handicap cognitif, de comprendre son utilit\u00e9. Cela s'applique \u00e9galement \u00e0 son nom accessible. Si des fonctions identiques ont des noms accessibles diff\u00e9rents sur des pages diff\u00e9rentes, le site sera plus difficile \u00e0 utiliser.\r\n- **Ses couleurs doivent \u00eatre suffisamment contrast\u00e9es.**<br>\r\nJuste comme la plupart du texte ou des images de texte sur une page web, les boutons doivent \u00e9galement r\u00e9pondre \u00e0 <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html\" target=\"_blank\">des exigences minimales en mati\u00e8re de contraste</a>. La couleur du texte d'un bouton doit avoir <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html#dfn-contrast-ratio\" target=\"_blank\">un rapport de contraste</a> d'au moins 4,5:1 pour un texte normal ou 3:1 pour un texte <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html#dfn-large-scale\" target=\"_blank\">\u00e0 grande \u00e9chelle</a> ou en gras. Les autres couleurs utilis\u00e9es dans le bouton, comme la couleur d'arri\u00e8re-plan ou les couleurs des indicateurs de mise au point, doivent \u00e9galement respecter <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html\" target=\"_blank\">les exigences en mati\u00e8re de rapport de contraste minimum</a> par rapport aux couleurs adjacentes. En d'autres termes, la couleur d'arri\u00e8re-plan du bouton ou le contour d'un indicateur de mise au point ou d'une bordure doit \u00e9galement pr\u00e9senter un rapport de contraste d'au moins 3:1 par rapport \u00e0 l'arri\u00e8re-plan, qui est g\u00e9n\u00e9ralement un composant parent ou la page elle-m\u00eame. Les contr\u00f4les \u00e0 faible contraste sont plus difficiles \u00e0 percevoir et peuvent \u00eatre compl\u00e8tement manqu\u00e9s par les personnes malvoyantes.\r\n- **Le site doit \u00eatre accessible par des onglets et permettre une activation par le biais d'un clic, d'un toucher ou d'une touche.**<br>\r\nUn bouton est un \u00e9l\u00e9ment interactif, ce qui signifie que si vous pouvez cliquer dessus, vous devez aussi pouvoir <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html\" target=\"_blank\">effectuer la m\u00eame action au clavier</a> en appuyant sur `Enter` ou `Space`. Pour cela, il doit \u00eatre tabbable (accessible via la touche `Tab` ), ce qui est vrai par d\u00e9faut pour l'\u00e9l\u00e9ment `<button>`.\r\n\r\nLa plupart des sites Internet contiennent des boutons. Essayez de suivre les meilleures pratiques d\u00e9crites dans cette s\u00e9rie d'article sur ce sujet et \u00e9vitez les solutions alternatives courantes qui ne r\u00e9pondent pas aux exigences, \u00e9num\u00e9r\u00e9es dans l'[exemple 4](#exemple-4). Il est possible de recr\u00e9er la fonctionnalit\u00e9 par d\u00e9faut du bouton natif en utilisant un \u00e9l\u00e9ment diff\u00e9rent, comme le `<div>`, mais cela n'en vaut g\u00e9n\u00e9ralement pas la peine, car le `<button>` est dot\u00e9 de la plupart des fonctions d\u00e9crites dans cet article.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Mauvaises pratiques : Alternatives courantes aux boutons inaccessibles que tu devrais \u00e9viter**\r\n\r\n```html\r\n<!-- Div avec un click event -->\r\n<div onclick=\"[JS function]\">\r\n  lecture video\r\n</div>\r\n\r\n<!-- Impossible de mettre le focus -->\r\n<div role=\"button\" onclick=\"[JS function]\">\r\n  Lecture vid\u00e9o\r\n</div>\r\n\r\n<!-- lien avec click event -->\r\n<a href=\"javascript: void(0)\" onclick=\"[JS function]\">\r\n  Menu\r\n</a>\r\n\r\n<!-- lien avec click event -->\r\n<a href=\"#\" onclick=\"[JS function]\">\r\n  Menu\r\n</a>\r\n```\r\n\r\n\r\n\r\n",
      "created": "2025-06-30T09:08:51.071167",
      "updated": "2025-06-30T10:30:47.878762",
      "meta_description": "Apprenez \u00e0 cr\u00e9er des boutons HTML accessibles, compr\u00e9hensibles et UX-friendly en respectant les bonnes pratiques et les normes WCAG essentielles.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 29,
      "title": "Ex\u00e9cution des actions : labelliser clairement les boutons",
      "slug": "execution-des-actions-labelliser-clairement-les-boutons",
      "body": "Un bouton peut prendre diff\u00e9rentes formes. Le contenu envelopp\u00e9 dans le bouton peut \u00eatre du texte, une ic\u00f4ne ou les deux. Lorsque vous ne donnez pas de nom \u00e0 un bouton, m\u00eame si la conception le pr\u00e9voit, les utilisateurs de lecteurs d'\u00e9cran peuvent \u00eatre incapables de savoir \u00e0 quoi il sert. \r\n\r\nTout d'abord, si le bouton contient du texte, ce texte sert d'\u00e9tiquette, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un bouton dont le nom accessible provient de son contenu**\r\n\r\n```html\r\n<button type=\"button\">T\u00e9l\u00e9charger le rapport en pdf (130kio)</button>\r\n```\r\n\r\nSi le bouton contient une image , l'attribut `alt` de l'image doit fournir l'\u00e9tiquette, comme dans l'[exemple 2](#exemple-2).\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Un bouton dont le nom accessible provient de l'attribut `alt` de l'image**\r\n\r\n```html\r\n<button type=\"button\">\r\n    <img src=\"/images/download.svg\" alt=\"T\u00e9l\u00e9charger le rapport en pdf (130kio)\" width=\"26\">\r\n</button>\r\n```\r\n\r\nAu lieu de `img`, vous pouvez aussi utiliser et un <a href=\"https://developer.mozilla.org/fr/docs/Web/SVG\" target=\"_blank\">SVG</a> avec un \u00e9l\u00e9ment `<title>` ou `<desc>`. Pour la prise en charge inter-navigateurs, utilisez `aria-labelledby` sur le SVG et cr\u00e9ez une r\u00e9f\u00e9rence au titre, comme le montre l'[exemple 3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Un bouton dont le nom accessible provient du SVG**\r\n\r\n```html\r\n<button type=\"button\">\r\n  <svg viewBox=\"0 0 39 44\" aria-labelledby=\"title\" role=\"img\" width=\"26\">\r\n    <title id=\"title\">T\u00e9l\u00e9charger le rapport en pdf (130kio)</title>\r\n    <path d=\"M19.5 36.5 1.6 26.1v-3.6l16.3 9.4V1.5h3.2v30.4l16.3-9.4v3.6z\"/>\r\n    <path d=\"M1 41.5h37\" style=\"stroke:#000;stroke-width:3;\"/>\r\n  </svg>\r\n</button>\r\n```\r\nVous pouvez \u00e9galement retirer le graphique de l'arbre d'accessibilit\u00e9 en d\u00e9finissant un attribut `alt` vide sur le img ou `aria-hidden=\"true\"` du SVG. Si vous faites cela, le bouton a toujours besoin d'une alternative textuelle, que vous pouvez fournir avec un texte visuellement cach\u00e9 (voir [exemple 4](#exemple-4)), `aria-labelledby`, ou `aria-label` (voir [exemple 5](#exemple-5)).\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Le texte est visuellement cach\u00e9**\r\n\r\n```html\r\n<button type=\"button\">\r\n  <span class=\"visually-hidden\">T\u00e9l\u00e9charger le rapport en pdf (130kio)</span>\r\n  <img src=\"/images/download.svg\" alt=\"\" width=\"26\">\r\n</button>\r\n\r\n<!-- ou -->\r\n\r\n<button type=\"button\">\r\n  <span class=\"visually-hidden\">T\u00e9l\u00e9charger le rapport en pdf (130kio)</span>\r\n  <svg viewBox=\"0 0 39 44\" aria-hidden=\"true\" width=\"26\">\r\n    <path d=\"M19.5 36.5 1.6 26.1v-3.6l16.3 9.4V1.5h3.2v30.4l16.3-9.4v3.6z\"/>\r\n    <path d=\"M1 41.5h37\" style=\"stroke:#000;stroke-width:3;\"/>\r\n  </svg>\r\n</button>\r\n\r\n<style>\r\n  .visually-hidden {\r\n    clip-path: inset(50%);\r\n    height: 1px;\r\n    overflow: hidden;\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    width: 1px;\r\n  }\r\n</style>\r\n```\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;L'attribut `aria-label` d\u00e9signe le bouton**\r\n\r\n```html\r\n<button type=\"button\" aria-label=\"Sauvegarder\">\r\n  <svg aria-hidden=\"true\" viewBox=\"0 0 39 44\" width=\"26\">\r\n    <path d=\"M19.5 36.5 1.6 26.1v-3.6l16.3 9.4V1.5h3.2v30.4l16.3-9.4v3.6z\"/>\r\n    <path d=\"M1 41.5h37\" style=\"stroke:#000;stroke-width:3;\"/>\r\n  </svg>\r\n</button>\r\n```\r\n\r\nLa suppression des graphiques imbriqu\u00e9s dans l'arbre d'accessibilit\u00e9 est \u00e9galement utile lorsque vous combinez une ic\u00f4ne avec du texte, car le texte \u00e9limine le besoin d'une \u00e9tiquette suppl\u00e9mentaire pour l'ic\u00f4ne, comme le montre l'[exemple 6](#exemple-6).\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Combinaison de texte et d'ic\u00f4ne**\r\n\r\n```html\r\n<button type=\"button\">\r\n  Sauvegarder\r\n  <img src=\"/images/download.svg\" alt=\"\" width=\"26\">\r\n</button>\r\n\r\n<button type=\"button\">\r\n  Sauvegarder\r\n  <svg aria-hidden=\"true\" viewBox=\"0 0 39 44\" width=\"26\">\r\n    <path d=\"M19.5 36.5 1.6 26.1v-3.6l16.3 9.4V1.5h3.2v30.4l16.3-9.4v3.6z\"/>\r\n    <path d=\"M1 41.5h37\" style=\"stroke:#000;stroke-width:3;\"/>\r\n  </svg>\r\n</button>\r\n```\r\n\r\nSelon le rapport <a href=\"https://webaim.org/projects/million/\" target=\"_blank\">WebAIM Million 2024</a>, qui est le r\u00e9sultat d'une \u00e9valuation annuelle automatis\u00e9e de l'accessibilit\u00e9 du top 1 million de sites web, 28,2 % des sites web test\u00e9s contenaient des boutons vides, ce qui en fait l'un des cinq principaux probl\u00e8mes relev\u00e9s par l'\u00e9tude. Un bouton vide est soit un bouton sans enfant, soit un bouton qui contient des graphiques non \u00e9tiquet\u00e9s et sans aucune autre source que l'\u00e9tiquette.\r\n\r\nIl existe diff\u00e9rentes m\u00e9thodes pour \u00e9tiqueter les boutons. Celle que vous choisissez d\u00e9pend des besoins. Lorsque vous avez plusieurs options, je vous recommande de suivre cet ordre de priorit\u00e9 :\r\n\r\n1. Techniques HTML natives\r\n2. `aria-labelledby` en pointant le texte visible existant\r\n3. Contenu visiblement cach\u00e9\r\n4. `aria-label`\r\n\r\nSi le bouton ne contient que du texte ou une combinaison de texte et d'ic\u00f4nes, placez l'\u00e9tiquette sous forme de texte entre la balise de d\u00e9but et la balise de fin de l'\u00e9l\u00e9ment, comme le montre l'[exemple 1](#exemple-1). S'il y a une ic\u00f4ne qui ne fournit pas d'informations suppl\u00e9mentaires, supprimez-la de l'arbre d'accessibilit\u00e9 pour \u00e9viter la redondance (voir l'[exemple 6](#exemple-6)).\r\n\r\nS'il n'y a pas de texte visible mais seulement une image ou une ic\u00f4ne, son texte alternatif peut servir de nom au bouton (voir les exemples [2](#exemple-2) et [3](#exemple-3)). Ce type d'images est appel\u00e9 images fonctionnelles. Leur texte alternatif doit d\u00e9crire non pas ce qu'elles montrent, mais leur but. Vous pouvez aussi utiliser , un texte visuellement cach\u00e9([exemple 4](#exemple-4)), `aria-labelledby` ou l'attribut `aria-label` ([exemple 5](#exemple-5)).\r\n\r\nLes noms accessibles manquants sont probablement le probl\u00e8me le plus courant, mais les noms erron\u00e9s peuvent aussi \u00eatre probl\u00e9matiques. Parfois, ils sont dans la mauvaise langue naturelle, comme l'anglais sur un site fran\u00e7ais. Parfois, ils contiennent des variables non r\u00e9solues ou du texte de remplacement. Ces probl\u00e8mes surviennent g\u00e9n\u00e9ralement avec les boutons \u00e0 ic\u00f4ne seulement. Vous pouvez facilement manquer le texte ou les \u00e9tiquettes visuellement cach\u00e9s fournis par des attributs tels que `aria-label` puisqu'ils ne sont visibles que dans le code, et non dans l'interface utilisateur rendue. Vous devrez privil\u00e9gier les boutons dont le texte est visible car ils sont universellement compr\u00e9hensibles et moins sujets aux erreurs.\r\n\r\nL'\u00e9tiquette doit \u00eatre informative et concise. N'\u00e9tiquettez pas un bouton \u00ab Cliquer ici pour ouvrir ou fermer la navigation \u00bb. \u00ab Navigation \u00bb est suffisant.\r\n\r\n\r\n\r\n\r\n\r\n",
      "created": "2025-07-02T04:14:12.951616",
      "updated": "2025-07-02T04:57:51.939940",
      "meta_description": "Apprenez \u00e0 labelliser efficacement vos boutons pour garantir l\u2019accessibilit\u00e9 et une exp\u00e9rience utilisateur optimale sur le web.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 30,
      "title": "Ex\u00e9cuter des actions : supprimer les styles de boutons par d\u00e9faut",
      "slug": "executer-des-actions-supprimer-les-styles-de-boutons-par-defaut",
      "body": "M\u00eame lorsqu'un bouton ne ressemble pas \u00e0 un bouton, il doit quand m\u00eame r\u00e9pondre \u00e0 la plupart des exigences d\u00e9crites dans l'article : \u00ab&nbsp;[choisissez le bon \u00e9l\u00e9ment](/articles/executer-des-actions-choisissez-le-bon-element-28.html)&nbsp;\u00bb. Si ce n'est pas le cas, il risque de ne pas \u00eatre accessible aux utilisateurs de claviers et de lecteurs d'\u00e9cran. Si vous choisissez un \u00e9l\u00e9ment g\u00e9n\u00e9rique avec moins de styles par d\u00e9faut au lieu de l'\u00e9l\u00e9ment `<button>`, les utilisateurs risquent de ne pas pouvoir acc\u00e9der au faux bouton ou de ne pas comprendre son utilit\u00e9.\r\n\r\nSi vous souhaitez utiliser un bouton mais que vous ne voulez pas qu'il ressemble \u00e0 un bouton, vous devez toujours utiliser l'\u00e9l\u00e9ment `<button>` mais supprimer les styles de bouton par d\u00e9faut. Le CSS propose trois strat\u00e9gies efficaces pour supprimer les styles de bouton par d\u00e9faut, comme le montrent les exemples [1](#exemple-1), [2](#exemple-2) et [3](#exemple-3).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Suppression ou r\u00e9initialisation manuelle des propri\u00e9t\u00e9s**\r\n\r\n```css\r\nbutton {\r\n  background: none;\r\n  border: 0.1em solid transparent;\r\n  font: inherit;\r\n  padding: 0;\r\n}\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;R\u00e9initialisation de toutes les propri\u00e9t\u00e9s du bouton \u00e0 leur valeur initiale**\r\n\r\n```css\r\nbutton {\r\n  all: initial;\r\n}\r\n\r\nbutton:focus-visible {\r\n  outline: 0.1em solid;\r\n  outline-offset: 0.1em;\r\n}\r\n```\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;R\u00e9initialisation de toutes les propri\u00e9t\u00e9s du bouton \u00e0 leur valeur initiale, \u00e0 l'exception des propri\u00e9t\u00e9s h\u00e9ritables.**\r\n\r\n```css\r\nbutton {\r\n  all: unset;\r\n}\r\n\r\nbutton:focus-visible {\r\n  outline: 0.1em solid;\r\n  outline-offset: 0.1em;\r\n}\r\n```\r\n\r\nLes boutons des syst\u00e8mes d'exploitation et des pages Web ont une forme et un style particuliers par d\u00e9faut : un rectangle avec une bordure, une couleur d'arri\u00e8re-plan et un peu de remplissage entre le texte et la bordure. Lorsque vous stylisez une page, vous modifiez les valeurs par d\u00e9faut et vous ajoutez \u00e9ventuellement des propri\u00e9t\u00e9s, comme le montre l'[exemple 4](#exemple-4). Vous pouvez aussi avoir des versions de ce bouton qui varient en taille, en couleur et en forme.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Styles personnalis\u00e9s pour les boutons**\r\n\r\n```css\r\nbutton {\r\n  --color: 0.47;\r\n\r\n  background: oklch(var(--color) 0.05 195.6);\r\n  color: #fff;\r\n  font-size: 1.2rem;\r\n  font-family: inherit;\r\n  padding: 0.4em 0.9em;\r\n  border-radius: 3px;\r\n  border: 0;\r\n  min-inline-size: 7rem;\r\n}\r\n\r\nbutton:is(:hover, :focus-visible) {\r\n  --color: 0.27;\r\n}\r\n```\r\n\r\nCertains boutons ne ressemblent pas \u00e0 des boutons car ils ne sont constitu\u00e9s que d'une ic\u00f4ne. La fa\u00e7on dont vous implantez un tel bouton est cruciale. L'un des probl\u00e8mes d'accessibilit\u00e9 les plus courants sur la plupart des sites Web que je v\u00e9rifie concerne les faux boutons : de nombreux d\u00e9veloppeurs partent du principe que si un contr\u00f4le ne ressemble pas \u00e0 un bouton, il n'a pas besoin d'\u00eatre un \u00e9l\u00e9ment `<button>`. Leur raisonnement est le suivant : s'il n'y a pas de style de bouton, il n'est pas n\u00e9cessaire de les supprimer. Il en r\u00e9sulte souvent un code comme celui de l'[exemple 5](#exemple-5), qui semble inoffensif mais qui fait une diff\u00e9rence consid\u00e9rable en mati\u00e8re d'accessibilit\u00e9.\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Un faux bouton `div`**\r\n\r\n```css\r\n<div class=\"button\" aria-label=\"Navigation\">\r\n  <svg width=\"24\" height=\"24\" aria-hidden=\"true\">\r\n    <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\">\r\n  </svg>\r\n</div>\r\n\r\n<script>\r\nconst button = document.querySelector(\".button\");\r\nbutton.addEventListener(\"click\", (e) => {\r\n  console.log(\"active la navigation\");\r\n});\r\n</script>\r\n```\r\n\r\nCe \u00ab bouton \u00bb pose plusieurs probl\u00e8mes :\r\n\r\n- Il n'est pas possible de l'utiliser au clavier.\r\n- M\u00eame s'il \u00e9tait focalisable, l'activation via Entr\u00e9e ou Espace ne fonctionnerait pas.\r\n- Les lecteurs d'\u00e9cran ne l'annoncent pas comme un bouton.\r\n- Certains lecteurs d'\u00e9cran ne l'annoncent pas du tout.\r\n- Vous ne devez pas utiliser `aria-label` sur les \u00e9l\u00e9ments g\u00e9n\u00e9riques parce qu'il n'est pas valide de les nommer.\r\n\r\n**Remarque** : Dans l'[exemple 5](#exemple-5), vous avez remarqu\u00e9 l\u2019utilisation de l\u2019\u00e9v\u00e9nement `click`. Le probl\u00e8me de cet \u00e9v\u00e9nement, c\u2019est qu\u2019il ne fonctionne pas toujours correctement sur mobile ou tablette. Parfois, cela peut m\u00eame entra\u00eener un manque de performance. En effet, la souris n\u2019existe pas sur ces types de supports.\r\n\r\n\u00c0 noter que l\u2019\u00e9v\u00e9nement `click` est d\u00e9clench\u00e9 uniquement apr\u00e8s une s\u00e9quence compl\u00e8te `mousedown` suivie de `mouseup` sur le m\u00eame \u00e9l\u00e9ment. Sur les appareils mobiles, cette s\u00e9quence est simul\u00e9e avec un l\u00e9ger d\u00e9lai (g\u00e9n\u00e9ralement autour de 300 ms), ce qui peut provoquer des lenteurs ou des comportements inattendus.\r\n\r\nLa solution, pour les appareils tactiles, consiste \u00e0 utiliser les \u00e9v\u00e9nements `pointerdown` ou `pointerup`. Cependant, en utilisant l\u2019un de ces \u00e9v\u00e9nements, sur un ordinateur de bureau ou avec un lecteur d\u2019\u00e9cran, vous perdez la possibilit\u00e9 d\u2019utiliser le comportement clavier par d\u00e9faut associ\u00e9 aux touches `Enter` ou `Espace`. Pire encore, l\u2019\u00e9v\u00e9nement `pointerdown` intervient avant que l\u2019\u00e9l\u00e9ment n\u2019ait re\u00e7u le focus, ce qui emp\u00eache les styles `:focus` de s\u2019appliquer correctement et nuit fortement \u00e0 l\u2019accessibilit\u00e9 et \u00e0 la navigation clavier.\r\n\r\nL\u2019astuce consiste donc \u00e0 d\u00e9tecter le type d\u2019appareil et \u00e0 appliquer l\u2019\u00e9v\u00e9nement le plus adapt\u00e9. Dans le [tableau 1](#tableau-1), je r\u00e9capitule les comportements par d\u00e9faut associ\u00e9s \u00e0 chaque interaction.\r\n\r\n<table id=\"tableau-1\">\r\n    <caption>Accessibilit\u00e9 et compatibilit\u00e9 clavier des \u00e9v\u00e9nements <code>click</code> et <code>pointerdown</code></caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Interaction</th>\r\n            <th scope=\"col\"><code>pointerdown</code></th>\r\n            <th scope=\"col\"><code>click</code></th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <th scope=\"row\">Souris (clic bas)</th>\r\n            <td>fonctionne</td>\r\n            <td>fonctionne (si rel\u00e2ch\u00e9 sur le m\u00eame \u00e9l\u00e9ment)</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Clavier (Enter)</th>\r\n            <td>ne fonctionne pas</td>\r\n            <td>fonctionne</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Clavier (Espace)</th>\r\n            <td>ne fonctionne pas</td>\r\n            <td>fonctionne</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Accessibilit\u00e9</th>\r\n            <td>ne fonctionne pas</td>\r\n            <td>fonctionne</td>\r\n        </tr>\r\n        <tr>\r\n            <th scope=\"row\">Focus automatique</th>\r\n            <td>ne fonctionne pas (doit \u00eatre forc\u00e9)</td>\r\n            <td>fonctionne</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nLe fait que le \u00ab bouton \u00bb de l'[exemple 5](#exemple-5) ne soit pas focalisable affecte les utilisateurs de clavier et de lecteurs d'\u00e9cran, mais ces derniers peuvent utiliser le curseur virtuel pour acc\u00e9der au faux bouton. Si un r\u00e9cepteur d'\u00e9v\u00e9nement de clic est attach\u00e9 au div, certains lecteurs d'\u00e9cran indiqueront que vous ppouvez cliquer dessus. N\u00e9anmoins, si vous regardez le [tableau 2](#table-2), vous ppouvez constater que l'utilisation d'un `div` ou de tout autre \u00e9l\u00e9ment non interactif n'est pas fiable. Si vous avez besoin de supprimer les styles des boutons par d\u00e9faut, s'en tenir \u00e0 l'\u00e9l\u00e9ment `<button>` et r\u00e9initialiser les styles \u00e0 l'aide de CSS est le choix le plus s\u00fbr.\r\n\r\n<table id=\"tableau-2\">\r\n    <caption>Test du lecteur d'\u00e9cran : accessibilit\u00e9 d'un bouton <code>div</code></caption>\r\n    <thead>\r\n        <tr>\r\n            <th scope=\"col\">Lecteur d'\u00e9cran</th>\r\n            <th scope=\"col\">Navigateur</th>\r\n            <th scope=\"col\">Narration pour lecteur d'\u00e9cran</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td>NVDA</td>\r\n            <td>Firefox</td>\r\n            <td>Navigation</td>\r\n        </tr>\r\n        <tr>\r\n            <td>JAWS</td>\r\n            <td>Chrome</td>\r\n            <td>N/A</td>\r\n        </tr>\r\n        <tr>\r\n            <td>Narrateur</td>\r\n            <td>Bord</td>\r\n            <td>N/A</td>\r\n        </tr>\r\n        <tr>\r\n            <td>TalkBack</td>\r\n            <td>Chrome</td>\r\n            <td>Navigation</td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver macOS</td>\r\n            <td>Safari</td>\r\n            <td>Navigation, groupe vide</td>\r\n        </tr>\r\n        <tr>\r\n            <td>VoiceOver iOS</td>\r\n            <td>Safari</td>\r\n            <td>N/A</td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n\r\nIl ne serait pas viable d'utiliser un \u00e9l\u00e9ment g\u00e9n\u00e9rique \u00e0 la place d'un bouton ou de mettre des \u00e9couteurs d'\u00e9v\u00e9nements sur des \u00e9l\u00e9ments non interactifs. Vous avez besoin d'un \u00e9l\u00e9ment interactif si l'utilisateur peut interagir avec un composant.\r\n\r\nLes quatre lignes de CSS que vous voyez dans l'[exemple 1](#exemple-1) sont tout ce dont vous avez besoin pour supprimer les styles d'agent utilisateur par d\u00e9faut des boutons - en supposant que vous n'ayez pas ajout\u00e9 d'autres r\u00e8gles, comme nous l'avons fait dans l'[exemple 4](#exemple-4). Dans ce cas, vous devrez \u00e9galement r\u00e9initialiser ces styles. C'est le probl\u00e8me de cette approche manuelle : vous devez suivre les changements apport\u00e9s \u00e0 vos styles personnalis\u00e9s par d\u00e9faut et ajuster les styles de r\u00e9initialisation en cons\u00e9quence, ou bien r\u00e9initialiser toutes les propri\u00e9t\u00e9s possibles \u00e0 l'avance.\r\n\r\nL'approche illustr\u00e9e dans les exemples [2](#exemple-2) et [3](#exemple-3) est beaucoup plus efficace. Vous ppouvez utiliser la propri\u00e9t\u00e9 `all` dans CSS pour r\u00e9initialiser toutes les propri\u00e9t\u00e9s d'un \u00e9l\u00e9ment, \u00e0 l'exception de `unicode-bidi`, `direction`, et des propri\u00e9t\u00e9s personnalis\u00e9es CSS. Selon vos besoins, vous pouvez d\u00e9finir sa valeur \u00e0 `initial` ou `unset`.\r\n\r\nLe mot-cl\u00e9 `initial` fixe toutes les valeurs des propri\u00e9t\u00e9s \u00e0 leur valeur initiale. Chaque propri\u00e9t\u00e9 a une valeur initiale, d\u00e9finie dans la table de d\u00e9finition de la propri\u00e9t\u00e9. Par exemple, si vous regardez la propri\u00e9t\u00e9 `color` dans la sp\u00e9cification, la valeur initiale d\u00e9finie dans la table de d\u00e9finition est `CanvasText`. Notez que la valeur initiale n'est pas la valeur par d\u00e9faut de la propri\u00e9t\u00e9 d\u00e9finie dans l'agent utilisateur.\r\n\r\nLe mot-cl\u00e9 `unset` r\u00e9initialise une propri\u00e9t\u00e9 \u00e0 sa valeur h\u00e9rit\u00e9e, si la propri\u00e9t\u00e9 h\u00e9rite naturellement de son parent, et \u00e0 sa valeur initiale dans le cas contraire. Cela peut \u00eatre utile si vous voulez conserver des propri\u00e9t\u00e9s sp\u00e9cifiques comme `font-family` ou `color`.\r\n\r\nQuoi qu'il en soit, vous devrez peut-\u00eatre r\u00e9tablir les styles `focus` et `hover`, car `all` les r\u00e9initialise \u00e9galement. L'essentiel est que m\u00eame si un bouton ne ressemble pas \u00e0 un bouton, il doit se comporter comme tel.",
      "created": "2025-07-04T00:37:25.663139",
      "updated": "2025-07-04T02:25:54.317307",
      "meta_description": "Comment styliser vos boutons sans sacrifier l'accessibilit\u00e9 ? Exemples CSS, pi\u00e8ges \u00e0 \u00e9viter, et bonnes pratiques pour tous les supports.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 31,
      "title": "Ex\u00e9cuter des actions : ajouter des \u00e9tats et des propri\u00e9t\u00e9s",
      "slug": "executer-des-actions-ajouter-des-etats-et-des-proprietes",
      "body": "Lorsque les utilisateurs du lecteur d'\u00e9cran utilisent des boutons pour contr\u00f4ler d'autres \u00e9l\u00e9ments de la page ou les param\u00e8tres du site, ces boutons doivent fournir autant d'informations que possible. Il peut s'agir du type de bouton, du type d'\u00e9l\u00e9ment associ\u00e9 ou de l'\u00e9tat d'un bouton ou d'un \u00e9l\u00e9ment contr\u00f4l\u00e9. Si ces informations manquent, il est beaucoup plus compliqu\u00e9 - voire impossible - de savoir si l'utilisateur a bien activ\u00e9 le bouton et ce qui se passe lorsqu'il le fait.\r\n\r\nUn bouton qui fait basculer la visibilit\u00e9 d'un autre \u00e9l\u00e9ment doit indiquer si l'\u00e9l\u00e9ment est d\u00e9velopp\u00e9, comme le montre dans l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;L'attribut `aria-expanded` du bouton communique si la navigation est visible.**\r\n\r\n```html\r\n<nav>\r\n  <button aria-expanded=\"false\" aria-controls=\"main_nav\">\r\n    Navigation\r\n  </button>\r\n\r\n  <ul id=\"main_nav\" aria-hidden=\"true\">\r\n    <li>Accueil</li>\r\n    <li>\u00c0 propos</li>\r\n    <li>Contact</li>\r\n  </ul>\r\n</nav>\r\n\r\n<style>\r\n  [aria-expanded=\"false\"] + ul {\r\n    display: none;\r\n  }\r\n</style>\r\n\r\n<script>\r\nconst button = document.querySelector(\"button\");\r\nconst menu = document.getElementById(\"main_nav\");\r\n\r\nbutton.addEventListener(\"click\", () => {\r\n  const isExpanded = button.getAttribute(\"aria-expanded\") === \"true\";\r\n  button.setAttribute(\"aria-expanded\", String(!isExpanded));\r\n  menu.setAttribute(\"aria-hidden\", String(isExpanded));\r\n});\r\n</script>\r\n```\r\n\r\n**Remarque**: \r\n- `aria-expanded` doit se trouver sur le bouton et non sur l'\u00e9l\u00e9ment extensible.\r\n- La liste est masqu\u00e9e, en fonction de la valeur de l'attribut.\r\n- L'\u00e9v\u00e9nement de clic sur le bouton fait basculer la valeur de l'attribut `aria-expanded` et `aria-hidden`.\r\n\r\nUn bouton qui active ou d\u00e9sactive un param\u00e8tre doit communiquer s'il est actif, comme le montre l'[exemple 2](#exemple-2).\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Un bouton communiquant son \u00e9tat enfonc\u00e9**\r\n\r\n```html\r\n<button type=\"button\" aria-pressed=\"true\">\r\nAjouter aux favoris\r\n</button>\r\n\r\n<script>\r\nconst button = document.querySelector(\"button\");\r\n\r\nbutton.addEventListener(\"click\", (e) => {\r\n  const isPressed = button.getAttribute(\"aria-pressed\") === \"true\";\r\n  button.setAttribute(\"aria-pressed\", !isPressed);\r\n});\r\n</script>\r\n```\r\n\r\nUn bouton qui fait basculer un param\u00e8tre doit indiquer s'il est actif. L'[exemple 3](#exemple-3) montrent un bouton d'interrupteur qui communique son \u00e9tat \u00e0 l'aide de l'attribut `aria-checked`.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Un bouton d'interrupteur**\r\n\r\n```html\r\n<button role=\"switch\" aria-checked=\"false\">Se souvenir de moi</button>\r\n\r\n<script>\r\nconst button = document.querySelector(\"button\");\r\n\r\nbutton.addEventListener(\"click\", (e) => {\r\n  const isChecked = button.getAttribute(\"aria-checked\") === \"true\";\r\n  button.setAttribute(\"aria-checked\", !isChecked);\r\n});\r\n</script>\r\n\r\n<style>\r\n  button {\r\n    --toggle-offset: 0.125em;\r\n    --toggle-height: 1.6em;\r\n    --toggle-background: oklab(0.82 0 0);\r\n\r\n    all: unset;\r\n    align-items: center;\r\n    display: flex;\r\n    gap: 0.5em;\r\n    position: relative;\r\n  }\r\n\r\n  button::before {\r\n    background: var(--toggle-background);\r\n    border-radius: 4em;\r\n    content: \"\";\r\n    display: inline-block;\r\n    height: var(--toggle-height);\r\n    transition: background 0.3s, box-shadow 0.3s;\r\n    width: 3em;\r\n  }\r\n\r\n  button::after {\r\n    --_size: calc(var(--toggle-height) - (var(--toggle-offset) * 2));\r\n\r\n    background: #FFF;\r\n    border-radius: 50%;\r\n    content: \"\";\r\n    height: var(--_size);\r\n    left: var(--toggle-offset);\r\n    position: absolute;\r\n    transition: translate 0.3s;\r\n    top: var(--toggle-offset);\r\n    width: var(--_size);\r\n  }\r\n\r\n  button:focus-visible::before {\r\n    outline: 2px solid;\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  button:is(:focus-visible, :hover)::before { \r\n    box-shadow: 0px 0px 3px 1px rgb(0 0 0 / 0.3);\r\n  }\r\n\r\n  [aria-checked=\"true\"] {\r\n    --toggle-background: oklab(0.7 -0.18 0.17);\r\n  }\r\n\r\n  button[aria-checked=\"true\"]::after { \r\n    translate: 100% 0;\r\n  }\r\n</style>\r\n```\r\n\r\nUn bouton peut communiquer son \u00e9tat et le type d'\u00e9l\u00e9ment qu'il contr\u00f4le, comme le montre l'[exemple 4](#exemple-4).\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Un bouton contr\u00f4lant un menu**\r\n\r\n```html\r\n<button\r\n  type=\"button\"\r\n  aria-haspopup=\"menu\"\r\n  aria-expanded=\"false\"\r\n  id=\"button_settings\"\r\n>\r\n  Param\u00e8tres\r\n</button>\r\n\r\n<ul role=\"menu\" aria-labelledby=\"button_settings\" aria-hidden=\"true\" hidden>\r\n  <li role=\"none\">\r\n    <button role=\"menuitem\">Imprimer</button>\r\n  </li>\r\n  <li role=\"none\">\r\n    <button role=\"menuitem\">Sauvegarder</button>\r\n  </li>\r\n</ul>\r\n\r\n<style>\r\n  [aria-expanded=\"true\"] + ul {\r\n    display: block;\r\n  }\r\n</style>\r\n\r\n<script>\r\nconst button = document.querySelector(\"button\");\r\nconst menu = button.nextElementSibling;\r\n\r\nbutton.addEventListener(\"click\", () => {\r\n  const isExpanded = button.getAttribute(\"aria-expanded\") === \"true\";\r\n  button.setAttribute(\"aria-expanded\", String(!isExpanded));\r\n  menu.setAttribute(\"aria-hidden\", String(isExpanded));\r\n});\r\n</script>\r\n```\r\n\r\nDe nombreux attributs de la sp\u00e9cification ARIA fournissent aux \u00e9l\u00e9ments des \u00e9tats ou des propri\u00e9t\u00e9s. Lorsque vous construirez des scripts JavaScript personnalis\u00e9s, vous utiliserez souvent certains d'entre eux. La propri\u00e9t\u00e9 `arial-label`, par exemple, donne \u00e0 un \u00e9l\u00e9ment un nom accessible, tandis que l'\u00e9tat `aria-hidden` supprime un \u00e9l\u00e9ment de l'arbre d'accessibilit\u00e9.\r\n\r\nCet article se concentre sur quatre attributs couramment utilis\u00e9s avec les boutons.\r\n\r\n## L'\u00e9tat \u00e9largi\r\n\r\nVous utilisez l'attribut `aria-expanded` sur un \u00e9l\u00e9ment bouton pour indiquer si un \u00e9l\u00e9ment de regroupement qu'il contr\u00f4le est d\u00e9velopp\u00e9 ou r\u00e9duit.\r\n\r\n**Note** : L'\u00e9l\u00e9ment contr\u00f4l\u00e9 peut \u00eatre \u00e0 peu pr\u00e8s n'importe quel \u00e9l\u00e9ment, mais il s'agit g\u00e9n\u00e9ralement d'un \u00e9l\u00e9ment de regroupement comme `<div>`, `<p>`, ou `<ul>`.\r\n\r\nDans l'[exemple 1](#exemple-1), vous pouvez voir que le bouton poss\u00e8de l'attribut et communique que l'\u00e9l\u00e9ment associ\u00e9 est d\u00e9velopp\u00e9. Les utilisateurs doivent comprendre, \u00e0 partir du texte du bouton, quel \u00e9l\u00e9ment il contr\u00f4le. C'est pourquoi vous devez \u00e9viter les textes g\u00e9n\u00e9riques comme \u00ab show/hide \u00bb. L'attribut peut \u00eatre utile pour les navigations \u00e0 la vol\u00e9e, pour les sous-menus dans les navigations imbriqu\u00e9es et pour les scripts Javascript de divulgation.\r\n\r\nLe r\u00f4le du bouton est de communiquer si l'\u00e9l\u00e9ment contr\u00f4l\u00e9 est d\u00e9velopp\u00e9. Vous devez suivre trois r\u00e8gles essentielles lorsque voius l'appliquez :\r\n\r\n1. Vous d\u00e9finissez l'attribut sur l'\u00e9l\u00e9ment qui effectue le contr\u00f4le (le bouton), et non sur l'\u00e9l\u00e9ment contr\u00f4l\u00e9 (le groupe).\r\n2. La simple pr\u00e9sence de l'attribut ne suffit pas, vous devez lui attribuer la valeur \u00ab vrai \u00bb ou \u00ab faux \u00bb.\r\n3. L'attribut doit \u00eatre pr\u00e9sent et d\u00e9fini avant que l'utilisateur n'interagisse avec le bouton. Si vous donnez la valeur \u00ab false \u00bb \u00e0 l'attribut, cela signifie que l'\u00e9l\u00e9ment contr\u00f4l\u00e9 est r\u00e9duit. Si vous ne d\u00e9finissez pas l'attribut, le bouton ne contr\u00f4le rien.\r\n\r\nComme vous ppouvez le voir dans l'[exemple 1](#exemple-1), le bouton poss\u00e8de un autre attribut ARIA : `aria-controls`.\r\n\r\n## La propri\u00e9t\u00e9 des contr\u00f4les\r\n\r\nL'<a href=\"https://w3c.github.io/aria/#aria-controls\" target=\"_blank\">attribut `aria-controls`</a> identifie l'\u00e9l\u00e9ment que le bouton contr\u00f4le. La valeur est une liste d'une ou plusieurs r\u00e9f\u00e9rences `id`. Lorsque l'attribut est pr\u00e9sent, un lecteur d'\u00e9cran peut identifier une relation entre un bouton et un autre \u00e9l\u00e9ment. JAWS n'annonce pas automatiquement cette relation, mais vous pouvez utiliser le raccourci `JAWSKEY` + `ALT` + `M` pour acc\u00e9der directement \u00e0 l'\u00e9l\u00e9ment contr\u00f4l\u00e9.\r\n\r\nPour les widgets de divulgation, cet attribut n'est pas bien support\u00e9 (JAWS est le seul lecteur d'\u00e9cran qui l'utilise), et on ne sait pas quelle importance les d\u00e9veloppeurs de lecteurs d'\u00e9cran pr\u00e9voient de lui accorder. Pour NVDA, il s'agit d'une <a href=\"https://github.com/nvaccess/nvda/issues/8983\" target=\"_blank\">question ouverte depuis 2018</a>; une <a href=\"https://github.com/w3c/aria/issues/995\" target=\"_blank\">discussion ouverte dans le d\u00e9p\u00f4t GitHub ARIA date de 2019</a>. C'est \u00e0 vous de d\u00e9cider si vous l'utilisez ou non. En attendant une recommandation officielle pour ou contre, je l'utilise.\r\n\r\n## \u00c9tat press\u00e9\r\n\r\nL'<a href=\"https://w3c.github.io/aria/#aria-pressed\" target=\"_blank\">attribut `aria-pressed`</a> indique l'\u00e9tat actuel \u00ab enfonc\u00e9 \u00bb des boutons \u00e0 bascule.\r\n\r\nUn bouton \u00e0 bascule est semblable \u00e0 une case \u00e0 cocher, mais pas tout \u00e0 fait la m\u00eame chose. Outre le style, la diff\u00e9rence la plus importante est qu'une case \u00e0 cocher ne transmet qu'un \u00e9tat (coch\u00e9/d\u00e9coch\u00e9/mixte), alors qu'un bouton effectue une action. Lorsque les utilisateurs cliquent sur un bouton \u00e0 bascule, ils s'attendent \u00e0 ce qu'il se passe quelque chose. Le fait d'appuyer sur le bouton dans l'[exemple 2](#exemple-2) fait basculer la valeur de l'attribut `aria-pressed` et modifie l'\u00e9tat du bouton Ajouter aux favoris. Les modifications c\u00f4t\u00e9 client de ce type n\u00e9cessitent que vous travaillez dans un environnement qui s'appuie sur JavaScript, car l'\u00e9tat press\u00e9 doit changer au moment du clic. Si ce n'est pas le cas et que vous voulez am\u00e9liorer le contr\u00f4le progressivement, utilise plut\u00f4t une case \u00e0 cocher. \r\n\r\n## \u00c9tat v\u00e9rifi\u00e9\r\n\r\nL'<a href=\"https://w3c.github.io/aria/#aria-checked\" target=\"_blank\">attribut `aria-checked`</a> indique l'\u00e9tat actuel \u00ab coch\u00e9 \u00bb des cases \u00e0 cocher, des boutons radio et autres widgets.\r\n\r\nVous n'\u00eates pas cens\u00e9 utiliser `aria-checked` sur un bouton ayant le r\u00f4le `button`, mais vous pouvez l'utiliser sur un interrupteur (voir l'[exemple 3](#exemple-3)). Un interrupteur est un type de case \u00e0 cocher qui repr\u00e9sente des valeurs activ\u00e9/d\u00e9sactiv\u00e9 au lieu de valeurs coch\u00e9/d\u00e9coch\u00e9/mix\u00e9. Il offre \u00e0 peu pr\u00e8s la m\u00eame fonctionnalit\u00e9 qu'une case \u00e0 cocher ou un bouton \u00e0 bascule, mais vous pouvez les distinguer pour les lecteurs d'\u00e9cran d'une mani\u00e8re coh\u00e9rente avec son apparence \u00e0 l'\u00e9cran. Les interrupteurs sont un mod\u00e8le probl\u00e9matique en termes d'exp\u00e9rience utilisateur. Si vous d\u00e9cidez d'utiliser des interrupteurs, testez-les soigneusement avec les utilisateurs, y compris ceux qui utilisent des lecteurs d'\u00e9cran.\r\n\r\n## propri\u00e9t\u00e9 haspopup\r\n\r\nL'<a href=\"https://w3c.github.io/aria/#aria-haspopup\" target=\"_blank\">attribut `aria-haspopup`</a> indique qu'un bouton contr\u00f4le un autre \u00e9l\u00e9ment pop-up interactif. La plupart des lecteurs d'\u00e9cran annoncent \u00e9galement le type d'\u00e9l\u00e9ment pop-up . L'attribut prend en charge sept valeurs : *true, false, menu, dialog, grid, listbox et tree*, indiquant que l'\u00e9l\u00e9ment r\u00e9f\u00e9renc\u00e9 a le r\u00f4le correspondant. *true* est identique \u00e0 *menu*.\r\n\r\nSelon le logiciel de lecture d'\u00e9cran que vous utilisez, si vous focalisez le bouton de l'[exemple 4](#exemple-4), il annoncera quelque chose comme \u00ab R\u00e9glages, bouton, menu \u00bb (JAWS) ou \u00ab R\u00e9glages, bouton pop-up, menu pop-up \u00bb (VoiceOver). La valeur que vous utilisez doit tenir sa promesse : si la valeur est menu, le r\u00f4le de l'\u00e9l\u00e9ment contr\u00f4l\u00e9 doit \u00e9galement \u00eatre menu et fonctionner en cons\u00e9quence. JAWS, par exemple, annonce \u00e9galement des instructions appropri\u00e9es lorsqu'un attribut ayant une valeur sp\u00e9cifique est pr\u00e9sent. Pour *true* et *menu*, il annonce :  \u00ab Appuyer sur Space pour activer le menu. Puis navigue avec les touches fl\u00e9ch\u00e9es. \u00bb Pour listbox, tree et grid: \u00ab Pour activer, appuie sur Entr\u00e9e \u00bb.\r\n\r\nLes valeurs *true* et *menu* sont bien support\u00e9es par tous les lecteurs d'\u00e9cran. Cependant, TalkBack et Narrator ne prennent pas en charge les grilles, les bo\u00eetes de dialogue, les bo\u00eetes de liste ou les arbres.",
      "created": "2025-07-08T00:04:55.894320",
      "updated": "2025-07-08T01:03:48.213737",
      "meta_description": "Am\u00e9liorez l'accessibilit\u00e9 de vos interfaces avec les attributs ARIA : 4 exemples concrets pour des boutons inclusifs et informatifs.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 32,
      "title": "Ex\u00e9cuter des actions : \u00e9viter de d\u00e9sactiver les boutons",
      "slug": "executer-des-actions-eviter-de-desactiver-les-boutons",
      "body": "D\u00e9sactiver un bouton peut sembler une bonne id\u00e9e pour guider l'utilisateur ou \u00e9viter des erreurs, mais en r\u00e9alit\u00e9, cette pratique pose plus de probl\u00e8mes qu\u2019elle n\u2019en r\u00e9sout. Voici pourquoi.\r\n\r\n## Absence de retour d\u2019information\r\n\r\nLorsqu\u2019un bouton est d\u00e9sactiv\u00e9, cliquer dessus ne d\u00e9clenche aucune action. Il ne fournit ni message, ni explication. L\u2019utilisateur ne sait pas ce qui bloque l\u2019action, ni comment r\u00e9soudre le probl\u00e8me. Si, en plus, il pense avoir rempli tous les champs correctement, cela donne l\u2019impression que l\u2019interface est tout simplement cass\u00e9e.\r\n\r\n## Accessibilit\u00e9 r\u00e9duite\r\n\r\nUn bouton d\u00e9sactiv\u00e9 n\u2019est g\u00e9n\u00e9ralement pas focalisable. Cela signifie qu\u2019un utilisateur de lecteur d\u2019\u00e9cran ou de navigation clavier ne pourra m\u00eame pas d\u00e9tecter son existence. S\u2019il n\u2019est pas visuellement identifiable (par exemple via un style trop subtil), cela peut cr\u00e9er une v\u00e9ritable confusion, voire un blocage dans la navigation.\r\n\r\n## Contraste souvent insuffisant\r\n\r\nSelon les WCAG, les \u00e9l\u00e9ments d\u00e9sactiv\u00e9s ne sont pas soumis \u00e0 <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/contrast-minimum.html\" target=\"_blank\">la r\u00e8gle du contraste minimum</a>. R\u00e9sultat : ils sont souvent difficiles \u00e0 lire, en particulier pour les personnes malvoyantes ou en situation de fatigue visuelle.\r\n\r\n## Une fausse impression de disponibilit\u00e9\r\n\r\nLe design de certains boutons d\u00e9sactiv\u00e9s ne les rend pas toujours identifiables comme tels. De nombreux utilisateurs vont essayer de cliquer dessus. Et quand rien ne se passe, ils peuvent se sentir frustr\u00e9s, perdus ou simplement agac\u00e9s. D\u2019autant que ces boutons contiennent g\u00e9n\u00e9ralement des termes engageants comme \u00ab\u202fEnvoyer\u202f\u00bb, \u00ab\u202fCommander\u202f\u00bb ou \u00ab\u202fSuivant\u202f\u00bb, qui appellent naturellement \u00e0 l\u2019action.\r\n\r\n## Alternative recommand\u00e9e : activer les boutons, guider les utilisateurs\r\n\r\nD\u00e9sactiver un bouton tant que certaines conditions ne sont pas remplies est une pratique courante pour \u00e9viter les erreurs. Mais elle reste probl\u00e9matique. Un bouton gris\u00e9 n\u2019indique pas pourquoi l'action est impossible, ni comment y rem\u00e9dier. Cela g\u00e9n\u00e8re de la confusion et nuit \u00e0 l\u2019exp\u00e9rience utilisateur.\r\n\r\nUne meilleure approche consiste \u00e0 laisser les boutons activ\u00e9s, mais \u00e0 valider les entr\u00e9es au moment du clic, en fournissant des messages d\u2019erreur clairs, contextualis\u00e9s et accessibles. Ainsi, l\u2019utilisateur comprend imm\u00e9diatement ce qui pose probl\u00e8me, et sait quoi corriger.\r\n\r\n### Bonnes pratiques pour pr\u00e9venir les erreurs sans d\u00e9sactiver les boutons\r\n\r\nVoici quelques solutions concr\u00e8tes, applicables d\u00e8s la conception de vos formulaires :\r\n\r\n- Utilisez des labels explicites pour chaque champ.\r\n- Ajoutez des aides ou des descriptions, notamment lorsque le label ne suffit pas \u00e0 lui seul.\r\n- D\u00e9coupez les formulaires complexes en plusieurs \u00e9tapes pour all\u00e9ger la charge cognitive.\r\n- Gardez toujours le bouton actif et effectuez les validations \u00e0 la soumission.\r\n- Affichez des messages d\u2019erreur clairs et sp\u00e9cifiques, proches des champs concern\u00e9s.\r\n\r\nLorsqu\u2019un utilisateur clique sur le bouton, le formulaire peut :\r\n\r\n- afficher une liste des erreurs qui renvoient directement aux champs concern\u00e9s ;\r\n- ou placer automatiquement le curseur sur le champ incorrect s\u2019il n\u2019y en a qu\u2019un.\r\n\r\n### Dans quels cas peut-on d\u00e9sactiver un bouton ?\r\n\r\nBien que d\u00e9sactiver un bouton puisse nuire \u00e0 l\u2019exp\u00e9rience utilisateur, il existe certains cas o\u00f9 cette pratique reste acceptable \u00e0 condition de bien informer et guider l\u2019utilisateur.\r\n\r\nVoici quelques contextes o\u00f9 cela peut \u00eatre justifi\u00e9 :\r\n\r\n- **Pendant un traitement en cours** : <br>Pour \u00e9viter les doubles clics lors d\u2019un envoi de formulaire. Le bouton peut afficher \u00ab Envoi en cours\u2026\u00bb avec un indicateur visuel (spinner).\r\n- **\u00c9tapes conditionnelles ou s\u00e9quentielles** :<br>Dans un formulaire multi-\u00e9tapes, un bouton \u00ab Suivant \u00bb peut \u00eatre d\u00e9sactiv\u00e9 tant que tous les champs requis ne sont pas remplis, \u00e0 condition d\u2019afficher clairement la condition non remplie.\r\n- **Actions sensibles ou critiques** :<br>Lorsqu\u2019une action est irr\u00e9versible (ex. : \u00ab Supprimer d\u00e9finitivement \u00bb), le bouton peut \u00eatre d\u00e9sactiv\u00e9 jusqu\u2019\u00e0 ce qu\u2019une case \u00ab Je comprends les cons\u00e9quences \u00bb soit coch\u00e9e.\r\n\r\nDans tous les cas, **le bouton doit rester visible, identifiable, focalisable au clavier**, et accompagn\u00e9 d\u2019un retour clair.\r\n\r\n## En r\u00e9sum\u00e9\r\n\r\nLes boutons d\u00e9sactiv\u00e9s cr\u00e9ent plus de confusion qu\u2019ils n\u2019en \u00e9vitent. Une bonne interface est tol\u00e9rante aux erreurs et p\u00e9dagogique. Plut\u00f4t que d\u2019emp\u00eacher l\u2019action, autorisez-la et accompagnez l\u2019utilisateur avec des retours clairs et accessibles. Vous am\u00e9liorerez ainsi l\u2019exp\u00e9rience globale, tout en rendant votre interface plus inclusive.",
      "created": "2025-07-09T00:46:37.898015",
      "updated": "2025-07-09T01:29:54.596209",
      "meta_description": "D\u00e9sactiver un bouton peut nuire \u00e0 l'exp\u00e9rience utilisateur. Voici pourquoi vous devriez privil\u00e9gier des retours explicites et accessibles.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 33,
      "title": "Fournir des styles de focalisation",
      "slug": "fournir-des-styles-de-focalisation",
      "body": "Les pages Web sont accessibles au clavier par d\u00e9faut parce que les \u00e9l\u00e9ments interactifs natifs sont livr\u00e9s avec le style et la fonctionnalit\u00e9 dont vous avez besoin pour les utiliser. Ils sont focalisables et indiquent visuellement leur \u00e9tat de focalisation. Lorsque vous ajoutez du CSS ou surtout du JavaScript, vous devez veiller \u00e0 conserver cette accessibilit\u00e9 de base, voire \u00e0 l'am\u00e9liorer, et \u00e0 ce que vos solutions personnalis\u00e9es soient \u00e9galement accessibles.\r\n\r\nLorsqu'on acc\u00e8de \u00e0 un site Web \u00e0 l'aide d'un clavier, d'un dispositif de commutation, d'un lecteur d'\u00e9cran ou d'une technologie d'assistance similaire, on peut utiliser la touche `Tab` (ou une commande sur un autre dispositif physique qui correspond \u00e0 la touche) pour passer d'un \u00e9l\u00e9ment interactif \u00e0 l'autre.\r\n\r\nSi, en tant que d\u00e9veloppeur, vous ne mettez pas visuellement en \u00e9vidence l'\u00e9l\u00e9ment actuellement actif \u00e0 l'aide de CSS, les utilisateurs ne peuvent pas s'orienter et naviguer.\r\n\r\nLa solution est d'utiliser les pseudoclasses pour styliser les \u00e9l\u00e9ments interactifs dans leur \u00e9tat de mise au point ou de mise au point visible, comme le montrent les exemples [1](#exemple-1), [2](#exemple-2), [3](#exemple-3) et [4](#exemple-4).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Styliser tous les \u00e9l\u00e9ments dans leur \u00e9tat focus-visible**\r\n\r\n```css\r\n:focus-visible {\r\n  outline: 0.25em solid;\r\n  outline-offset: 0.25em;\r\n}\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Styliser tous les \u00e9l\u00e9ments dans leur \u00e9tat de focalisation**\r\n\r\n```css\r\n:focus {\r\n  outline: 0.25em solid;\r\n  outline-offset: 0.25em;\r\n}\r\n```\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Affichage d'une ombre sur les \u00e9l\u00e9ments vid\u00e9o et audio si un \u00e9l\u00e9ment contenu est actuellement mis en avant.**\r\n\r\n```css\r\n:is(video, audio):focus-within {\r\n  box-shadow: 0 0 10px 3px rgb(0 0 0 / 0.2);\r\n}\r\n```\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Fournir des styles de mise au point personnalis\u00e9s pour les utilisateurs n'utilisant pas le clavier**\r\n\r\n```css\r\nbutton:focus-visible {\r\n  outline: 0.25em dashed black;\r\n}\r\n\r\nbutton:focus:not(:focus-visible) {\r\n  outline: none;\r\n  box-shadow: 1px 1px 5px rgba(1, 1, 0, .7);\r\n}\r\n```\r\n\r\n**Remarque** :  Le premier s\u00e9lecteur (`button:focus-visible`) et sa r\u00e8gle CSS d\u00e9finissent le style de mise au point pour les utilisateurs naviguant au clavier. Le second s\u00e9lecteur (`button:focus:not(:focus-visible`)) s'applique aux utilisateurs interagissant \u00e0 la souris.\r\n\r\nLe style de l'\u00e9l\u00e9ment sur lequel on se concentre actuellement est l'une des choses les plus importantes que vous puissiez faire pour l'accessibilit\u00e9 du clavier. Si vous supprimez les styles de mise au point par d\u00e9faut fournis par tous les navigateurs, vous compliquez la vie de nombreuses personnes. Supprimer les indicateurs de mise au point pour les utilisateurs de clavier revient \u00e0 cacher le curseur pour les utilisateurs de souris. Malheureusement, vous trouverez le code de l'[exemple 5](#exemple-5) sur de nombreux sites Web. C'est parce que, dans le pass\u00e9, l'ajout de styles de mise au point avait des effets secondaires ind\u00e9sirables pour les utilisateurs de souris, comme l'affichage d'un contour que les parties prenantes consid\u00e8rent souvent comme esth\u00e9tiquement d\u00e9plaisant ou d\u00e9rangeant (ce sont rarement les utilisateurs qui se plaignent). Heureusement, ce probl\u00e8me appartient au pass\u00e9. Aujourd'hui, vous pouvez contr\u00f4ler pr\u00e9cis\u00e9ment quand et \u00e0 qui les styles de mise au point sont visibles, car les navigateurs utilisent diff\u00e9rentes heuristiques pour les afficher.\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Pas de contour par d\u00e9faut sur les \u00e9l\u00e9ments interactifs.**\r\n\r\n```css\r\n:focus {\r\n  outline: none !important;\r\n}\r\n```\r\n## La pseudoclasse :focus\r\n\r\nLa <a href=\"https://www.w3.org/TR/selectors-4/#the-focus-pseudo\" target=\"_blank\">pseudoclasse `:focus`</a> applique lorsque l'utilisateur met l'accent sur un \u00e9l\u00e9ment \u00e0 l'aide du clavier, de la souris ou de toute autre forme de saisie. En utilisant le code de l'[exemple 2](#exemple-2), le contour personnalis\u00e9 de `0,25em` s'affiche lorsque l'utilisateur trouve le bouton \u00e0 l'aide du clavier et lorsqu'il clique ou tape dessus. Auparavant, `:focus` figurait dans la feuille de style de l'agent utilisateur de tous les navigateurs jusqu'\u00e0 ce qu'ils adoptent `:focus-visible` comme valeur par d\u00e9faut.\r\n\r\n## La pseudoclasse :focus-visible\r\n\r\n\u00c0 partir de avec Chrome 90, Firefox 87 et Safari 15.4, la pseudoclasse `:focus` correspond toujours aux \u00e9l\u00e9ments focalisables, mais les agents utilisateurs n'indiquent visiblement la focalisation que parfois. Au lieu de cela, ils utilisent par d\u00e9faut `:focus-visible`, qui utilise une vari\u00e9t\u00e9 d'heuristiques pour indiquer le focus uniquement lorsque c'est le plus utile pour les utilisateurs. Il s'agit d'un changement crucial, car vous pouvez d\u00e9sormais donner un style aux indicateurs de mise au point sans trop vous soucier du moment o\u00f9 ils s'affichent. Si vous voulez modifier les styles par d\u00e9faut, vous pouvez utiliser la pseudoclasse `:focus-visible`, comme le montre l'[exemple 1](#exemple-1). \r\n\r\nIl existe des diff\u00e9rences mineures entre les moteurs de navigateur, mais les styles de mise au point ne doivent s'afficher que <a href=\"https://www.w3.org/TR/selectors-4/#the-focus-visible-pseudo\" target=\"_blank\">dans certaines circonstances</a>, comme par exemple :\r\n\r\n- Si l'utilisateur interagit avec la page \u00e0 l'aide d'un clavier ou d'un autre dispositif non pointu.\r\n- Si l'\u00e9l\u00e9ment prend en charge la saisie au clavier, comme un \u00e9l\u00e9ment de saisie ou une zone de texte.\r\n- Si vous d\u00e9placez le focus avec JavaScript, l'\u00e9l\u00e9ment pr\u00e9c\u00e9demment cibl\u00e9 et le nouvel \u00e9l\u00e9ment focalis\u00e9 afficheront tous deux l'indication de focus..\r\n- Si l'utilisateur a exprim\u00e9 une pr\u00e9f\u00e9rence dans les param\u00e8tres de son navigateur (par exemple, dans Chrome, sous Pr\u00e9f\u00e9rences, Accessibilit\u00e9, \u00ab Afficher un surlignage rapide sur l'objet focalis\u00e9 \u00bb).\r\n\r\nBien qu'il n'y ait pas de styles par d\u00e9faut pour la pseudoclasse `:focus`, vous pouvez toujours l'utiliser si vous souhaitez afficher l'indicateur quelle que soit la m\u00e9thode de saisie. Vous pouvez m\u00eame combiner les pseudoclasses, comme le montre l'[exemple 4](#exemple-4). La premi\u00e8re r\u00e8gle s'applique lorsque l'utilisateur interagit avec le bouton \u00e0 l'aide d'un dispositif non pointant, et la seconde ne s'applique que lorsque l'utilisateur utilise un dispositif pointant.\r\n\r\n## La pseudoclasse :focus-within\r\n\r\nLa <a href=\"https://www.w3.org/TR/selectors-4/#the-focus-within-pseudo\" target=\"_blank\">pseudoclasse `:focus-within`</a> applique \u00e0 tout \u00e9l\u00e9ment qui correspond \u00e0 la pseudoclasse `:focus`. Plus important encore, elle s'applique \u00e0 un \u00e9l\u00e9ment dont les descendants r\u00e9pondent aux conditions de correspondance avec `:focus`. Cela signifie que vous pouvez l'utiliser pour s\u00e9lectionner un \u00e9l\u00e9ment dont les enfants sont actuellement focalis\u00e9s, comme illustr\u00e9 dans l'[exemple 3](#exemple-3).\r\n\r\n\r\n## Styles de mise au point par d\u00e9faut\r\n\r\nLes navigateurs sont livr\u00e9s avec des styles par d\u00e9faut pour les \u00e9l\u00e9ments focalisables. Ces styles sont souvent appel\u00e9s focus-ring car ils utilisent tous la propri\u00e9t\u00e9 `outline`, qui ajoute un contour autour du rectangle de l'\u00e9l\u00e9ment. Les styles par d\u00e9faut sont mieux que rien, mais ils ne sont g\u00e9n\u00e9ralement pas assez visibles, ils manquent de contraste de couleur et leur style n'est pas coh\u00e9rent sur les navigateurs. C'est pourquoi je te recommande de cr\u00e9er vos propres r\u00e8gles.\r\n\r\nLa r\u00e8gle de l'[exemple 1](#exemple-1) utilise un `outline-width` plus \u00e9pais et un `outline-offset` suppl\u00e9mentaire pour ajouter de l'espace entre le contenu et le contour. Elle s'assure \u00e9galement que r\u00e9pond <a href=\"https://www.w3.org/WAI/WCAG21/Understanding/non-text-contrast.html\" target=\"_blank\">aux exigences des WCAG en mati\u00e8re de contraste des couleurs</a>, qui stipulent que l'indicateur visuel de focalisation doit pr\u00e9senter un contraste suffisant par rapport aux couleurs adjacentes.\r\n\r\nEn outre, les propri\u00e9t\u00e9s `outline` fonctionnent bien pour le style de mise au point parce qu'elles sont bien prises en charge. Elles sont clairement visibles et n'interf\u00e8rent pas avec la mise en page car, contrairement \u00e0 `border`, elles n'ajustent pas la taille de la bo\u00eete. Mais vous n'\u00eates pas limit\u00e9 \u00e0 ces propri\u00e9t\u00e9s. Vous pouvez aussi utiliser des propri\u00e9t\u00e9s comme `background-color` ou `box-shadow`. Cependant, il est important de savoir que ces propri\u00e9t\u00e9s peuvent ne pas \u00eatre visibles en mode couleur forc\u00e9e.\r\n\r\nUne excellente solution consiste \u00e0 combiner d'autres propri\u00e9t\u00e9s avec un contour transparent, comme le montre l'[exemple 6](#exemple-6). Les modes de couleur forc\u00e9e peuvent ne pas rendre les couleurs d'arri\u00e8re-plan et les ombres de bo\u00eete, mais ils peuvent interpr\u00e9ter et afficher les contours transparents.\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Un contour invisible pour tous les \u00e9l\u00e9ments focalis\u00e9s**\r\n\r\n```css\r\n:focus-visible {\r\n  --black: #0b0c0c;\r\n  --yellow: #fd0;\r\n\r\n  color: var(--black);\r\n  background-color: var(--yellow);\r\n  box-shadow: 0 -0.125em var(--yellow), 0 0.25em var(--black);\r\n  outline: 0.25em solid transparent; \r\n}\r\n```\r\n\r\nLorsque vous concevez les styles de mise au point des \u00e9l\u00e9ments interactifs de votre projet, concentrez-vous sur l'exp\u00e9rience de l'utilisateur. Ils n'ont pas besoin d'\u00eatre beaux, mais ils doivent bien faire leur travail .",
      "created": "2025-07-16T00:44:08.861391",
      "updated": "2025-07-16T01:33:52.394363",
      "meta_description": "Am\u00e9liorez l'accessibilit\u00e9 de vos interfaces en stylisant correctement les \u00e9l\u00e9ments interactifs avec :focus, :focus-visible et :focus-within",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 34,
      "title": "Rendre les \u00e9l\u00e9ments focalisables",
      "slug": "rendre-les-elements-focalisables",
      "body": "Les personnes qui d\u00e9pendent de l'accessibilit\u00e9 au clavier naviguent en utilisant la touche `Tab`, ou un dispositif physique qui correspond \u00e0 la touche, pour passer d'un \u00e9l\u00e9ment interactif \u00e0 un autre. Lorsqu'elles utilisent un site Web, elles doivent pouvoir effectuer les m\u00eames actions que les utilisateurs de souris. Si vous ne prenez pas de mesures sp\u00e9cifiques pour vous en assurer, ils risquent de ne pas pouvoir atteindre certaines parties de l'interface. Vous pouvez rendre les \u00e9l\u00e9ments non focalisables focalisables si n\u00e9cessaire, comme le montre l'[exemple 1](#exemple-1).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Rendre un panneau \u00e0 onglets focalisable**\r\n\r\n```html\r\n<div class=\"tabs\">\r\n  <h3 id=\"tablist-1\">R\u00e9sultat \u00e9lections</h3>\r\n  <div role=\"tablist\" aria-labelledby=\"tablist-1\">\r\n    <button id=\"tab-1\" type=\"button\" role=\"tab\" aria-selected=\"true\" aria-controls=\"tabpanel-1\">\r\n      Graphique\r\n    </button>\r\n    <button id=\"tab-2\" type=\"button\" role=\"tab\" aria-selected=\"false\" aria-controls=\"tabpanel-2\" tabindex=\"-1\">\r\n      Tableau\r\n    </button>\r\n  </div>\r\n\r\n  <div id=\"tabpanel-1\" role=\"tabpanel\" tabindex=\"0\" aria-labelledby=\"tab-1\">\r\n    <!-- graphique -->\r\n  </div>\r\n  <div id=\"tabpanel-2\" role=\"tabpanel\" tabindex=\"0\" aria-labelledby=\"tab-2\" class=\"is-hidden\">\r\n    <!-- tableau -->\r\n  </div>\r\n</div>\r\n```\r\n\r\nVous pouvez \u00e9viter de nombreux probl\u00e8mes d'accessibilit\u00e9 au clavier avant qu'ils ne se posent en utilisant du HTML s\u00e9mantique. Plusieurs \u00e9l\u00e9ments sont destin\u00e9s \u00e0 un contenu interactif et sont accessibles au clavier par d\u00e9faut (voir [tableau 1](#table-1)).\r\n\r\n<table id=\"table-1\">\r\n  <caption>\u00c9l\u00e9ments interactifs</caption>\r\n  <thead>\r\n    <tr>\r\n      <th scope=\"cols\">\u00c9l\u00e9ment</th>\r\n      <th scope=\"cols\">Condition</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr>\r\n      <td> <code>&lt;a&gt;</code> </td>\r\n      <td> Si l'attribut <code>href</code> est pr\u00e9sent </td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;audio&gt;</code> </td>\r\n      <td> Si l'attribut <code>controls</code> est pr\u00e9sent </td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;button&gt;</code> </td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;details&gt;</code> </td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;embed&gt;</code> </td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;iframe&gt;</code> </td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;img&gt;</code> </td>\r\n      <td> Si l'attribut <code>usemap</code> est pr\u00e9sent </td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;input&gt;</code> </td>\r\n      <td> Si l'attribut <code>type</code> n'est pas r\u00e9gl\u00e9 sur <code>hidden</code> </td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;select&gt;</code> </td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;textarea&gt;</code> </td>\r\n      <td></td>\r\n    </tr>\r\n    <tr>\r\n      <td> <code>&lt;video&gt;</code> </td>\r\n      <td> Si l'attribut <code>controls</code> est pr\u00e9sent </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\nLes deux solutions de l'[exemple 2](#exemple-2) sont s\u00e9mantiquement les m\u00eames et peuvent para\u00eetre identiques avec le CSS ad\u00e9quat. La grande diff\u00e9rence est que seul le bouton natif est accessible via le clavier. M\u00eame si le bouton personnalis\u00e9 \u00e9tait focalisable, vous ne pourrez pas effectuer d'action sur lui parce qu'il n'a pas d'\u00e9v\u00e9nements de touche. J'en ai d\u00e9j\u00e0 parl\u00e9 dans ces articles : \r\n\r\n- [Ex\u00e9cuter des actions : supprimer les styles de boutons par d\u00e9faut](/articles/executer-des-actions-supprimer-les-styles-de-boutons-par-defaut-30.html)\r\n- [Ex\u00e9cuter des actions : \u00e9viter de d\u00e9sactiver les boutons](/articles/executer-des-actions-eviter-de-desactiver-les-boutons-32.html)\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Un bouton natif et un bouton personnalis\u00e9**\r\n\r\n```html\r\n<button> \r\n  Ouvrir\r\n</button>\r\n\r\n<div role=\"button\"> \r\n  Ouvrir\r\n</div>\r\n\r\n<style>\r\n  button,\r\n  [role=\"button\"] {\r\n    background: #123456;\r\n    color: #FFFFFF;\r\n    border: none;\r\n    display: inline-block;\r\n    padding: 0.5em 1rem;\r\n    font-family: inherit;\r\n    font-size: 1.1rem;\r\n    line-height: 1;\r\n  }\r\n\r\n  :focus-visible {\r\n    outline: 4px solid #123456;\r\n    outline-offset: 4px;\r\n  }\r\n</style>\r\n```\r\n\r\nL'utilisation du HTML natif est la meilleure approche. Vous obtienez g\u00e9n\u00e9ralement une excellente accessibilit\u00e9 de base, mais vous devez parfois rendre focalisables des \u00e9l\u00e9ments qui ne le sont pas par d\u00e9faut. Par exemple :\r\n\r\n- Lorsque vous devez d\u00e9placer le focus, mais que l'\u00e9l\u00e9ment cible n'est pas focalisable ou n'a pas de descendants focalisables.\r\n- Quand vous voulez rendre les zones d\u00e9filables accessibles au clavier\r\n- Lorsque vous construisez un \u00e9l\u00e9ment interactif personnalis\u00e9 et que vous avez de tr\u00e8s bonnes raisons de ne pas utiliser un \u00e9l\u00e9ment s\u00e9mantique.\r\n\r\n## L'attribut tabindex\r\n\r\nLe code de l'[exemple 1](#exemple-1) montre une solution JavaScript personnalis\u00e9e pour un composant d'onglets.  Essayez la d\u00e9mo sur le site Web <a href=\"https://www.w3.org/WAI/ARIA/apg/patterns/tabs/examples/tabs-automatic/\" target=\"_blank\">ARIA Authoring Practices Guide (APG)</a> du W3C, d'o\u00f9 provient ce code. Vous apprendrez que vous pouvez interagir avec les boutons de la liste des onglets en utilisant les touches fl\u00e9ch\u00e9es gauche et droite. Pour acc\u00e9der au contenu d'un onglet, vous pouvez utiliser la touche `Tab`, et le panneau de l'onglet correspondant recevra alors le focus. Le panneau \u00e0 onglets est un \u00e9l\u00e9ment `<div>` avec un r\u00f4le personnalis\u00e9 `tabpanel`.  Il peut \u00eatre mis en \u00e9vidence uniquement parce que la page utilise l'attribut `tabindex` avec une valeur `0`.  Cet attribut et cette valeur rendent un \u00e9l\u00e9ment focalisable et l'ajoutent \u00e0 l'ordre naturel des onglets.\r\n\r\nVous remarquerez \u00e9galement que les boutons ont un attribut `tabindex` avec la valeur `-1`, ce qui peut \u00eatre utile dans deux cas :\r\n\r\n- lorsque vous souhaitez rendre un \u00e9l\u00e9ment g\u00e9n\u00e9rique focalisable \u00e0 l'aide de la m\u00e9thode `focus()` de JavaScript, sans le rendre accessible au clavier ;\r\n- ou lorsque vous souhaitez retirer un \u00e9l\u00e9ment de l'ordre de tabulation tout en \u00e9tant capable de lui donner le focus via JavaScript.\r\n\r\nLes boutons sont focalisables par d\u00e9faut, mais dans cet exemple, appuyer sur la touche `Tab` doit permettre d'ignorer les boutons et de focaliser \u00e0 la place le panneau de tabulation actif.  \r\nLe r\u00e9glage `tabindex=-1` rend cela possible, tout en vous permettant de mettre l'accent sur les boutons lorsque l'utilisateur appuie sur les touches fl\u00e9ch\u00e9es.\r\n\r\nL'utilisation de `tabindex` avec les valeurs `0` ou `-1` est une pratique courante et ne pose pas de probl\u00e8me, \u00e0 condition de l'appliquer \u00e0 un \u00e9l\u00e9ment s\u00e9mantique et labellis\u00e9. Les probl\u00e8mes surviennent lorsqu'un nombre positif sup\u00e9rieur \u00e0 0 est utilis\u00e9, comme le montre l'[exemple 3](#exemple-3). Un utilisateur de clavier navigue sur un site Web en sautant d'un \u00e9l\u00e9ment interactif \u00e0 l'autre dans un ordre s\u00e9quentiel.  La touche `Tab` suit toujours l'ordre des \u00e9l\u00e9ments dans le document, **sauf si** vous utilisez `tabindex` avec une **valeur positive**.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Boutons avec un ordre de tabulation personnalis\u00e9**\r\n\r\n```html\r\n<button tabindex=\"2\">Bouton 1</button>\r\n<button tabindex=\"1\">Bouton 2</button>\r\n<button tabindex=\"3\">Bouton 3</button>\r\n```\r\n\r\nLes boutons de l'[exemple 3](#exemple-3) re\u00e7oivent le focus dans l'ordre suivant : **Bouton 2**, **Bouton 1**, **Bouton 3**.  \r\nL'ordre personnalis\u00e9 d\u00e9fini par les attributs `tabindex` remplace l'ordre du **DOM**. Si seuls certains \u00e9l\u00e9ments poss\u00e8dent l'attribut, le focus atteindra d'abord ces \u00e9l\u00e9ments, en les parcourant selon leur **valeur de `tabindex`**,  puis il parcourra les \u00e9l\u00e9ments **sans l'attribut** dans l'ordre s\u00e9quentiel.Dans l'[exemple 4](#exemple-4), cela donnerait : **Bouton 2**, **Bouton 4**, **Bouton 1**, **Bouton 3**, **Bouton 5**. Le maintien d'un ordre significatif devient complexe d\u00e8s que l'on introduit des attributs `tabindex` avec une valeur sup\u00e9rieure \u00e0 z\u00e9ro.\r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Seuls deux boutons ont un attribut positif personnalis\u00e9**\r\n\r\n```html\r\n<button>Bouton 1</button>\r\n<button tabindex=\"1\">Bouton 2</button>\r\n<button>Bouton 3</button>\r\n<button tabindex=\"2\">Bouton 4</button>\r\n<button>Bouton 5</button>\r\n```\r\n\r\nL'attribut `tabindex` est puissant, polyvalent et utile pour am\u00e9liorer l'accessibilit\u00e9 au clavier, mais il peut \u00e9galement s\u2019av\u00e9rer dangereux. L'utilisation de valeurs positives devient rapidement incontr\u00f4lable. Suivez les r\u00e8gles suivantes :\r\n\r\n- Utilisez `tabindex=\"-1\"` pour rendre les \u00e9l\u00e9ments non focalisables, focalisables via JavaScript uniquement, ou pour rendre des \u00e9l\u00e9ments focalisables non focalisables.\r\n- Utilisez `tabindex=\"0\"` pour rendre les \u00e9l\u00e9ments non focalisables accessibles au clavier.\r\n- \u00c9vitez d'utiliser des valeurs positives.\r\n\r\n### \u00c9l\u00e9ments focalisables\r\n\r\nSavoir quels \u00e9l\u00e9ments sont focalisables peut \u00eatre utile, mais les \u00e9num\u00e9rer tous est plus difficile qu'il n'y para\u00eet. En plus de la liste des \u00e9l\u00e9ments interactifs mentionn\u00e9e au d\u00e9but de cet article, il faut \u00e9galement prendre en compte les \u00e9l\u00e9ments ayant un `tabindex` positif.  Il y a aussi l'attribut `contenteditable`, qui rend les \u00e9l\u00e9ments modifiables. Tout cela n'est valable que si les \u00e9l\u00e9ments ne sont pas cach\u00e9s, d\u00e9sactiv\u00e9s ou inertes, et s'ils ne poss\u00e8dent pas un `tabindex` avec une valeur n\u00e9gative.\r\n",
      "created": "2025-07-17T23:48:41.970596",
      "updated": "2025-07-18T00:56:56.306208",
      "meta_description": "Comprendre et ma\u00eetriser les \u00e9l\u00e9ments focalisables pour garantir l'accessibilit\u00e9 clavier sur vos sites web. Bonnes pratiques et pi\u00e8ges \u00e0 \u00e9viter.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 35,
      "title": "Comment bien g\u00e9rer le focus dans vos interfaces ?",
      "slug": "comment-bien-gerer-le-focus-dans-vos-interfaces",
      "body": "Lorsque vous d\u00e9placez l'attention des utilisateurs vers un autre endroit ou une autre couche de la page (par exemple, en affichant une bo\u00eete de dialogue modale ou une autre superposition), vous devez vous assurer qu'ils peuvent \u00e9galement interagir imm\u00e9diatement avec ce contenu sans effort suppl\u00e9mentaire. Par cons\u00e9quent, vous devez d\u00e9placer le focus vers cette partie de l'interface utilisateur. Si vous ne le faites pas, les utilisateurs risquent d'\u00eatre encore sur un \u00e9l\u00e9ment interactif de la page en arri\u00e8re-plan. Le fait d'appuyer sur `Tab` aurait alors pour cons\u00e9quence de focaliser des \u00e9l\u00e9ments qui sont obscurcis et non pertinents. Cela peut pr\u00eater \u00e0 confusion et emp\u00eacher les gens d'acc\u00e9der \u00e0 des informations et \u00e0 des fonctionnalit\u00e9s importantes.\r\n\r\nVous devez d\u00e9placer votre attention vers l'endroit o\u00f9 elle est actuellement n\u00e9cessaire. Ce processus s'appelle la gestion de l'attention. Les exemples [1](#exemple-1) et [2](#exemple-2) illustrent comment cr\u00e9er une fen\u00eatre modale personnalis\u00e9e et d\u00e9placer le focus du bouton vers la fen\u00eatre modale et inversement, selon les besoins.\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un bouton et une bo\u00eete de dialogue modale personnalis\u00e9e**\r\n\r\n```html\r\n<button type=\"button\" class=\"open\" aria-haspopup=\"dialog\">Se connecter</button>\r\n\r\n<div role=\"dialog\" aria-modal=\"true\" hidden aria-labelledby=\"heading\">\r\n  <div>\r\n    <button type=\"button\" class=\"close\">Fermer</button>\r\n\r\n    <h1 id=\"heading\" tabindex=\"-1\">Se connecter</h1>\r\n  </div>\r\n</div>\r\n\r\n<style>\r\n/* Style de base pour le dialogue */\r\n  [role=\"dialog\"] {\r\n    align-items: center;\r\n    background: rgb( 0 0 0 / 0.2);\r\n    inset: 0;\r\n    justify-content: center;\r\n    margin: auto;\r\n    position: fixed;\r\n  }\r\n\r\n/* Modifie l'affichage de la bo\u00eete de dialogue lorsqu'elle est visible. */\r\n  [role=\"dialog\"]:not([hidden]) {\r\n    display: flex;\r\n  }\r\n\r\n/* Style de base pour le contenu du dialogue */\r\n  [role=\"dialog\"] > div {\r\n    background: rgb(255 255 255);\r\n    box-sizing: border-box;\r\n    max-width: 40rem;\r\n    padding: 2rem;\r\n    width: 90vw;\r\n  }\r\n\r\n/* Affiche le style de mise au point pour tous les \u00e9l\u00e9ments */\r\n  :focus-visible {\r\n    outline: 4px solid #123456;\r\n    outline-offset: 0.25em;\r\n  }\r\n\r\n/* D\u00e9place le contour de la bo\u00eete de dialogue \u00e0 l'int\u00e9rieur pour qu'il soit visible. */\r\n  [role=\"dialog\"]:focus-visible { \r\n    outline-offset: -0.5em;\r\n  }\r\n</style>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Exemple simple de gestion de la mise au point**\r\n\r\n```Javascript\r\nconst dialogOpen = document.querySelector(\".open\");\r\nconst dialogClose = document.querySelector(\".close\");\r\nconst dialog = document.querySelector('[role=\"dialog\"]');\r\nconst heading = dialog.querySelectorAll('[tabindex=\"-1\"]')[0];\r\nlet trigger;\r\n\r\ndialogOpen.addEventListener(\"click\", open);\r\ndialogClose.addEventListener(\"click\", close);\r\n\r\nfunction open() {\r\n\t// l'\u00e9l\u00e9ment qui a d\u00e9clench\u00e9 l'action.\r\n  trigger = document.activeElement; \r\n\t// Affiche le dialogue.\r\n  dialogToggle(); \r\n}\r\n\r\nfunction close() {\r\n  // Cache la bo\u00eete de dialogue.\r\n  dialogToggle();\r\n}\r\n\r\nfunction dialogToggle() {\r\n  const isOpen = !dialog.hasAttribute(\"hidden\");\r\n\r\n  if (!isOpen) {\r\n    dialog.removeAttribute(\"hidden\");\r\n\t\t// D\u00e9place le focus du bouton vers l'en-t\u00eate de la bo\u00eete de dialogue.\r\n    heading.focus();\r\n  } else {\r\n    dialog.setAttribute(\"hidden\", \"hidden\");\r\n\t\t// D\u00e9place l'attention de l'en-t\u00eate vers le bouton.\r\n    trigger.focus(); \r\n  }\r\n}\r\n```\r\n\r\nSi vous utilisez la bo\u00eete de dialogue modale native en HTML, vous n'avez pas besoin de g\u00e9rer le focus, comme le montre l'[exemple&nbsp;3](#exemple-3).\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Un bouton et une bo\u00eete de dialogue modale native**\r\n\r\n```html\r\n<button type=\"button\" class=\"open\" aria-haspopup=\"dialog\">Se connecter</button>\r\n\r\n<dialog aria-labelledby=\"heading\">\r\n  <form method=\"dialog\">\r\n    <button type=\"button\">Fermer</button>\r\n  </form>\r\n\r\n  <h1 id=\"heading\">Se connecter</h1>\r\n</dialog>\r\n\r\n<script>\r\nconst dialogOpen = document.querySelector(\".open\");\r\nconst dialog = document.querySelector(\"dialog\");\r\n\r\ndialogOpen.addEventListener(\"click\", open);\r\n\r\nfunction open() {\r\n  dialog.showModal();\r\n}\r\n</script>\r\n```\r\n\r\nL'[exemple 2](#exemple-2) illustre le concept de base de la gestion du focus : vous vous souvienez du dernier \u00e9l\u00e9ment focalis\u00e9 en stockant une r\u00e9f\u00e9rence \u00e0 cet \u00e9l\u00e9ment dans une variable \u00e0 l'aide de `document.activeElement`. Avant de d\u00e9placer le focus, vous devez d\u00e9cider o\u00f9 vous voulez le mettre. Plusieurs options s'offrent \u00e0 vous :\r\n\r\n- Le premier \u00e9l\u00e9ment focalisable, s'il y en a un. Cela fonctionne, mais les utilisateurs risquent d'atterrir quelque part au milieu ou \u00e0 la fin du contenu, en fonction de sa position dans le DOM.\r\n- Le bouton de fermeture, s'il y en a un. C'est une option s\u00fbre si vous ne pouvez pas garantir qu'il y a d'autres \u00e9l\u00e9ments interactifs. L'inconv\u00e9nient est que cela peut \u00eatre irritant lorsque la premi\u00e8re chose qu'entend un utilisateur de lecteur d'\u00e9cran est \u00ab bouton de fermeture \u00bb.\r\n- S'il y a un titre, vous pouvez le rendre focalisable en utilisant `tabindex=-1`. Un titre se trouve g\u00e9n\u00e9ralement au d\u00e9but du contenu, et en se concentrant dessus, un lecteur d'\u00e9cran annonce automatiquement son contenu textuel.\r\n- Comme pour l'en-t\u00eate, vous pouvez rendre le dialogue labelis\u00e9 focalisable \u00e0 l'aide de `tabindex=-1`.\r\n\r\nVotre choix d\u00e9pendra de vos possibilit\u00e9s et contraintes et de ce qui fonctionne le mieux pour tes utilisateurs. Je pr\u00e9f\u00e8re me concentrer sur l'en-t\u00eate. Une fois que l'utilisateur a fini d'interagir avec le contenu de la bo\u00eete de dialogue, vous ramenez le focus sur le bouton qui l'a ouverte.\r\n\r\nL'[exemple 1](#exemple-1) utilise une solution de dialogue personnalis\u00e9e, mais en HTML, il existe \u00e9galement un \u00e9l\u00e9ment de dialogue natif (voir [exemple 3](#exemple-3)). Cet \u00e9l\u00e9ment est pratique parce qu'il int\u00e8gre beaucoup de choses que vous devez faire manuellement :\r\n\r\n- Il a un r\u00f4le implicite de dialogue.\r\n- Il fournit des m\u00e9thodes d'ouverture et de fermeture.\r\n- Elle rend le reste de la page inerte.\r\n- Il g\u00e8re le focus.\r\n\r\n<a href=\"https://html.spec.whatwg.org/#dialog-focusing-steps\" target=\"_blank\">La sp\u00e9cification</a> d\u00e9finit les r\u00e8gles de gestion du focus comme suit :\r\n\r\n- S'il existe un descendant focalisable, \u00ab focalisez-le \u00bb.\r\n- Si ce n'est pas le cas, concentre l'\u00e9l\u00e9ment de dialogue lui-m\u00eame.\r\n\r\nLa gestion du focus est essentielle pour rendre les interfaces utilisateur complexes accessibles.99% du temps, il ne faut pas toucher \u00e0 l'ordre du focus. Vous voulez presque toujours que le focus suive l'ordre naturel et laissez les utilisateurs d\u00e9cider quand et o\u00f9 aller ensuite. Vous ne devez sc\u00e9nariser le focus lorsque les utilisateurs ne peuvent pas atteindre certaines parties de l'interface sans faire beaucoup d'efforts. Cela s'applique \u00e9galement \u00e0 l'attribut `autofocus` en HTML, que vous pouvez \u00e9galement utiliser pour d\u00e9placer le focus. Vous devez certainement \u00e9viter de d\u00e9placer le focus dans la plupart des navigations et des formulaires.\r\n\r\nParfois, ce n'est pas l'utilisateur qui d\u00e9clenche l'action. La premi\u00e8re fois que vous visitez de nombreux sites Web europ\u00e9ens, une bo\u00eete de dialogue s'ouvre automatiquement pour afficher une banni\u00e8re de consentement aux cookies. Lorsque vous ne g\u00e8rez pas le focus dans des cas comme celui-ci, les utilisateurs peuvent interagir avec la page en arri\u00e8re-plan sans pouvoir fermer la superposition .",
      "created": "2025-07-21T23:09:24.840211",
      "updated": "2025-07-21T23:44:32.646383",
      "meta_description": "Apprenez \u00e0 g\u00e9rer le focus dans vos modales HTML pour garantir une accessibilit\u00e9 optimale et \u00e9viter des erreurs courantes de navigation clavier.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 36,
      "title": "Affecter les \u00e9l\u00e9ments d\u2019une s\u00e9quence \u00e0 plusieurs variables",
      "slug": "affecter-les-elements-dune-sequence-a-plusieurs-variables",
      "body": "Vous avez un tuple ou une s\u00e9quence de N \u00e9l\u00e9ments que vous souhaitez d\u00e9composer dans une collection de N variables. N\u2019importe quelle s\u00e9quence (ou objet it\u00e9rable) peut \u00eatre d\u00e9compos\u00e9e en variables \u00e0 l\u2019aide d\u2019une simple op\u00e9ration d\u2019affectation. La seule condition est que le nombre de variables et la structure correspondent \u00e0 ceux de la s\u00e9quence. Par exemple :\r\n\r\n```Python\r\n# Exemple avec un tuple\r\ncoordonnees = (10, 20, 30)\r\n\r\nx, y, z = coordonnees\r\n\r\nprint(x)  # 10\r\nprint(y)  # 20\r\nprint(z)  # 30\r\n```\r\n\r\nS\u2019il y a un d\u00e9calage dans le nombre d\u2019\u00e9l\u00e9ments, vous obtiendrez une erreur. Par exemple :\r\n\r\n```Python\r\np = (4, 5)\r\nx, y, z = p  # Erreur : pas assez de valeurs \u00e0 d\u00e9paqueter (3 attendues, 2 re\u00e7ues)\r\n```\r\n\r\nLe d\u00e9paquetage fonctionne en r\u00e9alit\u00e9 avec n\u2019importe quel objet it\u00e9rable, pas seulement les tuples ou les listes. Cela inclut les cha\u00eenes de caract\u00e8res, les fichiers, les it\u00e9rateurs et les g\u00e9n\u00e9rateurs. Lors du d\u00e9paquetage, il se peut que vous souhaitiez parfois ignorer certaines valeurs. Python ne propose pas de syntaxe sp\u00e9ciale pour cela, mais vous pouvez simplement utiliser un nom de variable que vous n\u2019allez pas r\u00e9utiliser. En pratique, on utilise souvent _ comme variable \u00ab jetable \u00bb . \r\n\r\n```Python\r\ncoordonnees = (10, 20, 30)\r\n\r\nx, _, z = coordonnees  # On ignore la valeur 20\r\n\r\nprint(x)  # 10\r\nprint(z)  # 30\r\n```\r\nCependant, assurez-vous que le nom de variable que vous choisissez n\u2019est pas d\u00e9j\u00e0 utilis\u00e9 pour autre chose.\r\n\r\n## Utiliser les expressions \u00e9toile pour d\u00e9paqueter des s\u00e9quences de longueur variable\r\n\r\nVous devez d\u00e9paqueter N \u00e9l\u00e9ments depuis un it\u00e9rable, mais cet it\u00e9rable peut \u00eatre plus long que N \u00e9l\u00e9ments, ce qui provoque une exception \u00ab trop de valeurs \u00e0 d\u00e9paqueter \u00bb.\r\n\r\nLes \u00ab expressions \u00e9toile \u00bb de Python peuvent \u00eatre utilis\u00e9es pour r\u00e9soudre ce probl\u00e8me. Par exemple, supposons que vous donniez un cours et que, \u00e0 la fin du semestre, vous d\u00e9cidiez de ne pas prendre en compte les notes du premier et du dernier devoir, et de ne faire la moyenne que des autres. S\u2019il n\u2019y a que quatre devoirs, vous pouvez simplement d\u00e9paqueter les quatre, mais que faire s\u2019il y en a 24 ? Une expression \u00e9toile facilite cela :\r\n\r\n```Python\r\ndef drop_first_last(grades):\r\n    first, *middle, last = grades\r\n    return avg(middle)\r\n```\r\n\r\nAutre cas d\u2019usage : supposons que vous ayez des enregistrements utilisateurs compos\u00e9s d\u2019un nom et d\u2019une adresse e-mail, suivis d\u2019un nombre arbitraire de num\u00e9ros de t\u00e9l\u00e9phone. Vous pouvez d\u00e9paqueter ces enregistrements ainsi :\r\n\r\n```Python\r\n# Enregistrements utilisateurs : nom, email, puis plusieurs num\u00e9ros de t\u00e9l\u00e9phone\r\nuser_record = (\"Alice Dupont\", \"alice@example.com\", \"0123456789\", \"0987654321\", \"0147258369\")\r\n\r\n# D\u00e9paquetage avec expression \u00e9toile pour r\u00e9cup\u00e9rer les num\u00e9ros de t\u00e9l\u00e9phone\r\nname, email, *phone_numbers = user_record\r\n\r\nprint(f\"Nom : {name}\")\r\nprint(f\"E-mail : {email}\")\r\nprint(\"Num\u00e9ros de t\u00e9l\u00e9phone :\")\r\nfor number in phone_numbers:\r\n    print(f\" - {number}\")\r\n```\r\n\r\nIl est important de noter que la variable `phone_numbers` sera toujours une liste, quel que soit le nombre de num\u00e9ros de t\u00e9l\u00e9phone d\u00e9paquet\u00e9s (m\u00eame s\u2019il n\u2019y en a aucun). Ainsi, tout code utilisant `phone_numbers` n\u2019aura pas \u00e0 g\u00e9rer le cas o\u00f9 ce ne serait pas une liste, ni \u00e0 effectuer de v\u00e9rifications suppl\u00e9mentaires de type.\r\n\r\nLa variable \u00e9toil\u00e9e (`*`) peut \u00e9galement \u00eatre plac\u00e9e en d\u00e9but de liste lors du d\u00e9paquetage. Par exemple, supposons que vous disposiez d\u2019une s\u00e9quence contenant les chiffres de vente de votre entreprise pour les huit derniers trimestres. Si vous souhaitez comparer le chiffre du trimestre le plus r\u00e9cent avec la moyenne des sept trimestres pr\u00e9c\u00e9dents, vous pouvez \u00e9crire ceci :\r\n\r\n```Python\r\n# Exemple de d\u00e9paquetage avec une variable \u00e9toil\u00e9e en premi\u00e8re position\r\n*trailing_qtrs, current_qtr = sales_record\r\n\r\n# Calcul de la moyenne des sept derniers trimestres\r\ntrailing_avg = sum(trailing_qtrs) / len(trailing_qtrs)\r\n\r\n# Comparaison entre la moyenne et le chiffre du trimestre actuel\r\nreturn avg_comparison(trailing_avg, current_qtr)\r\n```\r\nLe d\u00e9paquetage \u00e9tendu est sp\u00e9cialement con\u00e7u pour d\u00e9paqueter des it\u00e9rables dont la longueur est inconnue ou variable. Souvent, ces it\u00e9rables contiennent un composant ou un sch\u00e9ma connu dans leur construction (par exemple, \u00ab tout ce qui suit l\u2019\u00e9l\u00e9ment 1 est un num\u00e9ro de t\u00e9l\u00e9phone \u00bb). Le d\u00e9paquetage avec l\u2019\u00e9toile (`*`) permet au d\u00e9veloppeur de tirer parti facilement de ces sch\u00e9mas, sans avoir \u00e0 faire des manipulations compliqu\u00e9es pour acc\u00e9der aux \u00e9l\u00e9ments pertinents.\r\n\r\nIl est important de noter que la syntaxe \u00e9toile est particuli\u00e8rement utile lorsqu\u2019on it\u00e8re sur une s\u00e9quence de tuples de longueurs variables. Par exemple, une s\u00e9quence de tuples tagu\u00e9s :\r\n\r\n```Python\r\n# Exemple de s\u00e9quence de tuples tagu\u00e9s\r\nrecords = [\r\n    (\"info\", \"Alice\", 30, \"Paris\"),\r\n    (\"contact\", \"Bob\", \"bob@example.com\", \"0123456789\", \"9876543210\"),\r\n    (\"info\", \"Charlie\", 25),\r\n    (\"contact\", \"Diana\", \"diana@example.com\")\r\n]\r\n\r\nfor record_type, *data in records:\r\n    if record_type == \"info\":\r\n        name, age, *location = data\r\n        location = location[0] if location else \"Inconnu\"\r\n        print(f\"Info - Nom: {name}, \u00c2ge: {age}, Lieu: {location}\")\r\n    elif record_type == \"contact\":\r\n        name, email, *phones = data\r\n        print(f\"Contact - Nom: {name}, Email: {email}, T\u00e9l\u00e9phones: {phones}\")\r\n```\r\n\r\nDans cet exemple, chaque tuple commence par un tag qui indique le type d\u2019enregistrement, comme \u00ab\u00a0`info`\u00a0\u00bb ou \u00ab\u00a0`contact`\u00a0\u00bb. Le reste des \u00e9l\u00e9ments est captur\u00e9 dans une liste gr\u00e2ce au d\u00e9paquetage \u00e9toile (\u00ab\u00a0`*data`\u00a0\u00bb). Ensuite, selon le type d\u2019enregistrement, on d\u00e9paquette cette liste en variables sp\u00e9cifiques. Cette approche permet de g\u00e9rer facilement des tuples de longueurs variables, notamment pour r\u00e9cup\u00e9rer un nombre ind\u00e9fini d\u2019\u00e9l\u00e9ments, comme plusieurs num\u00e9ros de t\u00e9l\u00e9phone, sans compliquer le code avec des indices ou des boucles suppl\u00e9mentaires.\r\n",
      "created": "2025-07-21T23:53:30.919894",
      "updated": "2025-07-22T00:33:50.939993",
      "meta_description": "D\u00e9couvrez comment d\u00e9composer facilement des s\u00e9quences Python, y compris avec des longueurs variables, gr\u00e2ce au d\u00e9paquetage et aux expressions \u00e9toile.",
      "status_id": 3,
      "categories_id": 4
    },
    {
      "id": 37,
      "title": "Limiter l'attention",
      "slug": "limiter-l-attention",
      "body": "Si vous d\u00e9placez le focus, vous devez vous assurer que le reste de la page est inactif afin que l'utilisateur ne puisse interagir qu'avec le contenu actuellement pertinent. Si vous ne le faites pas, l'utilisateur peut accidentellement sortir de cette zone, se perdre et avoir du mal \u00e0 retrouver son chemin, comme le montrent les exemples [1](#exemple-1), [2](#exemple-2) et [3](#exemple-3). La clef est de contenir ou de pi\u00e8ger l'attention dans la zone actuellement pertinente de la page et rendre le reste inaccessible.\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Focus contenir dans une bo\u00eete de dialogue modale personnalis\u00e9e**\r\n\r\n```html\r\n<button type=\"button\" class=\"open\" aria-haspopup=\"dialog\">Se connecter</button>\r\n<div role=\"dialog\" aria-modal=\"true\" hidden aria-labelledby=\"heading\">\r\n  <div>\r\n    <button type=\"button\" class=\"close\">Fermer</button>\r\n    <h1 id=\"heading\" tabindex=\"-1\">Se connecter</h1>\r\n    <a href=\"#\">Un lien</a>\r\n  </div>\r\n</div>\r\n<script>\r\n  const dialogOpen = document.querySelector(\".open\");\r\n  const dialogClose = document.querySelector(\".close\");\r\n  const dialog = document.querySelector('[role=\"dialog\"]');\r\n  const heading = dialog.querySelectorAll('[tabindex=\"-1\"]')[0];\r\n  // Trouve tous les \u00e9l\u00e9ments sur lesquels on peut mettre l'accent dans le dialogue.\r\n  const focusableElements = dialog.querySelectorAll(\"button, a\");\r\n  let trigger;\r\n  dialogOpen.addEventListener(\"click\", open);\r\n  dialogClose.addEventListener(\"click\", close);\r\n  dialog.addEventListener(\"keydown\", (e) => {\r\n    // Ne rien faire si l'utilisateur n'appuie pas sur la touche Tab.\r\n    if (e.code !== \"Tab\") return;\r\n    // C'est le premier \u00e9l\u00e9ment sur lequel on peut mettre l'accent dans le dialogue.\r\n    const first = focusableElements[0];\r\n    // C'est le dernier \u00e9l\u00e9ment sur lequel on peut mettre l'accent dans la bo\u00eete de dialogue.\r\n    const last = focusableElements[focusableElements.length - 1];\r\n    // Il s'agit de l'\u00e9l\u00e9ment sur lequel on se concentre actuellement.\r\n    const active = document.activeElement;\r\n    // Lorsque l'utilisateur appuie sur la touche Shift\r\n    if (e.shiftKey) {\r\n      // et l'\u00e9l\u00e9ment sur lequel on se concentre actuellement est le premier \u00e9l\u00e9ment\r\n      if (first === active) {\r\n        e.preventDefault();\r\n        // emp\u00eacher le comportement par d\u00e9faut et d\u00e9placer le focus sur le dernier \u00e9l\u00e9ment sur lequel le focus est possible.\r\n        last.focus();\r\n        8\r\n      }\r\n    } else if (last === active) {\r\n      // Si l'utilisateur n'appuie pas sur Shift et que le dernier \u00e9l\u00e9ment est l'\u00e9l\u00e9ment sur lequel on se concentre actuellement, le focus se d\u00e9place sur le premier \u00e9l\u00e9ment.\r\n      e.preventDefault();\r\n      first.focus();\r\n    }\r\n  });\r\n\r\n  function open() {\r\n    trigger = document.activeElement;\r\n    dialogToggle();\r\n  }\r\n\r\n  function close() {\r\n    dialogToggle();\r\n  }\r\n\r\n  function dialogToggle() {\r\n    const isOpen = !dialog.hasAttribute(\"hidden\");\r\n    if (!isOpen) {\r\n      dialog.removeAttribute(\"hidden\");\r\n      heading.focus();\r\n    } else {\r\n      dialog.setAttribute(\"hidden\", \"hidden\");\r\n      trigger.focus();\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Focus contenu dans un \u00e9l\u00e9ment de dialogue personnalis\u00e9**\r\n\r\n```html\r\n<div class=\"page-wrapper\">\r\n\t<!-- Tout le contenu de la page principale est contenu dans un seul \u00e9l\u00e9ment. -->\r\n\t<header>\r\n    <a href=\"#\">Accueil</a>\r\n  </header>\r\n\r\n  <main>\r\n    <button class=\"open\" aria-haspopup=\"dialog\">Se connecter</button>\r\n  </main>\r\n</div>\r\n<div role=\"dialog\" aria-modal=\"true\" hidden aria-labelledby=\"heading\">\r\n  <div>\r\n    <button type=\"button\" class=\"close\">Fermer</button>\r\n    <h1 id=\"heading\" tabindex=\"-1\">Se connecter</h1>\r\n    <a href=\"#\">Un lien</a>\r\n  </div>\r\n</div>\r\n<script>\r\nconst pageWrapper = document.querySelector('.page-wrapper');\r\nconst dialogOpen = document.querySelector(\".open\");\r\nconst dialogClose = document.querySelector(\".close\");\r\nconst dialog = document.querySelector('[role=\"dialog\"]');\r\nconst heading = dialog.querySelectorAll('[tabindex=\"-1\"]')[0];\r\nlet trigger;\r\n\r\ndialogOpen.addEventListener(\"click\", open);\r\ndialogClose.addEventListener(\"click\", close);\r\n\r\nfunction open() {\r\n  trigger = document.activeElement;\r\n\t// L'enveloppe du contenu principal devient inerte lorsque la bo\u00eete de dialogue s'ouvre.\r\n  pageWrapper.setAttribute('inert', 'inert') \r\n  dialogToggle();\r\n}\r\n\r\nfunction close() {\r\n  // Le statut inerte est supprim\u00e9 lorsque la bo\u00eete de dialogue se ferme.\r\n  pageWrapper.removeAttribute('inert') \r\n    dialogToggle();\r\n}\r\n\r\nfunction dialogToggle() {\r\n  const isOpen = !dialog.hasAttribute(\"hidden\");\r\n\r\n  if (!isOpen) {\r\n    dialog.removeAttribute(\"hidden\");\r\n    heading.focus();\r\n  } else {\r\n    dialog.setAttribute(\"hidden\", \"hidden\");\r\n    trigger.focus();\r\n  }\r\n}\r\n</script>\r\n```\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Focus contenu nativement dans un \u00e9l\u00e9ment de dialogue**\r\n\r\n```html\r\n<button type=\"button\" class=\"open\">Se connecter</button>\r\n\r\n<dialog tabindex=\"-1\" aria-labelledby=\"heading\">\r\n  <form method=\"dialog\">\r\n    <button type=\"button\">Fermer</button>\r\n  </form>\r\n\r\n  <h1 id=\"heading\">Se connecter</h1>\r\n</dialog>\r\n\r\n<script>\r\nconst button = document.querySelector(\"button\");\r\nconst dialog = button.nextElementSibling;\r\n\r\nbutton.addEventListener(\"click\", (e) => {\r\n  dialog.showModal(); // La m\u00e9thode showModal() contient du contenu automatiquement.\r\n});\r\n</script>\r\n```\r\n\r\nIl y a une diff\u00e9rence entre pi\u00e9ger le focus et contenir le focus. L'[exemple 1](#exemple-1) montre un pi\u00e8ge \u00e0 focus classique : lorsque l'utilisateur atteint le dernier \u00e9l\u00e9ment focalisable et appuie sur `Tab`, le focus passe au premier \u00e9l\u00e9ment. Lorsqu'il trouve le premier \u00e9l\u00e9ment et qu'il appuie sur `Shift + Tab`, le focus passe au dernier \u00e9l\u00e9ment focalisable. Il n'y a pas d'autre moyen de sortir de la bo\u00eete de dialogue que de la fermer, sauf si vous utilisez un lecteur d'\u00e9cran. Nous utilisons cette technique depuis longtemps pour les fen\u00eatres modales. C'est un moyen efficace de s'assurer que l'utilisateur ne peut pas s'\u00e9chapper accidentellement de l'\u00e9l\u00e9ment, mais il y a deux probl\u00e8mes potentiels.\r\n\r\nTout d'abord, les utilisateurs peuvent ne pas s'attendre \u00e0 ce comportement car, en g\u00e9n\u00e9ral, lorsqu'ils atteignent la fin ou le d\u00e9but de la page, l'attention se porte sur l'interface utilisateur du navigateur.\r\n\r\nDeuxi\u00e8mement, dans l'article \u00ab\u00a0[Rendre les \u00e9l\u00e9ments focalisables](/articles/rendre-les-elements-focalisables-34.html)\u00a0\u00bb, vous avez appris quels sont les \u00e9l\u00e9ments qui peuvent recevoir le focus. Si vous combinez cette liste avec tous les attributs qui peuvent ajouter ou supprimer cette capacit\u00e9, la liste devient longue et difficile \u00e0 maintenir, et certains \u00e9l\u00e9ments risquent d'\u00eatre oubli\u00e9s. La solution de l'[exemple 1](#exemple-1) ne fonctionne que parce qu'elle part du principe que la bo\u00eete de dialogue ne contient que des boutons et des liens.\r\n\r\nBeaucoup de gens ont quand m\u00eame opt\u00e9 pour les pi\u00e8ges \u00e0 focus parce que, jusqu'\u00e0 r\u00e9cemment, il n'y avait pas d'autre moyen de contenir le focus. Au d\u00e9but de l'ann\u00e9e 2023, tous les principaux navigateurs ont ajout\u00e9 la prise en charge de l'attribut `inert`. La bo\u00eete de dialogue personnalis\u00e9e de l'[exemple 2](#exemple-2) ne pi\u00e8ge pas le focus mais le contient en rendant le reste de la page inactif. Tout ce qui n'est pas la bo\u00eete de dialogue est envelopp\u00e9 dans une page `div` avec la classe `.page-wrapper`. Lorsque la bo\u00eete de dialogue est ouverte, le script ajoute l'attribut `inert` \u00e0 cette `div`, ce qui rend tous ses descendants inactifs. Visuellement, ils sont toujours l\u00e0, mais vous ne pouvez pas les mettre en \u00e9vidence et ils ne sont temporairement pas expos\u00e9s dans l'arbre d'accessibilit\u00e9. Cela limite l'interaction au contenu actuellement pertinent sans pi\u00e9ger l'utilisateur, qui peut toujours quitter la page. Cette solution est beaucoup plus proche du comportement natif et est plus s\u00fbre et plus facile \u00e0 mettre en \u0153uvre. L'\u00e9l\u00e9ment de dialogue natif (voir [exemple 3](#exemple-3)) est livr\u00e9 avec ce comportement par d\u00e9faut.\r\n\r\nL'attribut `inert` et l'\u00e9l\u00e9ment dialogue permettent de s'assurer beaucoup plus facilement que les utilisateurs ne se perdent pas ailleurs sur la page, mais les pi\u00e8ges \u00e0 focus peuvent encore avoir des avantages. La meilleure fa\u00e7on de d\u00e9terminer si vous en avez besoin est de faire un test avec les utilisateurs et de d\u00e9cider en fonction de leurs commentaires.",
      "created": "2025-07-22T23:54:04.782503",
      "updated": "2025-07-23T00:46:25.198005",
      "meta_description": "G\u00e9rer le focus dans les dialogues pour une meilleure accessibilit\u00e9 : pi\u00e8ges, inert, et bonnes pratiques \u00e0 conna\u00eetre en HTML & JavaScript.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 38,
      "title": "Pr\u00e9server l'ordre",
      "slug": "preserver-l-ordre",
      "body": "Un d\u00e9calage entre l'ordre des \u00e9l\u00e9ments dans le document et l'ordre visuel peut entra\u00eener de la confusion et de l'impr\u00e9visibilit\u00e9. Cela rend difficile la navigation, l'orientation et la compr\u00e9hension de l'interface utilisateur pour les utilisateurs de clavier et de lecteurs d'\u00e9cran. \r\n\r\nLorsque vous cr\u00e9ez des mises en page en CSS, laissez les \u00e9l\u00e9ments s'\u00e9couler naturellement sur les axes x et y et abstienez-vous d'utiliser des attributs et des propri\u00e9t\u00e9s qui affectent l'ordre visuel ou l'ordre de tabulation, comme le montrent les exemples [1](#exemple-1) et [2](#exemple-2).\r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Contenu align\u00e9 naturellement sur l'axe des x**\r\n\r\n```css\r\nul {\r\n  display: flex;\r\n  gap: 1rem;\r\n}\r\n```\r\n\r\n**<span id=\"exemple-2\">Exemple&nbsp;2</span>&nbsp;&ndash;&nbsp;Une mise en page en deux colonnes suivant le flux naturel du contenu**\r\n\r\n```css\r\nmain {\r\n  display: grid;\r\n  grid-template-columns: 2fr 1fr;\r\n  gap: 1rem;\r\n}\r\n```\r\n\r\nLorsque vous visitez une page et que vous appuyez sur `Tab`, la focalisation passe au premier \u00e9l\u00e9ment focalisable dans le DOM. Lorsque vous appuyez \u00e0 nouveau, il passe au deuxi\u00e8me \u00e9l\u00e9ment, etc. C'est un comportement pr\u00e9visible et attendu. Lorsque vous modifiez la mise en page d'une page \u00e0 l'aide de CSS, vous devez vous assurer que l'exp\u00e9rience reste ainsi. L'ordre doit \u00eatre s\u00e9quentiel, m\u00eame lorsque vous transformez une liste verticale en liste horizontale ou que vous disposez les \u00e9l\u00e9ments dans une grille. Pour la plupart des langues naturelles , comme l'anglais, le fran\u00e7ais ou l'allemand, cela signifie que l'attention se d\u00e9place de haut en bas, de gauche \u00e0 droite. Dans d'autres langues, comme l'h\u00e9breu, il se d\u00e9place de haut en bas, de droite \u00e0 gauche.\r\n\r\nLa chose la plus importante que vous devez savoir est que le fait de changer l'ordre visuel de n'affecte pas l'ordre naturelle. Le premier lien qui re\u00e7oit le focus dans l'[exemple 3](#exemple-3) est \u00e0 la fois le premier \u00e9l\u00e9ment du document et de la page.\r\n\r\n**<span id=\"exemple-3\">Exemple&nbsp;3</span>&nbsp;&ndash;&nbsp;Une liste de trois liens**\r\n\r\n```html\r\n<ul>\r\n  <li><a href=\"#\">Un</a></li>\r\n  <li><a href=\"#\">Deux</a></li>\r\n  <li><a href=\"#\">Trois</a></li>\r\n</ul>\r\n```\r\n\r\nC'est \u00e9galement le cas lorsque vous laissez les \u00e9l\u00e9ments s'\u00e9couler naturellement sur l'axe des x \u00e0 l'aide de Flexbox (voir l'[exemple 4](#exemple-4)). \r\n\r\n**<span id=\"exemple-4\">Exemple&nbsp;4</span>&nbsp;&ndash;&nbsp;Alignement horizontal de la liste**\r\n\r\n```css\r\nul {\r\n  display: flex;\r\n  gap: 1rem;\r\n  list-style-type: none;\r\n}\r\n```\r\n\r\nSi vous rompez le flux naturel et r\u00e9organisez les \u00e9l\u00e9ments manuellement, comme le montre l'[exemple 5](#exemple-5), vous obtienez un ordre visuel diff\u00e9rent, mais l'ordre des onglets reste le m\u00eame.\r\n\r\n**<span id=\"exemple-5\">Exemple&nbsp;5</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Modifier l'ordre naturel \u00e0 l'aide de la propri\u00e9t\u00e9 d'ordre**\r\n\r\n```css\r\nul {\r\n  display: flex;\r\n  gap: 1rem;\r\n  list-style-type: none;\r\n}\r\n\r\nli:first-child {  order: 2 }\r\nli:nth-child(2) { order: 3 }\r\nli:last-child {   order: 1 }\r\n```\r\n\r\nSi l'ordre visuel et l'ordre du DOM ne correspondent pas, cela peut irriter et troubler les utilisateurs jusqu'\u00e0 ce que l'exp\u00e9rience soit si mauvaise que le site soit inutilisable. Par exemple :\r\n\r\n- L'ordre visuel pr\u00e9occupe les utilisateurs de clavier car ils peuvent avoir du mal \u00e0 pr\u00e9dire o\u00f9 le focus ira ensuite.\r\n- Cela peut irriter les utilisateurs de loupes d'\u00e9cran si la partie agrandie de l'\u00e9cran saute beaucoup.\r\n- Si un utilisateur aveugle travaille avec un utilisateur voyant qui lit la page dans l'ordre visuel, il peut \u00eatre d\u00e9rout\u00e9 lorsqu'il rencontre des informations dans des ordres diff\u00e9rents.\r\n\r\nAyant appris \u00e0 conna\u00eetre l'attribut `tabindex` dans l'article : [Rendre les \u00e9l\u00e9ments focalisables](/articles/rendre-les-elements-focalisables-34.html), vous pouvez penser que vous pouvez compenser le probl\u00e8me caus\u00e9 par le code de l'[exemple 5](#exemple-5) en adaptant l'indice de tabulation de chaque \u00e9l\u00e9ment en cons\u00e9quence, comme le montre l'[exemple 6](#exemple-6). Si vous utilisez la touche `Tab`, l'ordre DOM et l'ordre visuel correspondent \u00e0 nouveau, mais le curseur virtuel d'un lecteur d'\u00e9cran ignore l'attribut et suit toujours l'ordre DOM original. En plus de cela, vous devez maintenant g\u00e9rer et maintenir un ordre de tabulation significatif pour l'ensemble de la page, ce qui est fastidieux et source d'erreurs.\r\n\r\n**<span id=\"exemple-6\">Exemple&nbsp;6</span>&nbsp;&ndash;&nbsp;Mauvaise pratique : Modifier l'ordre naturel du DOM en utilisant la propri\u00e9t\u00e9 `tabindex`**\r\n\r\n```html\r\n<ul>\r\n  <li><a href=\"#\" tabindex=\"2\">Un</a></li>\r\n  <li><a href=\"#\" tabindex=\"3\">Deux</a></li>\r\n  <li><a href=\"#\" tabindex=\"1\">Trois</a></li>\r\n</ul>\r\n```\r\nN'utilisez pas d'index de tabulation dont la valeur est sup\u00e9rieure \u00e0 0, et ne r\u00e9organisez pas les \u00e9l\u00e9ments interactifs en utilisant des propri\u00e9t\u00e9s CSS comme `flex-direction`, `order`, `grid-auto-flow`, ou des techniques comme le placement explicite dans la Grille, le positionnement absolu ou les marges n\u00e9gatives. Lorsque vous avez affaire \u00e0 des \u00e9l\u00e9ments interactifs, l'ordre visuel doit toujours repr\u00e9senter l'ordre DOM le mieux possible, car l'ordre des tabulations suit l'ordre DOM, quelle que soit la fa\u00e7on dont vous disposez visuellement les \u00e9l\u00e9ments .\r\n\r\n\r\n\r\n",
      "created": "2025-07-23T23:51:33.074579",
      "updated": "2025-07-24T01:01:49.084008",
      "meta_description": "\u00c9vitez les pi\u00e8ges de l'ordre visuel en CSS : comprenez son impact sur l'accessibilit\u00e9, la navigation clavier et les lecteurs d'\u00e9cran.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 39,
      "title": "Conserver les N derniers \u00e9l\u00e9ments",
      "slug": "conserver-les-n-derniers-elements",
      "body": "Vous souhaitez conserver un historique limit\u00e9 des derniers \u00e9l\u00e9ments rencontr\u00e9s lors d'une it\u00e9ration ou d'un autre type de traitement.  Conserver un historique limit\u00e9 est un cas d'usage id\u00e9al pour un `collections.deque`. Par exemple, le code suivant effectue une recherche textuelle simple sur une s\u00e9quence de lignes et renvoie la ligne correspondante ainsi que les N lignes de contexte pr\u00e9c\u00e9dentes lorsqu'un match est trouv\u00e9 :\r\n\r\n```Python\r\nfrom collections import deque\r\n\r\n\r\ndef search(lines, pattern, history=5):\r\n    previous_lines = deque(maxlen=history)\r\n    for line in lines:\r\n        if pattern in line:\r\n            yield line, previous_lines\r\n            previous_lines.append(line)\r\n\r\n# Example use on a file\r\nif __name__ == '__main__':\r\n    with open('somefile.txt') as f:\r\n        for line, prevlines in search(f, 'python', 5):\r\n            for pline in prevlines:\r\n                print(pline, end='')\r\n                print(line, end='')\r\n                print('-' * 20)\r\n```\r\n\r\nLorsqu'on \u00e9crit du code pour rechercher des \u00e9l\u00e9ments, il est courant d'utiliser une fonction g\u00e9n\u00e9ratrice avec `yield`, comme dans la solution de cet article. Cela permet de d\u00e9coupler la logique de recherche du code qui utilise les r\u00e9sultats. L'utilisation de `deque(maxlen=N)` cr\u00e9e une file de taille fixe. Lorsque de nouveaux \u00e9l\u00e9ments sont ajout\u00e9s alors que la file est pleine, l'\u00e9l\u00e9ment le plus ancien est automatiquement supprim\u00e9. Par exemple : \r\n\r\n```Python\r\nfrom collections import deque\r\n\r\n\r\nq = deque(maxlen=3)\r\nq.append(1)\r\nq.append(2)\r\nq.append(3)\r\nprint(q)\r\nq.append(4)\r\nprint(q)\r\nq.append(5)\r\nprint(q)\r\n```\r\n\r\nBien qu'il soit possible d'effectuer ces op\u00e9rations manuellement sur une liste (ajouts, suppressions, etc.), la solution utilisant une file est bien plus \u00e9l\u00e9gante et nettement plus rapide.\r\n\r\nPlus g\u00e9n\u00e9ralement, un deque peut \u00eatre utilis\u00e9 chaque fois qu'une structure de file simple est n\u00e9cessaire. Si vous ne sp\u00e9cifiez pas de taille maximale, vous obtenez une file sans limite de taille permettant d'ajouter ou de retirer des \u00e9l\u00e9ments \u00e0 chaque extr\u00e9mit\u00e9. Par exemple :\r\n\r\n```Python\r\nfrom collections import deque\r\n\r\n\r\nq = deque()\r\nq.append(1)\r\nq.append(2)\r\nq.append(3)\r\nprint(q)\r\nq.appendleft(4)\r\nprint(q)\r\nq.pop()\r\nprint(q)\r\nq.popleft()\r\nprint(q)\r\n```\r\n\r\nL'ajout ou la suppression d'\u00e9l\u00e9ments \u00e0 chaque extr\u00e9mit\u00e9 d'une file a une complexit\u00e9 O(1). Ceci contraste avec une liste classique o\u00f9 l'insertion ou la suppression en t\u00eate de liste a une complexit\u00e9 O(N).\r\n",
      "created": "2025-07-24T23:12:02.087757",
      "updated": "2025-07-24T23:36:54.138877",
      "meta_description": "Apprenez \u00e0 conserver efficacement les N derniers \u00e9l\u00e9ments gr\u00e2ce \u00e0 collections.deque et am\u00e9liorez vos performances Python avec \u00e9l\u00e9gance.",
      "status_id": 3,
      "categories_id": 4
    },
    {
      "id": 40,
      "title": "Trouver les N plus grands ou plus petits \u00e9l\u00e9ments",
      "slug": "trouver-les-n-plus-grands-ou-plus-petits-elements",
      "body": "Vous souhaitez cr\u00e9er une liste des N plus grands ou plus petits \u00e9l\u00e9ments d'une collection.\r\n\r\n```Python\r\nimport heapq\r\nfrom random import sample, seed\r\n\r\n\r\nseed(1)\r\nnums = sample(list(range(1, 51)), 11)\r\nprint(nums)\r\nprint(heapq.nlargest(3, nums)) # 42, 37, 32\r\nprint(heapq.nsmallest(3, nums)) # 5, 8, 9\r\n```\r\n\r\nCes deux fonctions acceptent \u00e9galement un param\u00e8tre key qui permet de les utiliser avec des structures de donn\u00e9es plus complexes. Par exemple :\r\n\r\n```Python\r\nfrom collections import namedtuple\r\nimport heapq\r\n\r\n\r\nEmployee = namedtuple('Employee', ['name', 'salary', 'seniority'])\r\n\r\nemployees = [\r\n    Employee('Pierre', 3500, 3),\r\n    Employee('Sophie', 4200, 1),\r\n    Employee('Jean', 3800, 5)\r\n]\r\n\r\n# Top 2 des salaires les plus \u00e9lev\u00e9s\r\nhigh_salary = heapq.nlargest(2, employees, key=lambda e: e.salary)\r\nprint(high_salary)\r\n# [Employ\u00e9(name='Sophie', salary=4200, seniority=1),\r\n#  Employ\u00e9(name='Jean', salary=3800, seniority=5)]\r\n\r\n# 1er en anciennet\u00e9\r\nseniorityer = heapq.nlargest(1, employees, key=lambda e: e.seniority)\r\nprint(seniorityer)\r\n# [Employee(name='Jean', salary=3800, seniority=5)]\r\n```\r\n\r\nSi vous recherchez les N plus petits ou plus grands \u00e9l\u00e9ments d'une collection et que N est petit par rapport \u00e0 la taille totale de cette collection, ces fonctions offrent des performances sup\u00e9rieures. En arri\u00e8re-plan, ces fonctions fonctionnent en convertissant d'abord les donn\u00e9es en une liste o\u00f9 les \u00e9l\u00e9ments sont ordonn\u00e9s en tas (heap). Par exemple :\r\n\r\n```Python\r\nimport heapq\r\n\r\n\r\ndata = [3, 1, 4, 1, 5, 9, 2, 6]\r\n\r\n# \u00c9tape 1 : Conversion en heap (sur place)\r\nheapq.heapify(data)  \r\n# \u2192 data devient [1, 1, 2, 3, 5, 9, 4, 6] \r\n# (structure arborescente implicite)\r\n\r\n# \u00c9tape 2 : Extraction des 3 plus petits\r\npetits = [heapq.heappop(data) for _ in range(3)]\r\n# \u2192 [1, 1, 2]\r\n\"\"\"\r\nvisualisation\r\n       1\r\n     /   \\\r\n    1     2\r\n   / \\   / \\\r\n  3   5 9   4\r\n /\r\n6\r\n\"\"\"\r\n```\r\n\r\nLa caract\u00e9ristique principale d'un tas (heap) est que heap[0] est toujours l'\u00e9l\u00e9ment le plus petit. De plus, les \u00e9l\u00e9ments suivants peuvent \u00eatre facilement obtenus en utilisant la m\u00e9thode heapq.heappop(), qui retire le premier \u00e9l\u00e9ment et le remplace par le prochain \u00e9l\u00e9ment le plus petit (une op\u00e9ration qui s'effectue en O(log N), o\u00f9 N est la taille du tas). Par exemple, pour trouver les trois plus petits \u00e9l\u00e9ments, vous pourriez faire ceci :\r\n\r\n```Python\r\nimport heapq\r\n\r\ndata = [5, 3, 8, 1, 4]\r\nheapq.heapify(data)  # Transforme en tas: [1, 3, 8, 5, 4]\r\n\r\n# Extraction des 3 plus petits \u00e9l\u00e9ments\r\nfirst = heapq.heappop(data)  # 1, nouveau tas: [3, 4, 8, 5]\r\nsecond = heapq.heappop(data)   # 3, nouveau tas: [4, 5, 8]\r\nthird = heapq.heappop(data) # 4, nouveau tas: [5, 8]\r\n```\r\nLes fonctions `nlargest()` et `nsmallest()` sont particuli\u00e8rement adapt\u00e9es lorsque vous cherchez un petit nombre d'\u00e9l\u00e9ments. Si vous ne recherchez que le plus petit ou le plus grand \u00e9l\u00e9ment (N=1), il est plus efficace d'utiliser `min()` et `max()`. De m\u00eame, si N est proche de la taille totale de la collection, il est g\u00e9n\u00e9ralement plus rapide de trier d'abord la liste puis d'utiliser un d\u00e9coupage (par exemple, `sorted(items)[:N]` ou `sorted(items)[-N:]`).\r\n\r\nBien qu'il ne soit pas indispensable d'utiliser cette approche, l'impl\u00e9mentation d'un tas (heap) reste un sujet d'\u00e9tude int\u00e9ressant et formateur. On en trouve g\u00e9n\u00e9ralement des explications dans les ouvrages classiques d'algorithmique et de structures de donn\u00e9es. La documentation officielle du module heapq aborde \u00e9galement ces d\u00e9tails d'impl\u00e9mentation sous-jacents.\r\n",
      "created": "2025-07-24T23:43:35.800547",
      "updated": "2025-07-25T00:15:19.977346",
      "meta_description": "Trouvez rapidement les N plus grands ou plus petits \u00e9l\u00e9ments d\u2019une collection avec heapq, une solution performante et \u00e9l\u00e9gante en Python.",
      "status_id": 3,
      "categories_id": 4
    },
    {
      "id": 41,
      "title": "Impl\u00e9menter une file de priorit\u00e9",
      "slug": "implementer-une-file-de-priorite",
      "body": "Vous souhaitez impl\u00e9menter une file (queue) qui trie les \u00e9l\u00e9ments selon une priorit\u00e9 donn\u00e9e et qui retourne toujours l\u2019\u00e9l\u00e9ment avec la priorit\u00e9 la plus \u00e9lev\u00e9e \u00e0 chaque op\u00e9ration de retrait (`pop`).\r\n\r\nLa classe suivante utilise le module `heapq` pour impl\u00e9menter une file de priorit\u00e9 simple :\r\n\r\n```python\r\nimport heapq\r\n\r\n\r\nclass PriorityQueue:\r\n    def __init__(self):\r\n        self._queue = []\r\n        self._index = 0\r\n\r\n    def push(self, item, priority):\r\n        heapq.heappush(self._queue, (-priority, self._index, item))\r\n        self._index += 1\r\n\r\n    def pop(self):\r\n        return heapq.heappop(self._queue)[-1]\r\n```\r\n\r\nVoici un exemple de la mani\u00e8re dont elle pourrait \u00eatre utilis\u00e9e :\r\n\r\n```python\r\nclass Item:\r\n    def __init__(self, name):\r\n        self.name = name\r\n\r\n    def __repr__(self):\r\n        return 'Item({!r})'.format(self.name)\r\n\r\nq = PriorityQueue()\r\nq.push(Item('foo'), 1)\r\nq.push(Item('bar'), 5)\r\nq.push(Item('spam'), 4)\r\nq.push(Item('grok'), 1)\r\nq.pop()\r\nprint(Item('bar'))\r\nq.pop()\r\nprint(Item('spam'))\r\nq.pop()\r\nprint(Item('foo'))\r\nq.pop()\r\nprint(Item('grok'))\r\n```\r\n\r\nRemarquez que la premi\u00e8re op\u00e9ration `pop()` a retourn\u00e9 l\u2019\u00e9l\u00e9ment avec la priorit\u00e9 la plus \u00e9lev\u00e9e.\r\nNotez \u00e9galement que les deux \u00e9l\u00e9ments ayant la m\u00eame priorit\u00e9 (foo et grok) ont \u00e9t\u00e9 retourn\u00e9s dans le m\u00eame ordre que celui dans lequel ils ont \u00e9t\u00e9 ins\u00e9r\u00e9s dans la file.\r\n\r\nL\u2019\u00e9l\u00e9ment central de cette recette concerne l\u2019utilisation du module `heapq`. Les fonctions heapq.heappush() et heapq.heappop() ins\u00e8rent et retirent des \u00e9l\u00e9ments d\u2019une liste `_queue` de mani\u00e8re \u00e0 ce que le premier \u00e9l\u00e9ment de la liste ait la plus petite priorit\u00e9 (comme discut\u00e9 dans l'article : \u00ab [Trouver les N plus grands ou plus petits \u00e9l\u00e9ments](/articles/trouver-les-n-plus-grands-ou-plus-petits-elements-40.html) \u00bb). La m\u00e9thode `heappop()` retourne toujours l\u2019\u00e9l\u00e9ment ayant la plus petite valeur, ce qui est la cl\u00e9 pour faire en sorte que la file retourne les bons \u00e9l\u00e9ments lors du `pop()`. De plus, comme les op\u00e9rations de `push` et de `pop` ont une complexit\u00e9 en O(log N), o\u00f9 N est le nombre d\u2019\u00e9l\u00e9ments dans le tas, ces op\u00e9rations restent assez efficaces m\u00eame lorsque N est relativement grand.\r\n\r\nDans cet article, la file est constitu\u00e9e de tuples de la forme (priorit\u00e9, index, \u00e9l\u00e9ment). La priorit\u00e9 est n\u00e9gativ\u00e9e afin que la file trie les \u00e9l\u00e9ments de la priorit\u00e9 la plus \u00e9lev\u00e9e \u00e0 la plus faible. C\u2019est l\u2019inverse du comportement normal d\u2019un `heap`, qui trie par ordre croissant.\r\n\r\nLe r\u00f4le de la variable `index` est d\u2019assurer un ordre correct entre les \u00e9l\u00e9ments ayant le m\u00eame niveau de priorit\u00e9.\r\nEn utilisant un index constamment croissant, les \u00e9l\u00e9ments sont tri\u00e9s selon leur ordre d\u2019insertion.\r\nCependant, cet index joue aussi un r\u00f4le important dans les op\u00e9rations de comparaison, lorsque plusieurs \u00e9l\u00e9ments ont la m\u00eame priorit\u00e9. Pour d\u00e9velopper cela : les instances de `Item` dans l\u2019exemple ne sont pas comparables entre elles. Cela vous retournera une erreur. Par exemple :\r\n\r\n```python\r\na = Item('foo')\r\nb = Item('bar')\r\n\r\nprint(a < b)\r\n```\r\n\r\nSi vous cr\u00e9ez des tuples de la forme (priorit\u00e9, \u00e9l\u00e9ment), ils peuvent \u00eatre compar\u00e9s tant que les priorit\u00e9s sont diff\u00e9rentes.\r\nCependant, si deux tuples avec des priorit\u00e9s \u00e9gales sont compar\u00e9s, la comparaison \u00e9choue comme pr\u00e9c\u00e9demment.\r\nPar exemple :\r\n\r\n```python\r\na = (1, Item('foo'))\r\nb = (5, Item('bar'))\r\nprint(a < b) # True\r\n```\r\n\r\nEn introduisant un index suppl\u00e9mentaire et en cr\u00e9ant des tuples de la forme (priorit\u00e9, index, \u00e9l\u00e9ment), vous \u00e9vitez compl\u00e8tement ce probl\u00e8me, puisque aucun tuple n\u2019aura jamais la m\u00eame valeur d\u2019index.\r\nEt Python n\u2019essaie jamais de comparer les valeurs suivantes du tuple une fois que le r\u00e9sultat de la comparaison peut \u00eatre d\u00e9termin\u00e9.\r\n\r\n```python\r\na = (1, 0, Item('foo'))\r\nb = (5, 1, Item('bar'))\r\nc = (1, 2, Item('grok'))\r\nprint(a < b) # True\r\nprint(a < c) # True\r\n```\r\nSi vous souhaitez utiliser cette file pour la communication entre threads, vous devez ajouter les m\u00e9canismes de verrouillage (locking) et de signalement (signaling) appropri\u00e9s. La documentation du module heapq contient \u00e9galement d\u2019autres exemples et des explications plus approfondies sur la th\u00e9orie et l\u2019impl\u00e9mentation des tas (heaps).",
      "created": "2025-07-28T23:21:51.663238",
      "updated": "2025-07-29T00:02:35.816988",
      "meta_description": "Apprenez \u00e0 cr\u00e9er une file de priorit\u00e9 efficace en Python avec heapq, en g\u00e9rant les conflits de priorit\u00e9 et en optimisant l'ordre d'ex\u00e9cution.",
      "status_id": 3,
      "categories_id": 4
    },
    {
      "id": 42,
      "title": "Associer plusieurs valeurs \u00e0 une m\u00eame cl\u00e9 dans un dictionnaire",
      "slug": "associer-plusieurs-valeurs-a-une-meme-cle-dans-un-dictionnaire",
      "body": "Vous cherchez \u00e0 cr\u00e9er un dictionnaire capable d\u2019associer plusieurs valeurs \u00e0 une m\u00eame cl\u00e9, autrement dit un \u00ab multidictionnaire \u00bb. Un dictionnaire est une structure de donn\u00e9es qui associe chaque cl\u00e9 \u00e0 une seule valeur. Si vous souhaitez associer une cl\u00e9 \u00e0 plusieurs valeurs, vous devez stocker ces valeurs multiples dans un autre conteneur, comme une liste ou un ensemble `set`. Par exemple, vous pouvez cr\u00e9er des dictionnaires comme ceci :\r\n\r\n```python\r\nd = {\r\n    'a' : [1, 2, 3],\r\n    'b' : [4, 5]\r\n}\r\ne = {\r\n    'a' : {1, 2, 3},\r\n    'b' : {4, 5}\r\n}\r\n```\r\nLe choix entre utiliser des listes ou des ensembles `set` d\u00e9pend de l\u2019usage que vous souhaitez en faire. Utilisez une liste si vous voulez pr\u00e9server l\u2019ordre d\u2019insertion des \u00e9l\u00e9ments. Lorsque vous utilisez un `set` pour stocker plusieurs valeurs associ\u00e9es \u00e0 une m\u00eame cl\u00e9 dans un dictionnaire, il est important de garder \u00e0 l\u2019esprit que ce type de conteneur ne conserve pas l\u2019ordre des \u00e9l\u00e9ments et ne permet pas les doublons. Ainsi, si vous ajoutez plusieurs fois la m\u00eame valeur, elle ne sera stock\u00e9e qu\u2019une seule fois. Le comportement du `set` est un bon choix lorsque vous avez besoin de garantir l\u2019unicit\u00e9 des valeurs, comme dans le cas de cat\u00e9gories sans r\u00e9p\u00e9tition, de droits d\u2019acc\u00e8s ou des labels uniques.\r\n\r\nPour construire facilement ce type de dictionnaires (o\u00f9 une cl\u00e9 est associ\u00e9e \u00e0 plusieurs valeurs), vous pouvez utiliser la classe `defaultdict` du module `collections`. L\u2019un des avantages de `defaultdict`, c\u2019est qu\u2019il initialise automatiquement la premi\u00e8re valeur pour chaque nouvelle cl\u00e9, ce qui vous permet de vous concentrer uniquement sur l\u2019ajout des \u00e9l\u00e9ments. Par exemple :\r\n\r\n```python\r\nfrom collections import defaultdict\r\n\r\n\r\nd = defaultdict(list)\r\nd['a'].append(1)\r\nd['a'].append(2)\r\nd['a'].append(2)\r\nd['b'].append(4)\r\n\r\nprint(d)\r\n\r\nd = defaultdict(set)\r\nd['a'].add(1)\r\nd['a'].add(2)\r\nd['a'].add(2)\r\nd['b'].add(4)\r\n\r\nprint(d)\r\n```\r\n\r\n**Attention** : `defaultdict` cr\u00e9e automatiquement des entr\u00e9es dans le dictionnaire pour toute cl\u00e9 acc\u00e9d\u00e9e, m\u00eame si cette cl\u00e9 n\u2019existait pas auparavant. Si vous ne souhaitez pas ce comportement, vous pouvez plut\u00f4t utiliser la m\u00e9thode setdefault() sur un dictionnaire standard (dict). Par exemple :\r\n\r\n```python\r\nd = {} # A regular dictionary\r\n\r\nd.setdefault('a', []).append(1)\r\nd.setdefault('a', []).append(2)\r\nd.setdefault('b', []).append(4)\r\n```\r\n\r\nCependant, de nombreux d\u00e9veloppeurs trouvent que l\u2019utilisation de `setdefault()` est un peu contre-intuitive. Sans parler du fait qu\u2019elle cr\u00e9e \u00e0 chaque appel une nouvelle instance de la valeur initiale (par exemple, une liste vide [] dans l\u2019exemple).\r\n\r\nEn principe, la construction d\u2019un dictionnaire \u00e0 valeurs multiples est simple. Cependant, l\u2019initialisation de la premi\u00e8re valeur peut devenir fastidieuse si vous tentez de la g\u00e9rer manuellement. Par exemple, vous pourriez vous retrouver avec un code ressemblant \u00e0 ceci :\r\n\r\n```python\r\nd = {}\r\nfor key, value in pairs:\r\n    if key not in d:\r\n        d[key] = []\r\n    d[key].append(value)\r\n```\r\n\r\nL\u2019utilisation d\u2019un `defaultdict` permet simplement d\u2019obtenir un code beaucoup plus clair et lisible :\r\n\r\n```python\r\nd = defaultdict(list)\r\nfor key, value in pairs:\r\n    d[key].append(value)\r\n```",
      "created": "2025-07-30T03:04:16.978993",
      "updated": "2025-07-30T03:39:18.646940",
      "meta_description": "Associez plusieurs valeurs \u00e0 une cl\u00e9 dans un dictionnaire Python facilement avec list, set, defaultdict ou setdefault. Exemples et conseils pratiques.",
      "status_id": 3,
      "categories_id": 4
    },
    {
      "id": 43,
      "title": "Les liens d'\u00e9vitement",
      "slug": "les-liens-d-evitement",
      "body": "Pour les personnes qui utilisent uniquement le clavier pour naviguer, une page web comportant de nombreux \u00e9l\u00e9ments interactifs n\u00e9cessite souvent plusieurs actions r\u00e9p\u00e9titives, comme appuyer plusieurs fois sur la touche `Tab`, actionner un bouton sur un dispositif de commutation, ou manipuler une technologie d\u2019assistance avec les mains, les bras, la bouche ou la t\u00eate. Ces efforts r\u00e9p\u00e9t\u00e9s peuvent rapidement devenir fatigants, voire douloureux, rendant la navigation physiquement exigeante.\r\n\r\nPour r\u00e9soudre ce probl\u00e8me, il vous suffit d'int\u00e9grer des liens d\u2019acc\u00e8s rapide vers les sections d\u2019une page contenant de nombreux \u00e9l\u00e9ments interactifs, permettant ainsi aux utilisateurs de les ignorer facilement pour poursuivre leur navigation ailleurs, comme illustr\u00e9 dans cet [exemple](#exemple-1) : \r\n\r\n**<span id=\"exemple-1\">Exemple&nbsp;1</span>&nbsp;&ndash;&nbsp;Un lien (visuellement cach\u00e9 et visible uniquement lorsqu'il re\u00e7oit le focus) dans l'en-t\u00eate de la page qui permet aux utilisateurs de passer au contenu principal.**\r\n\r\n```html\r\n<style>\r\n.skip-link {\r\n  background-color: #fff;\r\n  position: absolute;\r\n  padding: 0.2em;\r\n  display: block;\r\n}\r\n\r\n/* Cache le lien uniquement lorsqu'il n'est pas focalis\u00e9 ou actif. */\r\n.skip-link:not(:focus):not(:active) { \r\n  clip-path: inset(50%);\r\n  height: 1px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  width: 1px;\r\n}\r\n</style>\r\n<header>\r\n  <a href=\"#content\" class=\"skip-link\">Aller au contenu</a>\r\n\t<!-- Visuellement cach\u00e9 mais accessible via le clavier et le lecteur d'\u00e9cran. -->\r\n  <nav>\r\n    <!-- etc. -->\r\n  </nav>\r\n</header>\r\n<main id=\"content\">\r\n\r\n</main>\r\n```\r\n\r\nSi vous visitez le site <a href=\"https://alsacreations.com\" target=\"_blank\">Alsacr\u00e9ations.com</a> vous remarquerez que dans l'en-t\u00eate en haut, il y a une pl\u00e9thore d'\u00e9l\u00e9ments interactifs. Selon la page \u00e0 laquelle l'utilisateur du clavier acc\u00e8de, il devra appuyer sur la touche `Tab` (ou sur un bouton d'un dispositif de commutation) X fois sur chaque page qu'il visite. C'est ennuyeux et cela peut faire mal physiquement et m\u00eame aggraver les microtraumatismes r\u00e9p\u00e9t\u00e9s.\r\n\r\nHeureusement, il existe un lien d'\u00e9vitement sur le site Alsacreations. Un lien d'\u00e9vitement est un lien d'ancrage qui pointe vers une autre partie de la page, permettant d'y acc\u00e9der en cliquant sur le lien. Il s'agit g\u00e9n\u00e9ralement du premier \u00e9l\u00e9ment focalisable dans le DOM, visuellement cach\u00e9 et visible uniquement lorsqu'il re\u00e7oit la focalisation. L'[exemple](#exemple-1) pr\u00e9c\u00e9dent illustre une bonne impl\u00e9mentation.\r\n\r\nLes liens d'\u00e9vitement peuvent \u00eatre incroyablement utiles lorsqu'il y a beaucoup d'\u00e9l\u00e9ments interactifs avant le contenu principal de la page. Si l'on reprend l'exemple d du site Alsacr\u00e9ations, avec les liens d'\u00e9vitement (visible en haut \u00e0 gauche de la page parce qu'il est actuellement focalis\u00e9), les utilisateurs n'ont \u00e0 appuyer que deux fois sur `Tab` au lieu de X fois pour acc\u00e9der au contenu principal de la page. Cela dit, l'utilisation d'un lien d'\u00e9vitement peut \u00eatre contre-productive s'il n'y a qu'un ou deux \u00e9l\u00e9ments focalisables avant le contenu principal.\r\n\r\nSur la plupart des sites qui mettent en place des liens d'\u00e9vitement, vous trouverez un seul lien \u00ab passer au contenu \u00bb dans l'en-t\u00eate, mais certains proposent des liens suppl\u00e9mentaires pour acc\u00e9der \u00e0 la navigation, \u00e0 la recherche ou au pied de page comme le fait Alsacr\u00e9ations. La n\u00e9cessit\u00e9 de ces liens d\u00e9pend de la taille de votre site et de la densit\u00e9 d'information de votre en-t\u00eate et de votre pied de page. \r\n\r\nLorsque vous avez des sections avec de nombreux \u00e9l\u00e9ments interactifs, l'ajout de liens d'\u00e9vitement \u00e0 l'int\u00e9rieur de la page peut \u00e9galement s'av\u00e9rer utile. Les exemples typiques sont les widgets de m\u00e9dias sociaux, les cartes et les barres lat\u00e9rales. \r\n\r\nSelon le <a href=\"https://webaim.org/projects/million/#skip\" target=\"_blank\">rapport WebAIM Million 2024</a>, 13,3 % des sites web test\u00e9s avaient un lien d'\u00e9vitement. Cependant, un de ces liens sur six \u00e9tait cass\u00e9 parce qu'il \u00e9tait mal cach\u00e9 ou que la cible n'existait pas. L'utilisation de `display: none` ne permet pas de cacher les liens de saut. Vous devez utiliser une m\u00e9thode accessible, comme l'illustre l'[exemple](#exemple-1) pr\u00e9c\u00e9demment pr\u00e9sent\u00e9. Je vous recommande \u00e9galement d'afficher le lien d'\u00e9vitement au moment de la mise au point, car le fait de se concentrer sur un lien visuellement cach\u00e9 peut perturber les utilisateurs de clavier. \r\n\r\nL'objectif des liens d'\u00e9vitement est de rendre la navigation au clavier plus efficace. Choisissez les liens d'\u00e9vitement dont vous avez besoin en fonction de l'int\u00e9r\u00eat qu'ils pr\u00e9sentent pour les utilisateurs de votre site.",
      "created": "2025-07-30T03:49:14.534927",
      "updated": "2025-07-30T04:46:14.332022",
      "meta_description": "D\u00e9couvrez comment les liens d\u2019\u00e9vitement am\u00e9liorent la navigation clavier, avec un exemple concret et des bonnes pratiques en HTML et CSS accessibles.",
      "status_id": 3,
      "categories_id": 2
    },
    {
      "id": 44,
      "title": "Conserver l\u2019ordre dans un dictionnaire Python : quand utiliser OrderedDict ?",
      "slug": "conserver-lordre-dans-un-dictionnaire-python-quand-utiliser-ordereddict",
      "body": "Vous devez g\u00e9n\u00e9rer un fichier JSON pour une API tierce qui exige un ordre strict des champs.\r\nVous pensez naturellement \u00e0 utiliser un dictionnaire Python\u2026 mais comment vous assurer que les champs appara\u00eetront dans le bon ordre lors de la s\u00e9rialisation&nbsp;?\r\n\r\n## Utiliser `OrderedDict` pour garantir l\u2019ordre\r\n\r\nPour contr\u00f4ler l\u2019ordre des \u00e9l\u00e9ments dans un dictionnaire, Python propose la classe `OrderedDict` dans le module `collections`. Cette structure de donn\u00e9es pr\u00e9serve exactement l\u2019ordre d\u2019insertion des paires cl\u00e9-valeur, ce qui est utile pour l\u2019it\u00e9ration ou la s\u00e9rialisation (par exemple en JSON). Voici un exemple simple :\r\n\r\n```python\r\nfrom collections import OrderedDict\r\n\r\n\r\nd = OrderedDict()\r\n\r\nd['a'] = 1\r\nd['b'] = 2\r\nd['c'] = 3\r\nd['d'] = 4\r\nd['e'] = 5\r\n\r\nfor k, v in d.items():\r\n    print(k, v)\r\n```\r\n\r\nLorsqu'on s\u00e9rialise ce dictionnaire avec json.dumps(), l\u2019ordre est respect\u00e9 :\r\n\r\n```python\r\nimport json\r\n\r\n\r\nprint(json.dumps(d))\r\n```\r\n\r\nCe comportement est particuli\u00e8rement utile si vous avez besoin de g\u00e9n\u00e9rer un mapping structur\u00e9 dans un format externe (JSON, XML, CSV\u2026) o\u00f9 l\u2019ordre des champs est important.\r\n\r\n## Fonctionnement interne\r\n\r\nUn `OrderedDict` repose sur une liste doublement cha\u00een\u00e9e pour maintenir l\u2019ordre des cl\u00e9s. Quand un \u00e9l\u00e9ment est ajout\u00e9, il est plac\u00e9 \u00e0 la fin de cette liste. Si vous modifiez la valeur d\u2019une cl\u00e9 d\u00e9j\u00e0 pr\u00e9sente, son positionnement ne change pas.\r\n\r\n### Inconv\u00e9nient : le co\u00fbt m\u00e9moire\r\n\r\nUn `OrderedDict` est plus lourd qu\u2019un dictionnaire classique. Par exemple :\r\n\r\n```python\r\nimport sys\r\nfrom collections import OrderedDict\r\n\r\n\r\nd1 = {'a': 1, 'b': 2, 'c': 3}\r\nd2 = OrderedDict(d1)\r\n\r\nprint(sys.getsizeof(d1))  # ~232 octets\r\nprint(sys.getsizeof(d2))  # ~456 octets\r\n```\r\n\r\nR\u00e9sultat : un OrderedDict peut consommer deux fois plus de m\u00e9moire qu\u2019un dict.\r\nSi vous chargez des dizaines de milliers d\u2019objets (ex. : parsing de CSV), ce surco\u00fbt peut devenir un facteur limitant.\r\n\r\n### \u00c0 savoir : les dict sont ordonn\u00e9s depuis Python 3.7\r\n\r\nDepuis Python 3.7, les dictionnaires standards (dict) conservent d\u00e9j\u00e0 l\u2019ordre d\u2019insertion des \u00e9l\u00e9ments. Ce comportement, apparu en Python 3.6 comme un d\u00e9tail d\u2019impl\u00e9mentation, est devenu une caract\u00e9ristique officielle du langage. Autrement dit : dans une version moderne de Python, le code ci-dessous produira un JSON dans le m\u00eame ordre que l\u2019insertion.\r\n\r\n```python\r\nd = {'a': 1, 'b': 2, 'c': 3}\r\nprint(json.dumps(d))\r\n```\r\n\r\nSi vous utilisez Python 3.7 ou sup\u00e9rieur (ce qui est tr\u00e8s probable aujourd\u2019hui), et que vous n\u2019avez pas besoin de m\u00e9thodes sp\u00e9cifiques \u00e0 `OrderedDict` comme `move_to_end()` ou `popitem(last=False)`, alors un simple dict est suffisant et plus l\u00e9ger en m\u00e9moire.\r\n\r\n### M\u00e9thodes avanc\u00e9es de OrderedDict\r\n\r\nAu-del\u00e0 de la simple conservation de l\u2019ordre, `OrderedDict` offre des m\u00e9thodes sp\u00e9cifiques pour manipuler pr\u00e9cis\u00e9ment la position des \u00e9l\u00e9ments. `move_to_end(key, last=True)` : d\u00e9place une cl\u00e9 existante \u00e0 la fin (par d\u00e9faut) ou au d\u00e9but (last=False) du dictionnaire.\r\n\r\n```python\r\nfrom collections import OrderedDict\r\n\r\nd = OrderedDict()\r\nd['a'] = 1\r\nd['b'] = 2\r\nd['c'] = 3\r\n\r\nprint(\"Avant :\", list(d.items()))\r\n\r\n# On d\u00e9place 'a' \u00e0 la fin\r\nd.move_to_end('a')\r\n\r\nprint(\"Apr\u00e8s move_to_end('a') :\", list(d.items()))\r\n\r\n# On d\u00e9place 'c' au d\u00e9but\r\nd.move_to_end('c', last=False)\r\n\r\nprint(\"Apr\u00e8s move_to_end('c', last=False) :\", list(d.items()))\r\n```\r\n\r\n`popitem(last=True)` : supprime et retourne une paire cl\u00e9-valeur. Par d\u00e9faut, elle retire le dernier \u00e9l\u00e9ment `(last=True)`, mais on peut retirer le premier en passant `last=False`.\r\n\r\n```python\r\nfrom collections import OrderedDict\r\n\r\nd = OrderedDict([('a', 1), ('b', 2), ('c', 3)])\r\n\r\n# Retire le dernier \u00e9l\u00e9ment\r\nlast_item = d.popitem()\r\nprint(\"popitem() =>\", last_item)\r\nprint(\"Reste :\", list(d.items()))\r\n\r\n# Retire le premier \u00e9l\u00e9ment\r\nfirst_item = d.popitem(last=False)\r\nprint(\"popitem(last=False) =>\", first_item)\r\nprint(\"Reste :\", list(d.items()))\r\n```\r\n\r\nCes m\u00e9thodes permettent de g\u00e9rer des files d\u2019attente, des caches ou des structures o\u00f9 l\u2019ordre et la manipulation fine des \u00e9l\u00e9ments sont importants.\r\n",
      "created": "2025-08-01T04:05:40.962461",
      "updated": "2025-08-01T05:05:13.606758",
      "meta_description": "OrderedDict en Python : quand l'utiliser ? D\u00e9couvrez l'impact m\u00e9moire, la diff\u00e9rence avec un dict standard (3.7+) et les m\u00e9thodes avanc\u00e9es.",
      "status_id": 3,
      "categories_id": 4
    }
  ],
  "tag": [
    {
      "id": 1,
      "name": "html",
      "slug": "html"
    },
    {
      "id": 2,
      "name": "accessibilit\u00e9",
      "slug": "accessibilite"
    },
    {
      "id": 3,
      "name": "seo",
      "slug": "seo"
    },
    {
      "id": 4,
      "name": "ux",
      "slug": "ux"
    },
    {
      "id": 5,
      "name": "django",
      "slug": "django"
    },
    {
      "id": 6,
      "name": "python",
      "slug": "python"
    },
    {
      "id": 7,
      "name": "d\u00e9veloppement",
      "slug": "developpement"
    },
    {
      "id": 8,
      "name": "cybers\u00e9curit\u00e9",
      "slug": "cybersecurite"
    },
    {
      "id": 9,
      "name": "flask",
      "slug": "flask"
    },
    {
      "id": 10,
      "name": "SQLAlchemy",
      "slug": "sqlalchemy"
    },
    {
      "id": 11,
      "name": "javascript",
      "slug": "javascript"
    },
    {
      "id": 12,
      "name": "css",
      "slug": "css"
    }
  ],
  "posttag": [
    {
      "id": 65,
      "posts_id": 1,
      "tags_id": 1
    },
    {
      "id": 66,
      "posts_id": 1,
      "tags_id": 2
    },
    {
      "id": 67,
      "posts_id": 1,
      "tags_id": 3
    },
    {
      "id": 68,
      "posts_id": 1,
      "tags_id": 4
    },
    {
      "id": 69,
      "posts_id": 2,
      "tags_id": 5
    },
    {
      "id": 70,
      "posts_id": 2,
      "tags_id": 6
    },
    {
      "id": 71,
      "posts_id": 2,
      "tags_id": 7
    },
    {
      "id": 72,
      "posts_id": 2,
      "tags_id": 8
    },
    {
      "id": 74,
      "posts_id": 4,
      "tags_id": 7
    },
    {
      "id": 76,
      "posts_id": 6,
      "tags_id": 7
    },
    {
      "id": 77,
      "posts_id": 5,
      "tags_id": 7
    },
    {
      "id": 130,
      "posts_id": 7,
      "tags_id": 1
    },
    {
      "id": 131,
      "posts_id": 7,
      "tags_id": 2
    },
    {
      "id": 132,
      "posts_id": 7,
      "tags_id": 3
    },
    {
      "id": 133,
      "posts_id": 7,
      "tags_id": 4
    },
    {
      "id": 153,
      "posts_id": 9,
      "tags_id": 1
    },
    {
      "id": 154,
      "posts_id": 9,
      "tags_id": 2
    },
    {
      "id": 155,
      "posts_id": 9,
      "tags_id": 4
    },
    {
      "id": 168,
      "posts_id": 10,
      "tags_id": 1
    },
    {
      "id": 169,
      "posts_id": 10,
      "tags_id": 2
    },
    {
      "id": 170,
      "posts_id": 10,
      "tags_id": 3
    },
    {
      "id": 171,
      "posts_id": 10,
      "tags_id": 4
    },
    {
      "id": 222,
      "posts_id": 11,
      "tags_id": 1
    },
    {
      "id": 223,
      "posts_id": 11,
      "tags_id": 2
    },
    {
      "id": 224,
      "posts_id": 11,
      "tags_id": 3
    },
    {
      "id": 225,
      "posts_id": 11,
      "tags_id": 4
    },
    {
      "id": 332,
      "posts_id": 13,
      "tags_id": 6
    },
    {
      "id": 333,
      "posts_id": 13,
      "tags_id": 7
    },
    {
      "id": 402,
      "posts_id": 15,
      "tags_id": 1
    },
    {
      "id": 403,
      "posts_id": 15,
      "tags_id": 2
    },
    {
      "id": 404,
      "posts_id": 15,
      "tags_id": 3
    },
    {
      "id": 405,
      "posts_id": 15,
      "tags_id": 4
    },
    {
      "id": 469,
      "posts_id": 17,
      "tags_id": 1
    },
    {
      "id": 470,
      "posts_id": 17,
      "tags_id": 2
    },
    {
      "id": 471,
      "posts_id": 17,
      "tags_id": 3
    },
    {
      "id": 472,
      "posts_id": 17,
      "tags_id": 4
    },
    {
      "id": 577,
      "posts_id": 18,
      "tags_id": 1
    },
    {
      "id": 578,
      "posts_id": 18,
      "tags_id": 2
    },
    {
      "id": 579,
      "posts_id": 18,
      "tags_id": 3
    },
    {
      "id": 580,
      "posts_id": 18,
      "tags_id": 4
    },
    {
      "id": 581,
      "posts_id": 12,
      "tags_id": 1
    },
    {
      "id": 582,
      "posts_id": 12,
      "tags_id": 2
    },
    {
      "id": 583,
      "posts_id": 12,
      "tags_id": 3
    },
    {
      "id": 584,
      "posts_id": 12,
      "tags_id": 4
    },
    {
      "id": 616,
      "posts_id": 14,
      "tags_id": 6
    },
    {
      "id": 617,
      "posts_id": 14,
      "tags_id": 7
    },
    {
      "id": 618,
      "posts_id": 14,
      "tags_id": 9
    },
    {
      "id": 631,
      "posts_id": 19,
      "tags_id": 1
    },
    {
      "id": 632,
      "posts_id": 19,
      "tags_id": 2
    },
    {
      "id": 633,
      "posts_id": 19,
      "tags_id": 3
    },
    {
      "id": 634,
      "posts_id": 19,
      "tags_id": 4
    },
    {
      "id": 675,
      "posts_id": 20,
      "tags_id": 1
    },
    {
      "id": 676,
      "posts_id": 20,
      "tags_id": 2
    },
    {
      "id": 677,
      "posts_id": 20,
      "tags_id": 3
    },
    {
      "id": 678,
      "posts_id": 20,
      "tags_id": 4
    },
    {
      "id": 709,
      "posts_id": 21,
      "tags_id": 1
    },
    {
      "id": 710,
      "posts_id": 21,
      "tags_id": 2
    },
    {
      "id": 711,
      "posts_id": 21,
      "tags_id": 3
    },
    {
      "id": 712,
      "posts_id": 21,
      "tags_id": 4
    },
    {
      "id": 777,
      "posts_id": 22,
      "tags_id": 1
    },
    {
      "id": 778,
      "posts_id": 22,
      "tags_id": 2
    },
    {
      "id": 779,
      "posts_id": 22,
      "tags_id": 3
    },
    {
      "id": 780,
      "posts_id": 22,
      "tags_id": 4
    },
    {
      "id": 825,
      "posts_id": 23,
      "tags_id": 1
    },
    {
      "id": 826,
      "posts_id": 23,
      "tags_id": 2
    },
    {
      "id": 827,
      "posts_id": 23,
      "tags_id": 3
    },
    {
      "id": 828,
      "posts_id": 23,
      "tags_id": 4
    },
    {
      "id": 861,
      "posts_id": 24,
      "tags_id": 1
    },
    {
      "id": 862,
      "posts_id": 24,
      "tags_id": 2
    },
    {
      "id": 863,
      "posts_id": 24,
      "tags_id": 3
    },
    {
      "id": 864,
      "posts_id": 24,
      "tags_id": 4
    },
    {
      "id": 889,
      "posts_id": 25,
      "tags_id": 1
    },
    {
      "id": 890,
      "posts_id": 25,
      "tags_id": 2
    },
    {
      "id": 891,
      "posts_id": 25,
      "tags_id": 3
    },
    {
      "id": 892,
      "posts_id": 25,
      "tags_id": 4
    },
    {
      "id": 893,
      "posts_id": 8,
      "tags_id": 6
    },
    {
      "id": 894,
      "posts_id": 8,
      "tags_id": 7
    },
    {
      "id": 895,
      "posts_id": 8,
      "tags_id": 9
    },
    {
      "id": 976,
      "posts_id": 26,
      "tags_id": 1
    },
    {
      "id": 977,
      "posts_id": 26,
      "tags_id": 2
    },
    {
      "id": 978,
      "posts_id": 26,
      "tags_id": 3
    },
    {
      "id": 979,
      "posts_id": 26,
      "tags_id": 4
    },
    {
      "id": 980,
      "posts_id": 26,
      "tags_id": 11
    },
    {
      "id": 1005,
      "posts_id": 16,
      "tags_id": 6
    },
    {
      "id": 1006,
      "posts_id": 16,
      "tags_id": 7
    },
    {
      "id": 1007,
      "posts_id": 16,
      "tags_id": 9
    },
    {
      "id": 1008,
      "posts_id": 16,
      "tags_id": 10
    },
    {
      "id": 1180,
      "posts_id": 28,
      "tags_id": 1
    },
    {
      "id": 1181,
      "posts_id": 28,
      "tags_id": 2
    },
    {
      "id": 1182,
      "posts_id": 28,
      "tags_id": 3
    },
    {
      "id": 1183,
      "posts_id": 28,
      "tags_id": 4
    },
    {
      "id": 1205,
      "posts_id": 3,
      "tags_id": 7
    },
    {
      "id": 1206,
      "posts_id": 27,
      "tags_id": 1
    },
    {
      "id": 1207,
      "posts_id": 27,
      "tags_id": 2
    },
    {
      "id": 1208,
      "posts_id": 27,
      "tags_id": 3
    },
    {
      "id": 1209,
      "posts_id": 27,
      "tags_id": 4
    },
    {
      "id": 1210,
      "posts_id": 27,
      "tags_id": 11
    },
    {
      "id": 1235,
      "posts_id": 29,
      "tags_id": 1
    },
    {
      "id": 1236,
      "posts_id": 29,
      "tags_id": 2
    },
    {
      "id": 1237,
      "posts_id": 29,
      "tags_id": 3
    },
    {
      "id": 1238,
      "posts_id": 29,
      "tags_id": 4
    },
    {
      "id": 1309,
      "posts_id": 30,
      "tags_id": 1
    },
    {
      "id": 1310,
      "posts_id": 30,
      "tags_id": 2
    },
    {
      "id": 1311,
      "posts_id": 30,
      "tags_id": 3
    },
    {
      "id": 1312,
      "posts_id": 30,
      "tags_id": 4
    },
    {
      "id": 1313,
      "posts_id": 30,
      "tags_id": 12
    },
    {
      "id": 1343,
      "posts_id": 31,
      "tags_id": 1
    },
    {
      "id": 1344,
      "posts_id": 31,
      "tags_id": 2
    },
    {
      "id": 1345,
      "posts_id": 31,
      "tags_id": 4
    },
    {
      "id": 1346,
      "posts_id": 31,
      "tags_id": 11
    },
    {
      "id": 1375,
      "posts_id": 32,
      "tags_id": 1
    },
    {
      "id": 1376,
      "posts_id": 32,
      "tags_id": 2
    },
    {
      "id": 1377,
      "posts_id": 32,
      "tags_id": 4
    },
    {
      "id": 1405,
      "posts_id": 33,
      "tags_id": 1
    },
    {
      "id": 1406,
      "posts_id": 33,
      "tags_id": 2
    },
    {
      "id": 1407,
      "posts_id": 33,
      "tags_id": 4
    },
    {
      "id": 1408,
      "posts_id": 33,
      "tags_id": 12
    },
    {
      "id": 1436,
      "posts_id": 34,
      "tags_id": 1
    },
    {
      "id": 1437,
      "posts_id": 34,
      "tags_id": 2
    },
    {
      "id": 1438,
      "posts_id": 34,
      "tags_id": 4
    },
    {
      "id": 1485,
      "posts_id": 36,
      "tags_id": 6
    },
    {
      "id": 1486,
      "posts_id": 35,
      "tags_id": 1
    },
    {
      "id": 1487,
      "posts_id": 35,
      "tags_id": 2
    },
    {
      "id": 1488,
      "posts_id": 35,
      "tags_id": 4
    },
    {
      "id": 1489,
      "posts_id": 35,
      "tags_id": 11
    },
    {
      "id": 1490,
      "posts_id": 35,
      "tags_id": 12
    },
    {
      "id": 1525,
      "posts_id": 37,
      "tags_id": 1
    },
    {
      "id": 1526,
      "posts_id": 37,
      "tags_id": 2
    },
    {
      "id": 1527,
      "posts_id": 37,
      "tags_id": 4
    },
    {
      "id": 1528,
      "posts_id": 37,
      "tags_id": 11
    },
    {
      "id": 1545,
      "posts_id": 38,
      "tags_id": 1
    },
    {
      "id": 1546,
      "posts_id": 38,
      "tags_id": 2
    },
    {
      "id": 1547,
      "posts_id": 38,
      "tags_id": 4
    },
    {
      "id": 1548,
      "posts_id": 38,
      "tags_id": 12
    },
    {
      "id": 1552,
      "posts_id": 39,
      "tags_id": 6
    },
    {
      "id": 1559,
      "posts_id": 40,
      "tags_id": 6
    },
    {
      "id": 1563,
      "posts_id": 41,
      "tags_id": 6
    },
    {
      "id": 1568,
      "posts_id": 42,
      "tags_id": 6
    },
    {
      "id": 1605,
      "posts_id": 43,
      "tags_id": 1
    },
    {
      "id": 1606,
      "posts_id": 43,
      "tags_id": 2
    },
    {
      "id": 1607,
      "posts_id": 43,
      "tags_id": 4
    },
    {
      "id": 1608,
      "posts_id": 43,
      "tags_id": 12
    },
    {
      "id": 1617,
      "posts_id": 44,
      "tags_id": 6
    }
  ],
  "status": [
    {
      "id": 1,
      "name": "brouillon"
    },
    {
      "id": 2,
      "name": "offline"
    },
    {
      "id": 3,
      "name": "online"
    }
  ],
  "category": [
    {
      "id": 1,
      "name": "divers",
      "slug": "",
      "description": "r\u00e9flexions autour de la tech"
    },
    {
      "id": 2,
      "name": "HTML",
      "slug": "",
      "description": "Code propre, accessible et optimis\u00e9"
    },
    {
      "id": 3,
      "name": "Flask",
      "slug": "",
      "description": "Construire des backends solides en Python"
    },
    {
      "id": 4,
      "name": "Python",
      "slug": "python",
      "description": "R\u00e9flexion autour de Python "
    }
  ]
}